{"version":3,"sources":["webpack://chillicream-website/./src/components/articles/article-elements.tsx","webpack://chillicream-website/./src/components/blog-article/blog-article-metadata.tsx","webpack://chillicream-website/./src/components/blog-article/blog-article-tags.tsx","webpack://chillicream-website/./src/components/misc/pagination.tsx","webpack://chillicream-website/./src/components/widgets/blog-articles.tsx","webpack://chillicream-website/./src/shared-style.ts","webpack://chillicream-website/./src/templates/blog-articles-template.tsx"],"names":["ArticleHeader","styled","kind","IsSmallDesktop","ArticleTitle","ArticleContent","BlogArticleMetadata","data","fields","frontmatter","Metadata","AuthorLink","to","authorUrl","AuthorImage","src","authorImageUrl","author","date","readingTime","text","Link","BlogArticleTags","tags","length","Tags","map","tag","Tag","key","TagLink","Pagination","currentPage","linkPrefix","totalPages","items","i","page","suffix","push","link","Container","item","Page","className","undefined","PageLink","BlogArticles","edges","node","existingTags","filter","featuredImage","childImageSharp","gatsbyImageData","Article","id","path","G","image","alt","title","IsMobile","innerStyle","css","IsPhablet","IsTablet","SmallDesktopBreakpointNumber","SmallDesktopBreakpoint","DesktopBreakpoint","IsDesktop","DocPageDesktopGridColumns","BoxShadow","pageContext","numPages","allMdx"],"mappings":"wOAGaA,EAAgBC,uBAAH,uEAAGA,CAAH,2JAGtB,kBACS,QADT,EAAGC,MAECC,QAAe,gCAGf,MASKC,EAAeH,mBAAH,sEAAGA,CAAH,0GASZI,EAAiBJ,oBAAH,wEAAGA,CAAH,+1B,oGCnBdK,EAAwE,SAAC,GAE/E,IAAD,IADJC,KAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,YAEhB,OACE,gBAACC,EAAD,KACE,gBAACC,EAAD,CAAYC,GAAIH,EAAaI,WAC3B,gBAACC,EAAD,CAAaC,IAAKN,EAAaO,iBAC9BP,EAAaQ,QACF,IAJhB,KAKKR,EAAaS,KALlB,MAK4BV,EAAQW,YAAaC,OAqB/CV,EAAWT,oBAAH,2EAAGA,CAAH,2JAYRU,GAAaV,QAAOoB,KAAV,wFAAGpB,CAAH,+FAQVa,EAAcb,oBAAH,8EAAGA,CAAH,sE,oGCnDJqB,EAAgE,SAAC,GAEvE,IADLC,EACI,EADJA,KAEA,OACE,gCACGA,EAAKC,OAAS,GACb,gBAACC,EAAD,KACGF,EAAKG,KAAI,SAACC,GAAD,OACR,gBAACC,EAAD,CAAKC,IAAKF,GACR,gBAACG,EAAD,CAASlB,GAAE,cAAgBe,GAAQA,UAe3CF,EAAOxB,mBAAH,mEAAGA,CAAH,2GASJ2B,EAAM3B,mBAAH,kEAAGA,CAAH,wMAWH6B,GAAU7B,QAAOoB,KAAV,iFAAGpB,CAAH,uE,sJC3CA8B,EAAsD,SAAC,GAOlE,IAHK,IAHLC,EAGI,EAHJA,YACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAEMC,EAA0C,GAEvCC,EAAI,EAAGA,EAAIF,EAAYE,IAAK,CACnC,IAAMC,EAAOD,EAAI,EACXE,EAAkB,IAATD,EAAa,GAAK,IAAMA,EAEvCF,EAAMI,KAAK,CAAEF,OAAMG,KAAMP,EAAaK,IAGxC,OACE,gBAACG,EAAD,KACGN,EAAMT,KAAI,SAACgB,GAAD,OACT,gBAACC,EAAD,CACEd,IAAG,QAAUa,EAAKL,KAClBO,UAAWF,EAAKL,OAASL,EAAc,cAAWa,GAElD,gBAACC,EAAD,CAAUlC,GAAI8B,EAAKF,MAAOE,EAAKL,YAOnCI,EAAYxC,mBAAH,6DAAGA,CAAH,qDAMT0C,EAAO1C,mBAAH,wDAAGA,CAAH,qLAaJ6C,GAAW7C,QAAOoB,QAAV,uEAAGpB,CAAH,sICxCD8C,EAA0D,SAAC,GAIjE,IAHLf,EAGI,EAHJA,YACQgB,EAEJ,EAFJzC,KAAQyC,MACRd,EACI,EADJA,WAEA,OACE,gCACE,gBAAC,EAAD,KACGc,EAAMtB,KAAI,YAAe,IAAD,MAAXuB,EAAW,EAAXA,KACNC,EAAyBD,SAAA,UAAAA,EAAMxC,mBAAN,SAAmBc,KAC7C0B,EAAKxC,YAAYc,KAAK4B,QACrB,SAACxB,GAAD,OAASA,GAAOA,EAAIH,OAAS,KAE/B,GACE4B,EACJH,SADiB,UACjBA,EAAMxC,YAAa2C,qBADF,iBACjB,EAAkCC,uBADjB,aACjB,EAAmDC,gBAErD,OACE,gBAACC,EAAD,CAAS1B,IAAG,WAAaoB,EAAKO,IAC5B,gBAAC,IAAD,CAAM5C,GAAIqC,EAAKxC,YAAagD,MACzBL,GACC,gBAAC,EAAAM,EAAD,CACEC,MAAOP,EACPQ,IAAKX,EAAKxC,YAAaoD,QAG3B,gBAAC,KAAD,KAAeZ,EAAKxC,YAAaoD,QAEnC,gBAAC,IAAD,CAAqBtD,KAAM0C,IAC3B,gBAAC,IAAD,CAAiB1B,KAAM2B,SAK9BlB,GAAeE,GACd,gBAACH,EAAD,CACEC,YAAaA,EACbC,WAAW,QACXC,WAAYA,MAgChBO,EAAYxC,mBAAH,gEAAGA,CAAH,uHAUTsD,EAAUtD,mBAAH,8DAAGA,CAAH,mO,yPC9FN,SAAS6D,EAASC,GACvB,OAAOC,QAAP,gDAF8B,QAIxBD,GAMD,SAASE,EAAUF,GACxB,OAAOC,QAAP,gDAF+B,QAIzBD,GAMD,SAASG,EAASH,GACvB,OAAOC,QAAP,gDAF8B,SAIxBD,GAKD,IAAMI,EAA+B,KAC/BC,EAAyBD,EAA+B,KAC9D,SAAShE,EAAe4D,GAC7B,OAAOC,QAAP,gDACuCI,EACjCL,GAKD,IACMM,EAD0BF,EAA+B,EACX,KACpD,SAASG,EAAUP,GACxB,OAAOC,QAAP,gDACuCK,EACjCN,GAKD,IAAMQ,GAA4BP,QAAH,sDAGzBQ,GAAYR,QAAH,mD,oFCxBtB,UAhBgF,SAAC,GAG1E,IAAD,IAFJS,YAAezC,EAEX,EAFWA,YAAa0C,EAExB,EAFwBA,SACpBC,EACJ,EADJpE,KAAQoE,OAER,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKd,MAAM,kBACX,gBAAC,IAAD,CACE7B,YAAaA,EACbzB,KAAMoE,EACNzC,WAAYwC","file":"component---src-templates-blog-articles-template-tsx-f4a565aad77e998ebd1e.js","sourcesContent":["import styled from \"styled-components\";\nimport { IsSmallDesktop } from \"../../shared-style\";\n\nexport const ArticleHeader = styled.header<{ readonly kind: \"blog\" | \"doc\" }>`\n  position: relative;\n\n  ${({ kind }) =>\n    kind === \"doc\"\n      ? IsSmallDesktop(`\n    padding-top: 60px;\n  `)\n      : \"\"}\n\n  @media only screen and (min-width: 820px) {\n    > .gatsby-image-wrapper {\n      border-radius: var(--border-radius) var(--border-radius) 0 0;\n    }\n  }\n`;\n\nexport const ArticleTitle = styled.h1`\n  margin: 20px 20px 10px;\n  font-size: 2em;\n\n  @media only screen and (min-width: 820px) {\n    margin: 20px 50px 10px;\n  }\n`;\n\nexport const ArticleContent = styled.div`\n  > * {\n    padding-right: 20px;\n    padding-left: 20px;\n  }\n\n  > h1 > a.anchor.before,\n  > h2 > a.anchor.before,\n  > h3 > a.anchor.before,\n  > h4 > a.anchor.before,\n  > h5 > a.anchor.before,\n  > h6 > a.anchor.before {\n    padding-right: 4px;\n    transform: translateX(0px);\n  }\n\n  > blockquote {\n    padding: 30px 20px;\n  }\n\n  > table {\n    th:first-child,\n    td:first-child {\n      padding-left: 20px;\n    }\n\n    th:last-child,\n    td:last-child {\n      padding-right: 20px;\n    }\n  }\n\n  @media only screen and (min-width: 820px) {\n    > * {\n      padding-right: 50px;\n      padding-left: 50px;\n    }\n\n    > h1 > a.anchor.before,\n    > h2 > a.anchor.before,\n    > h3 > a.anchor.before,\n    > h4 > a.anchor.before,\n    > h5 > a.anchor.before,\n    > h6 > a.anchor.before {\n      transform: translateX(30px);\n    }\n\n    > blockquote {\n      padding: 30px 50px;\n    }\n\n    > table {\n      th:first-child,\n      td:first-child {\n        padding-left: 50px;\n      }\n\n      th:last-child,\n      td:last-child {\n        padding-right: 50px;\n      }\n    }\n\n    > .gatsby-highlight {\n      > pre[class*=\"language-\"] {\n        padding-right: 50px;\n        padding-left: 50px;\n\n        ::before {\n          left: 50px;\n        }\n      }\n    }\n  }\n`;\n","import { graphql } from \"gatsby\";\nimport React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { BlogArticleMetadataFragment } from \"../../../graphql-types\";\nimport { Link } from \"../misc/link\";\n\ninterface BlogArticleMetadataProperties {\n  data: BlogArticleMetadataFragment;\n}\n\nexport const BlogArticleMetadata: FunctionComponent<BlogArticleMetadataProperties> = ({\n  data: { fields, frontmatter },\n}) => {\n  return (\n    <Metadata>\n      <AuthorLink to={frontmatter!.authorUrl!}>\n        <AuthorImage src={frontmatter!.authorImageUrl!} />\n        {frontmatter!.author!}\n      </AuthorLink>{\" \"}\n      ・ {frontmatter!.date!} ・ {fields!.readingTime!.text!}\n    </Metadata>\n  );\n};\n\nexport const BlogArticleMetadataGraphQLFragment = graphql`\n  fragment BlogArticleMetadata on Mdx {\n    fields {\n      readingTime {\n        text\n      }\n    }\n    frontmatter {\n      author\n      authorImageUrl\n      authorUrl\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n  }\n`;\n\nconst Metadata = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0 20px 20px;\n  font-size: 0.778em;\n\n  @media only screen and (min-width: 820px) {\n    margin: 0 50px 20px;\n  }\n`;\n\nconst AuthorLink = styled(Link)`\n  display: flex;\n  flex: 0 0 auto;\n  flex-direction: row;\n  align-items: center;\n  color: var(--text-color);\n`;\n\nconst AuthorImage = styled.img`\n  flex: 0 0 auto;\n  margin-right: 0.5em;\n  border-radius: 15px;\n  width: 30px;\n`;\n","import { graphql } from \"gatsby\";\nimport React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"../misc/link\";\n\ninterface BlogArticleTagsProperties {\n  tags: string[];\n}\n\nexport const BlogArticleTags: FunctionComponent<BlogArticleTagsProperties> = ({\n  tags,\n}) => {\n  return (\n    <>\n      {tags.length > 0 && (\n        <Tags>\n          {tags.map((tag) => (\n            <Tag key={tag}>\n              <TagLink to={`/blog/tags/${tag}`}>{tag}</TagLink>\n            </Tag>\n          ))}\n        </Tags>\n      )}\n    </>\n  );\n};\n\nexport const BlogArticleTagsGraphQLFragment = graphql`\n  fragment BlogArticleTags on MdxFrontmatter {\n    tags\n  }\n`;\n\nconst Tags = styled.ul`\n  margin: 0 20px 20px;\n  list-style-type: none;\n\n  @media only screen and (min-width: 820px) {\n    margin: 0 50px 20px;\n  }\n`;\n\nconst Tag = styled.li`\n  display: inline-block;\n  margin: 0 5px 5px 0;\n  border-radius: var(--border-radius);\n  padding: 0;\n  background-color: var(--brand-color);\n  font-size: 0.722em;\n  letter-spacing: 0.05em;\n  color: var(--text-color-contrast);\n`;\n\nconst TagLink = styled(Link)`\n  display: block;\n  padding: 5px 15px;\n  color: var(--text-color-contrast);\n`;\n","import { Link } from \"gatsby\";\nimport React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\n\ninterface PaginationProperties {\n  currentPage: number;\n  linkPrefix: string;\n  totalPages: number;\n}\n\nexport const Pagination: FunctionComponent<PaginationProperties> = ({\n  currentPage,\n  linkPrefix,\n  totalPages,\n}) => {\n  const items: { page: number; link: string }[] = [];\n\n  for (let i = 0; i < totalPages; i++) {\n    const page = i + 1;\n    const suffix = page === 1 ? \"\" : \"/\" + page;\n\n    items.push({ page, link: linkPrefix + suffix });\n  }\n\n  return (\n    <Container>\n      {items.map((item) => (\n        <Page\n          key={`page-${item.page}`}\n          className={item.page === currentPage ? \"active\" : undefined}\n        >\n          <PageLink to={item.link}>{item.page}</PageLink>\n        </Page>\n      ))}\n    </Container>\n  );\n};\n\nconst Container = styled.ol`\n  margin: 0 0 60px;\n  padding: 0;\n  list-style-type: none;\n`;\n\nconst Page = styled.li`\n  display: inline-block;\n  margin: 0 5px;\n  border-radius: var(--border-radius);\n  padding: 0;\n  background-color: var(--brand-color);\n\n  &.active,\n  &:hover {\n    background-color: var(--brand-color-hover);\n  }\n`;\n\nconst PageLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 30px;\n  height: 30px;\n  line-height: 30px;\n  color: var(--text-color-contrast);\n`;\n","import { graphql } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { BlogArticlesFragment } from \"../../../graphql-types\";\nimport { ArticleTitle } from \"../articles/article-elements\";\nimport { BlogArticleMetadata } from \"../blog-article/blog-article-metadata\";\nimport { BlogArticleTags } from \"../blog-article/blog-article-tags\";\nimport { Link } from \"../misc/link\";\nimport { Pagination } from \"../misc/pagination\";\n\ninterface BlogArticlesProperties {\n  currentPage?: number;\n  data: BlogArticlesFragment;\n  totalPages?: number;\n}\n\nexport const BlogArticles: FunctionComponent<BlogArticlesProperties> = ({\n  currentPage,\n  data: { edges },\n  totalPages,\n}) => {\n  return (\n    <>\n      <Container>\n        {edges.map(({ node }) => {\n          const existingTags: string[] = node?.frontmatter?.tags\n            ? (node.frontmatter.tags.filter(\n                (tag) => tag && tag.length > 0\n              ) as string[])\n            : [];\n          const featuredImage =\n            node?.frontmatter!.featuredImage?.childImageSharp?.gatsbyImageData;\n\n          return (\n            <Article key={`article-${node.id}`}>\n              <Link to={node.frontmatter!.path!}>\n                {featuredImage && (\n                  <GatsbyImage\n                    image={featuredImage}\n                    alt={node.frontmatter!.title}\n                  />\n                )}\n                <ArticleTitle>{node.frontmatter!.title}</ArticleTitle>\n              </Link>\n              <BlogArticleMetadata data={node!} />\n              <BlogArticleTags tags={existingTags} />\n            </Article>\n          );\n        })}\n      </Container>\n      {currentPage && totalPages && (\n        <Pagination\n          currentPage={currentPage}\n          linkPrefix=\"/blog\"\n          totalPages={totalPages}\n        />\n      )}\n    </>\n  );\n};\n\nexport const BlogArticlesGraphQLFragment = graphql`\n  fragment BlogArticles on MdxConnection {\n    edges {\n      node {\n        id\n        frontmatter {\n          featuredImage {\n            childImageSharp {\n              gatsbyImageData(\n                layout: CONSTRAINED\n                width: 800\n                pngOptions: { quality: 90 }\n              )\n            }\n          }\n          path\n          title\n          ...BlogArticleTags\n        }\n        ...BlogArticleMetadata\n      }\n    }\n  }\n`;\n\nconst Container = styled.ul`\n  display: flex;\n  flex: 0 0 auto;\n  flex-direction: column;\n  margin: 0 0 60px;\n  width: 100%;\n  max-width: 800px;\n  list-style-type: none;\n`;\n\nconst Article = styled.li`\n  @media only screen and (min-width: 820px) {\n    margin: 20px 0 0;\n    border-radius: var(--border-radius);\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.25);\n\n    > a > .gatsby-image-wrapper {\n      border-radius: var(--border-radius) var(--border-radius) 0 0;\n    }\n  }\n`;\n","import { css, SimpleInterpolation } from \"styled-components\";\n\nexport const MobileBreakpoint = \"450px\";\nexport function IsMobile(innerStyle: SimpleInterpolation) {\n  return css`\n    @media only screen and (max-width: ${MobileBreakpoint}) {\n      ${innerStyle}\n    }\n  `;\n}\n\nexport const PhabletBreakpoint = \"860px\";\nexport function IsPhablet(innerStyle: SimpleInterpolation) {\n  return css`\n    @media only screen and (max-width: ${PhabletBreakpoint}) {\n      ${innerStyle}\n    }\n  `;\n}\n\nexport const TabletBreakpoint = \"1110px\";\nexport function IsTablet(innerStyle: SimpleInterpolation) {\n  return css`\n    @media only screen and (max-width: ${TabletBreakpoint}) {\n      ${innerStyle}\n    }\n  `;\n}\n\nexport const SmallDesktopBreakpointNumber = 1280;\nexport const SmallDesktopBreakpoint = SmallDesktopBreakpointNumber + \"px\";\nexport function IsSmallDesktop(innerStyle: SimpleInterpolation) {\n  return css`\n    @media only screen and (max-width: ${SmallDesktopBreakpoint}) {\n      ${innerStyle}\n    }\n  `;\n}\n\nexport const DesktopBreakpointNumber = SmallDesktopBreakpointNumber + 1;\nexport const DesktopBreakpoint = DesktopBreakpointNumber + \"px\";\nexport function IsDesktop(innerStyle: SimpleInterpolation) {\n  return css`\n    @media only screen and (min-width: ${DesktopBreakpoint}) {\n      ${innerStyle}\n    }\n  `;\n}\n\nexport const DocPageDesktopGridColumns = css`\n  grid-template-columns: 1fr 250px 820px 250px 1fr;\n`;\nexport const BoxShadow = css`\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 3px 6px 0px;\n`;\n","import { graphql } from \"gatsby\";\nimport React, { FunctionComponent } from \"react\";\nimport { GetBlogArticlesQuery } from \"../../graphql-types\";\nimport { SEO } from \"../components/misc/seo\";\nimport { Layout } from \"../components/structure/layout\";\nimport { BlogArticles } from \"../components/widgets/blog-articles\";\n\ninterface BlogArticlesTemplateProperties {\n  pageContext: BlogArticlesTemplatePageContext;\n  data: GetBlogArticlesQuery;\n}\n\nconst BlogArticlesTemplate: FunctionComponent<BlogArticlesTemplateProperties> = ({\n  pageContext: { currentPage, numPages },\n  data: { allMdx },\n}) => {\n  return (\n    <Layout>\n      <SEO title=\"Blog Articles\" />\n      <BlogArticles\n        currentPage={currentPage}\n        data={allMdx!}\n        totalPages={numPages}\n      />\n    </Layout>\n  );\n};\n\nexport default BlogArticlesTemplate;\n\nexport const pageQuery = graphql`\n  query getBlogArticles($skip: Int!, $limit: Int!) {\n    allMdx(\n      limit: $limit\n      skip: $skip\n      filter: { frontmatter: { path: { glob: \"/blog/**/*\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      ...BlogArticles\n    }\n  }\n`;\n\nexport interface BlogArticlesTemplatePageContext {\n  limit: number;\n  skip: number;\n  numPages: number;\n  currentPage: number;\n}\n"],"sourceRoot":""}