{"componentChunkName":"component---src-templates-doc-page-template-tsx","path":"/docs/hotchocolate/fetching-data/projections","result":{"data":{"file":{"childMarkdownRemark":{"fields":{"slug":"/hotchocolate/fetching-data/projections/"},"frontmatter":{"title":"Projections"},"html":"<p>Every GraphQL request specifies exactly what data should be returned. Over or under fetching can be reduced\nor even eliminated. HotChocolate projections leverage this concept and directly projects incoming queries\nto the database.</p>\n<p>Projections operate on <code class=\"language-text\">IQueryable</code> by default, but it is possible to create custom providers for projections\nto support a specific database driver.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"95503218469975100000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`{\n  users {\n    email\n    address {\n      street\n    }\n  }\n}`, `95503218469975100000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  users <span class=\"token punctuation\">{</span>\n    email\n    address <span class=\"token punctuation\">{</span>\n      street\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"65283680451746790000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`SELECT &quot;u&quot;.&quot;Email&quot;, &quot;a&quot;.&quot;Id&quot; IS NOT NULL, &quot;a&quot;.&quot;Street&quot;\nFROM &quot;Users&quot; AS &quot;u&quot;\nLEFT JOIN &quot;Address&quot; AS &quot;a&quot; ON &quot;u&quot;.&quot;AddressId&quot; = &quot;a&quot;.&quot;Id&quot;`, `65283680451746790000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"u\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Email\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Id\"</span> <span class=\"token operator\">IS</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Street\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"Users\"</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">\"u\"</span>\n<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> <span class=\"token string\">\"Address\"</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">\"a\"</span> <span class=\"token keyword\">ON</span> <span class=\"token string\">\"u\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"AddressId\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Id\"</span></code></pre></div>\n<h1 id=\"getting-started\" style=\"position:relative;\"><a href=\"#getting-started\" aria-label=\"getting started permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Getting Started</h1>\n<p>Filtering is part of the <code class=\"language-text\">HotChocolate.Data</code> package. You can add the dependency with the <code class=\"language-text\">dotnet</code> cli</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"64518308195365570000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`  dotnet add package HotChocolate.Data`, `64518308195365570000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">  dotnet <span class=\"token function\">add</span> package HotChocolate.Data</code></pre></div>\n<p>To use projections with your GraphQL endpoint you have to register projections on the schema:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"34043101462266966000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`services.AddGraphQLServer()\n  // Your schmea configuration\n  .AddProjections();`, `34043101462266966000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">services<span class=\"token punctuation\">.</span><span class=\"token function\">AddGraphQLServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Your schmea configuration</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">AddProjections</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Projections can be registered on a field. A middleware will apply the selected fields on the result.\nSupport for <code class=\"language-text\">IQueryable</code> comes out of the box.\nThe projection middleware will create a projection for the whole subtree of its field. Only fields that\nare members of a type will be projected. Fields that define a customer resolver cannot be projected\nto the database. If the middleware encounters a field that specifies <code class=\"language-text\">UseProjection()</code> this field will be skipped.</p>\n<blockquote>\n<p>⚠️ <strong>Note:</strong> If you use more than middleware, keep in mind that <strong>ORDER MATTERS</strong>. The correct order is UsePaging > UseProjection > UseFiltering > UseSorting</p>\n</blockquote>\n<p><strong>Code First</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"16220865936011730000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class QueryType\n    : ObjectType<Query>\n{\n    protected override void Configure(IObjectTypeDescriptor<Query> descriptor)\n    {\n        descriptor.Field(t => t.GetPersons(default)).UseProjection();\n    }\n}\n\npublic class Query\n{\n    public IQueryable<Person> GetPersons([Service]IPersonRepository repository) =>\n        repository.GetPersons();\n}`, `16220865936011730000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">QueryType</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType<span class=\"token punctuation\">&lt;</span>Query<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObjectTypeDescriptor<span class=\"token punctuation\">&lt;</span>Query<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Field</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=></span> t<span class=\"token punctuation\">.</span><span class=\"token function\">GetPersons</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">UseProjection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>Person<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetPersons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">IPersonRepository</span> repository<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n        repository<span class=\"token punctuation\">.</span><span class=\"token function\">GetPersons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Pure Code First</strong></p>\n<p>The field descriptor attribute <code class=\"language-text\">[UseProjection]</code> does apply the extension method <code class=\"language-text\">UseProjection()</code> on the field descriptor.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"37915672347418526000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class Query\n{\n    [UseSorting]\n    public IQueryable<Person> GetPersons([Service]IPersonRepository repository)\n    {\n        repository.GetPersons();\n    }\n}`, `37915672347418526000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseSorting</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>Person<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetPersons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">IPersonRepository</span> repository<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        repository<span class=\"token punctuation\">.</span><span class=\"token function\">GetPersons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"firstordefault--singleordefault\" style=\"position:relative;\"><a href=\"#firstordefault--singleordefault\" aria-label=\"firstordefault  singleordefault permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>FirstOrDefault / SingleOrDefault</h1>\n<p>If you want to limit the response to a single result, you would have to declare a resolver.\nWithout returning an <code class=\"language-text\">IQueryable&lt;&gt;</code> you lose the ability to use filtering.</p>\n<p>There are two extensions you can use to leverage <code class=\"language-text\">collection.FirstOrDefault()</code> and <code class=\"language-text\">.collection.SingleOrDefault()</code> to\nthe GraphQL layer. The extensions will rewrite the response type to the element type of the collection apply the behavior.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"62935160544998350000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`    public class Query\n    {\n        [UseFirstOrDefault]\n        [UseProjection]\n        [UseFiltering]\n        public IQueryable<User> GetUsers([ScopedService] SomeDbContext someDbContext)\n        {\n            return someDbContext.Users;\n        }\n    }`, `62935160544998350000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseFirstOrDefault</span></span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseProjection</span></span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseFiltering</span></span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">ScopedService</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">SomeDbContext</span> someDbContext<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> someDbContext<span class=\"token punctuation\">.</span>Users<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"68842273214497940000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Query {\n  users(where: UserFilterInput): User\n}\n\ntype User {\n  id: Int!\n  name: String!\n  email: String!\n}`, `68842273214497940000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">users</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">where</span><span class=\"token punctuation\">:</span> UserFilterInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> User\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> Int<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">email</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"sorting-filtering-and-paging\" style=\"position:relative;\"><a href=\"#sorting-filtering-and-paging\" aria-label=\"sorting filtering and paging permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Sorting Filtering and Paging</h1>\n<p>Projections can be used together with sorting, filtering and paging. The order of the middlewares must be correct.\nMake sure to have the following order: UsePaging > UseProjection > UseFiltering > UseSorting</p>\n<p>Filtering and sorting can be projected over relations. Projections <strong>cannot</strong> project paging over relations.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"21572198257639563000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class Query\n{\n    [UsePaging]\n    [UseProjection]\n    [UseFiltering]\n    [UseSorting]\n    public IQueryable<User> GetUsers([ScopedService] SomeDbContext someDbContext)\n    {\n        return someDbContext.Users;\n    }\n}\n\npublic class User\n{\n    public int Id { get; set; }\n\n    public string Name { get; set; }\n\n    public string Email { get; set; }\n\n    [UseFiltering]\n    [UseSorting]\n    public ICollection<Address> Addresses { get; set; }\n}`, `21572198257639563000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UsePaging</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseProjection</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseFiltering</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseSorting</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">ScopedService</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">SomeDbContext</span> someDbContext<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> someDbContext<span class=\"token punctuation\">.</span>Users<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Id <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Email <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseFiltering</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseSorting</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">ICollection<span class=\"token punctuation\">&lt;</span>Address<span class=\"token punctuation\">></span></span> Addresses <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"91422658276762520000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`{\n  users(\n    where: { name: { eq: &quot;ChilliCream&quot; } }\n    order: [{ name: DESC }, { email: DESC }]\n  ) {\n    nodes {\n      email\n      addresses(where: { street: { eq: &quot;Sesame Street&quot; } }) {\n        street\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n      hasPreviousPage\n      startCursor\n    }\n  }\n}`, `91422658276762520000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  users<span class=\"token punctuation\">(</span>\n    <span class=\"token attr-name\">where</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"ChilliCream\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token attr-name\">order</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">DESC</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">email</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">DESC</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    nodes <span class=\"token punctuation\">{</span>\n      email\n      addresses<span class=\"token punctuation\">(</span><span class=\"token attr-name\">where</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">street</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Sesame Street\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        street\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    pageInfo <span class=\"token punctuation\">{</span>\n      endCursor\n      hasNextPage\n      hasPreviousPage\n      startCursor\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"44114407052610300000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`SELECT &quot;t&quot;.&quot;Email&quot;, &quot;t&quot;.&quot;Id&quot;, &quot;a&quot;.&quot;Street&quot;, &quot;a&quot;.&quot;Id&quot;\nFROM (\n    SELECT &quot;u&quot;.&quot;Email&quot;, &quot;u&quot;.&quot;Id&quot;, &quot;u&quot;.&quot;Name&quot;\n    FROM &quot;Users&quot; AS &quot;u&quot;\n    WHERE &quot;u&quot;.&quot;Name&quot; = @__p_0\n    ORDER BY &quot;u&quot;.&quot;Name&quot; DESC, &quot;u&quot;.&quot;Email&quot; DESC\n    LIMIT @__p_1\n) AS &quot;t&quot;\nLEFT JOIN &quot;Address&quot; AS &quot;a&quot; ON &quot;t&quot;.&quot;Id&quot; = &quot;a&quot;.&quot;UserId&quot;\nORDER BY &quot;t&quot;.&quot;Name&quot; DESC, &quot;t&quot;.&quot;Email&quot; DESC, &quot;t&quot;.&quot;Id&quot;, &quot;a&quot;.&quot;Id&quot;`, `44114407052610300000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"t\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Email\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"t\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Street\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Id\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"u\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Email\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"u\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"u\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Name\"</span>\n    <span class=\"token keyword\">FROM</span> <span class=\"token string\">\"Users\"</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">\"u\"</span>\n    <span class=\"token keyword\">WHERE</span> <span class=\"token string\">\"u\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Name\"</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@__p_0</span>\n    <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token string\">\"u\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Name\"</span> <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"u\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Email\"</span> <span class=\"token keyword\">DESC</span>\n    <span class=\"token keyword\">LIMIT</span> <span class=\"token variable\">@__p_1</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">\"t\"</span>\n<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> <span class=\"token string\">\"Address\"</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">\"a\"</span> <span class=\"token keyword\">ON</span> <span class=\"token string\">\"t\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Id\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"UserId\"</span>\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token string\">\"t\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Name\"</span> <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"t\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Email\"</span> <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"t\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Id\"</span></code></pre></div>\n<h1 id=\"always-project-fields\" style=\"position:relative;\"><a href=\"#always-project-fields\" aria-label=\"always project fields permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Always Project Fields</h1>\n<p>Resolvers on types often access data of the parent. e.g. uses the <code class=\"language-text\">Email</code> member of the parent to fetch some\nrelated data from another service. With projections, this resolver could only work when the user also queries\nfor the <code class=\"language-text\">email</code> field. To ensure a field is always projected you have to use <code class=\"language-text\">IsProjected(true)</code>.</p>\n<p><strong>Code First</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"27126274983519715000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class UserType : ObjectType<User>\n{\n    protected override void Configure(\n        IObjectTypeDescriptor<User> descriptor)\n    {\n        descriptor.Feild(x => x.Email).IsProjected(true);\n        descriptor.Field(&quot;messages&quot;)\n            .Type<MessageType>()\n            .Resolver(\n                async ctx =>\n                {\n                    var dataloader = ctx.DataLoader<MessageDataLoader>();\n                    var mail = ctx.Parent<User>().Email;\n                    return await dataloader.LoadAsync(\n                        mail,\n                        ctx.RequestAborted);\n                });\n    }\n}`, `27126274983519715000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserType</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span>\n        <span class=\"token class-name\">IObjectTypeDescriptor<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Feild</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">IsProjected</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Field</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"messages\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Type</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MessageType<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">Resolver</span><span class=\"token punctuation\">(</span>\n                <span class=\"token keyword\">async</span> ctx <span class=\"token operator\">=></span>\n                <span class=\"token punctuation\">{</span>\n                    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> dataloader <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">DataLoader</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MessageDataLoader<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> mail <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Parent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Email<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> dataloader<span class=\"token punctuation\">.</span><span class=\"token function\">LoadAsync</span><span class=\"token punctuation\">(</span>\n                        mail<span class=\"token punctuation\">,</span>\n                        ctx<span class=\"token punctuation\">.</span>RequestAborted<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Pure Code First</strong></p>\n<p>The field descriptor attribute <code class=\"language-text\">[IsProjected]</code> does apply the extension method <code class=\"language-text\">IsProjected()</code> on the field descriptor.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"93341491903258260000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class User\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n    [IsProjected(true)]\n    public string Email { get; set; }\n    public Address Address { get; set; }\n}\n\n[ExtendObjectType(nameof(User))]\npublic class UserTypeExtension\n{\n    public Message GetMessagesAsync(\n        [Parent] User user,\n        MessageDataLoader dataloader,\n        CancellationToken cancellationToken) =>\n        dataloader.LoadAsync(user.Email, cancellationToken);\n}`, `93341491903258260000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Id <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">IsProjected</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Email <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Address</span> Address <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">ExtendObjectType</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">nameof</span><span class=\"token punctuation\">(</span>User<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserTypeExtension</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Message</span> <span class=\"token function\">GetMessagesAsync</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Parent</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">User</span> user<span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\">MessageDataLoader</span> dataloader<span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\">CancellationToken</span> cancellationToken<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n        dataloader<span class=\"token punctuation\">.</span><span class=\"token function\">LoadAsync</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>Email<span class=\"token punctuation\">,</span> cancellationToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"34410571473225150000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`{\n  users {\n    address {\n      street\n    }\n  }\n}`, `34410571473225150000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  users <span class=\"token punctuation\">{</span>\n    address <span class=\"token punctuation\">{</span>\n      street\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"83512346593845120000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`SELECT &quot;u&quot;.&quot;Email&quot;, &quot;a&quot;.&quot;Id&quot; IS NOT NULL, &quot;a&quot;.&quot;Street&quot;\nFROM &quot;Users&quot; AS &quot;u&quot;\nLEFT JOIN &quot;Address&quot; AS &quot;a&quot; ON &quot;u&quot;.&quot;AddressId&quot; = &quot;a&quot;.&quot;Id&quot;`, `83512346593845120000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"u\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Email\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Id\"</span> <span class=\"token operator\">IS</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Street\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"Users\"</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">\"u\"</span>\n<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> <span class=\"token string\">\"Address\"</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">\"a\"</span> <span class=\"token keyword\">ON</span> <span class=\"token string\">\"u\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"AddressId\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Id\"</span></code></pre></div>\n<h1 id=\"exclude-fields\" style=\"position:relative;\"><a href=\"#exclude-fields\" aria-label=\"exclude fields permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Exclude fields</h1>\n<p>If a projected field is requested, the whole subtree is processed. Sometimes you want to opt out of projections.\nThe projections middleware skips a field in two cases. Either the visitor encounters a fields that is a <code class=\"language-text\">UseProjection</code> field\nitself, or it defines <code class=\"language-text\">IsProjected(false)</code>.</p>\n<p><strong>Code First</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"70852020044591430000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class UserType : ObjectType<User>\n{\n    protected override void Configure(\n        IObjectTypeDescriptor<User> descriptor)\n    {\n        descriptor.Field(x => x.Email).IsProjected(false);\n    }\n}\n\n\npublic class User\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n    public string Email { get; set; }\n    public Address Address { get; set; }\n}`, `70852020044591430000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserType</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span>\n        <span class=\"token class-name\">IObjectTypeDescriptor<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Field</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">IsProjected</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Id <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Email <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Address</span> Address <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Pure Code First</strong></p>\n<p>The field descriptor attribute <code class=\"language-text\">[UseProjection]</code> does apply the extension method <code class=\"language-text\">UseProjection()</code> on the field descriptor.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"51472936730407805000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class User\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n    [IsProjected(false)]\n    public string Email { get; set; }\n    public Address Address { get; set; }\n}`, `51472936730407805000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Id <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">IsProjected</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Email <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Address</span> Address <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"43570224623349280000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`{\n  users {\n    email\n    address {\n      street\n    }\n  }\n}`, `43570224623349280000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  users <span class=\"token punctuation\">{</span>\n    email\n    address <span class=\"token punctuation\">{</span>\n      street\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"416385260169649400\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`SELECT &quot;a&quot;.&quot;Id&quot; IS NOT NULL, &quot;a&quot;.&quot;Street&quot;\nFROM &quot;Users&quot; AS &quot;u&quot;\nLEFT JOIN &quot;Address&quot; AS &quot;a&quot; ON &quot;u&quot;.&quot;AddressId&quot; = &quot;a&quot;.&quot;Id&quot;`, `416385260169649400`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Id\"</span> <span class=\"token operator\">IS</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Street\"</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">\"Users\"</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">\"u\"</span>\n<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> <span class=\"token string\">\"Address\"</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">\"a\"</span> <span class=\"token keyword\">ON</span> <span class=\"token string\">\"u\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"AddressId\"</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"Id\"</span></code></pre></div>","tableOfContents":"<ul>\n<li><a href=\"/hotchocolate/fetching-data/projections/#getting-started\">Getting Started</a></li>\n<li><a href=\"/hotchocolate/fetching-data/projections/#firstordefault--singleordefault\">FirstOrDefault / SingleOrDefault</a></li>\n<li><a href=\"/hotchocolate/fetching-data/projections/#sorting-filtering-and-paging\">Sorting Filtering and Paging</a></li>\n<li><a href=\"/hotchocolate/fetching-data/projections/#always-project-fields\">Always Project Fields</a></li>\n<li><a href=\"/hotchocolate/fetching-data/projections/#exclude-fields\">Exclude fields</a></li>\n</ul>"}},"site":{"siteMetadata":{"siteUrl":"https://chillicream.com","repositoryUrl":"https://github.com/ChilliCream/hotchocolate","tools":{"slack":"https://join.slack.com/t/hotchocolategraphql/shared_invite/enQtNTA4NjA0ODYwOTQ0LTViMzA2MTM4OWYwYjIxYzViYmM0YmZhYjdiNzBjOTg2ZmU1YmMwNDZiYjUyZWZlMzNiMTk1OWUxNWZhMzQwY2Q"}}},"config":{"products":[{"path":"hotchocolate","title":"Hot Chocolate","description":"Build your own thin GraphQL API layer on top of any resource.","versions":[{"path":"","title":"v11 (latest)","items":[{"path":"index","title":"Introduction","items":null},{"path":"get-started","title":"Get Started","items":null},{"path":"defining-a-schema","title":"Defining a schema","items":[{"path":"index","title":"Schema basics"},{"path":"versioning","title":"Versioning"},{"path":"unions-and-interfaces","title":"Unions and Interfaces"},{"path":"scalars","title":"Scalars"},{"path":"directives","title":"Directives"}]},{"path":"fetching-data","title":"Fetching data","items":[{"path":"index","title":"Resolver"},{"path":"fetching-from-databases","title":"Fetching from Databases"},{"path":"fetching-from-rest","title":"Fetching from REST"},{"path":"dataloader","title":"DataLoader"},{"path":"pagination","title":"Pagination"},{"path":"filtering","title":"Filtering"},{"path":"sorting","title":"Sorting"},{"path":"projections","title":"Projections"}]},{"path":"integrations","title":"Integrations","items":[{"path":"index","title":"Overview"},{"path":"entity-framework","title":"Entity Framework"},{"path":"spatial-data","title":"Spatial Data"}]},{"path":"api-reference","title":"API Reference","items":[{"path":"index","title":"Overview"},{"path":"object-type","title":"Object Type"},{"path":"language","title":"Language"},{"path":"visitors","title":"Visitors"},{"path":"aspnetcore","title":"ASP.NET Core"},{"path":"executable","title":"Executable"},{"path":"migrate-from-10-to-11","title":"Migrate from 10.5 to 11.0"}]}]},{"path":"v10","title":"v10 (previous)","items":[{"path":"index","title":"Introduction","items":null},{"path":"code-first","title":"Code-First","items":null},{"path":"schema-first","title":"Schema-First","items":null},{"path":"schema","title":"Schema","items":[{"path":"index","title":"Schema"},{"path":"object-type","title":"Object Type"},{"path":"interface-type","title":"Interface Type"},{"path":"union-type","title":"Union Type"},{"path":"input-object-type","title":"Input Object Type"},{"path":"enum-type","title":"Enum Type"},{"path":"descriptions","title":"Schema Descriptions"},{"path":"custom-scalar-types","title":"Scalar Type Support"},{"path":"descriptor-attributes","title":"Descriptor Attributes"},{"path":"extending-types","title":"Custom Base Classes"},{"path":"directives","title":"Directives"},{"path":"resolvers","title":"Resolvers"},{"path":"relay","title":"Relay"},{"path":"conventions","title":"Conventions"},{"path":"options","title":"Schema Options"}]},{"path":"data-fetching","title":"Data Fetching","items":[{"path":"index","title":"Data Loaders"},{"path":"pagination","title":"Pagination"},{"path":"filters","title":"Filters"}]},{"path":"security","title":"Security","items":[{"path":"index","title":"Authorization"},{"path":"security","title":"Security"}]},{"path":"execution-engine","title":"Execution Engine","items":[{"path":"index","title":"Middleware"},{"path":"validation-rules","title":"Validation Rules"},{"path":"instrumentation","title":"Instrumentation"},{"path":"apollo-tracing","title":"Apollo Tracing"},{"path":"batching","title":"Batching"},{"path":"persisted-queries","title":"Persisted Queries"},{"path":"custom-context-data","title":"Custom Context Data"},{"path":"subscriptions","title":"Subscriptions"},{"path":"type-conversion","title":"Type Conversion"},{"path":"error-filter","title":"Error Filter"},{"path":"execution-options","title":"Execution Options"}]},{"path":"server","title":"Server","items":[{"path":"index","title":"ASP.Net"},{"path":"dependency-injection","title":"Dependency Injection"}]},{"path":"stitching","title":"Schema Stitching","items":null},{"path":"tooling","title":"Tooling","items":null},{"path":"advanced","title":"Advanced","items":[{"path":"index","title":"Parser"},{"path":"dotnet-cli","title":".Net CLI"}]},{"path":"tutorials","title":"Tutorials","items":[{"path":"index","title":"Entity Framework"}]},{"path":"examples","title":"Examples","items":[{"path":"index","title":"Star Wars"},{"path":"slack-clone","title":"Slack Clone"},{"path":"other-examples","title":"Other Examples"}]}]}]},{"path":"bananacakepop","title":"Banana Cake Pop","description":"Use this GUI to get deep insights from any GraphQL API.","versions":[{"path":"","title":"v1 (preview)","items":[{"path":"index","title":"Introduction","items":null}]}]},{"path":"greendonut","title":"Green Donut","description":"Configure data loaders and caching for GraphQL endpoints.","versions":[{"path":"","title":"v11 (latest)","items":[{"path":"index","title":"Introduction","items":null}]},{"path":"v10","title":"v10 (previous)","items":[{"path":"index","title":"Introduction","items":null},{"path":"installation","title":"Installation","items":null},{"path":"usage","title":"Usage","items":null},{"path":"api","title":"API","items":null},{"path":"advanced-concepts","title":"Advanced Concepts","items":[{"path":"index","title":"Custom DataLoader"},{"path":"diagnostics","title":"Diagnostic Events"}]}]}]}]}},"pageContext":{"originPath":"hotchocolate/fetching-data/projections.md"}},"staticQueryHashes":["1014893094","2890364758","4218812017"]}