{"componentChunkName":"component---src-templates-doc-page-template-tsx","path":"/docs/hotchocolate/fetching-data","result":{"data":{"file":{"childMarkdownRemark":{"fields":{"slug":"/hotchocolate/fetching-data/"},"frontmatter":{"title":"Resolver"},"html":"<h1 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Introduction</h1>\n<p>When it comes to fetching data in a GraphQL server you will always end up with a resolver.\n<strong>A resolver is a generic function that fetches data from an arbitrary data source for a particular field.</strong>\nThis means every field has it's own individual resolver function in order to fetch or select data. Even if there isn't a resolver defined for one field, Hot Chocolate will create a default resolver for this particular field behind the scenes.</p>\n<div class=\"mermaid\" data-processed=\"true\"><svg id=\"mermaid-1605699592222\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"436.6421813964844\" style=\"max-width: 254.21875px;\" viewBox=\"0 0 254.21875 436.6421813964844\"><style>#mermaid-1605699592222{font-family:sans-serif;font-size:16px;fill:#333;}#mermaid-1605699592222 .error-icon{fill:#552222;}#mermaid-1605699592222 .error-text{fill:#552222;stroke:#552222;}#mermaid-1605699592222 .edge-thickness-normal{stroke-width:2px;}#mermaid-1605699592222 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-1605699592222 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-1605699592222 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-1605699592222 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-1605699592222 .marker{fill:#333333;}#mermaid-1605699592222 .marker.cross{stroke:#333333;}#mermaid-1605699592222 svg{font-family:sans-serif;font-size:16px;}#mermaid-1605699592222 .label{font-family:sans-serif;color:#333;}#mermaid-1605699592222 .label text{fill:#333;}#mermaid-1605699592222 .node rect,#mermaid-1605699592222 .node circle,#mermaid-1605699592222 .node ellipse,#mermaid-1605699592222 .node polygon,#mermaid-1605699592222 .node path{fill:#ECECFF;stroke:#9370DB;stroke-width:1px;}#mermaid-1605699592222 .node .label{text-align:center;}#mermaid-1605699592222 .node.clickable{cursor:pointer;}#mermaid-1605699592222 .arrowheadPath{fill:#333333;}#mermaid-1605699592222 .edgePath .path{stroke:#333333;stroke-width:1.5px;}#mermaid-1605699592222 .flowchart-link{stroke:#333333;fill:none;}#mermaid-1605699592222 .edgeLabel{background-color:#e8e8e8;text-align:center;}#mermaid-1605699592222 .edgeLabel rect{opacity:0.5;background-color:#e8e8e8;fill:#e8e8e8;}#mermaid-1605699592222 .cluster rect{fill:#ffffde;stroke:#aaaa33;stroke-width:1px;}#mermaid-1605699592222 .cluster text{fill:#333;}#mermaid-1605699592222 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:sans-serif;font-size:12px;background:hsl(80,100%,96.2745098039%);border:1px solid #aaaa33;border-radius:2px;pointer-events:none;z-index:100;}#mermaid-1605699592222:root{--mermaid-font-family:sans-serif;}#mermaid-1605699592222 flowchart{fill:apa;}</style><g><g class=\"output\"><g class=\"clusters\"></g><g class=\"edgePaths\"><g class=\"edgePath LS-A LE-B\" id=\"L-A-B\" style=\"opacity: 1;\"><path class=\"path\" d=\"M88.7578125,46L88.7578125,71L89.25781249999999,96.5000030517578\" marker-end=\"url(#arrowhead22)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead22\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-B LE-C\" id=\"L-B-C\" style=\"opacity: 1;\"><path class=\"path\" d=\"M61.66897534825999,207.5533472965022L20.453125,268.6421813964844L20.453125,321.6421813964844L20.453125,365.6421813964844L59.26260653409091,390.6421813964844\" marker-end=\"url(#arrowhead23)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead23\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-B LE-D\" id=\"L-B-D\" style=\"opacity: 1;\"><path class=\"path\" d=\"M116.84665208085488,207.553350970903L157.0625,268.6421813964844L157.0625,302.6421813964844\" marker-end=\"url(#arrowhead24)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead24\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-D LE-C\" id=\"L-D-C\" style=\"opacity: 1;\"><path class=\"path\" d=\"M157.0625,340.6421813964844L157.0625,365.6421813964844L118.2530184659091,390.6421813964844\" marker-end=\"url(#arrowhead25)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead25\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g></g><g class=\"edgeLabels\"><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><foreignObject width=\"0\" height=\"0\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\"><span id=\"L-L-A-B\" class=\"edgeLabel L-LS-A' L-LE-B\"></span></div></foreignObject></g></g><g class=\"edgeLabel\" transform=\"translate(20.453125,321.6421813964844)\" style=\"opacity: 1;\"><g transform=\"translate(-12.453125,-9)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"24.90625\" height=\"18\"></rect><foreignObject width=\"24.90625\" height=\"18\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\"><span id=\"L-L-B-C\" class=\"edgeLabel L-LS-B' L-LE-C\">yes</span></div></foreignObject></g></g><g class=\"edgeLabel\" transform=\"translate(157.0625,268.6421813964844)\" style=\"opacity: 1;\"><g transform=\"translate(-8.8984375,-9)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"17.796875\" height=\"18\"></rect><foreignObject width=\"17.796875\" height=\"18\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\"><span id=\"L-L-B-D\" class=\"edgeLabel L-LS-B' L-LE-D\">no</span></div></foreignObject></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><foreignObject width=\"0\" height=\"0\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\"><span id=\"L-L-D-C\" class=\"edgeLabel L-LS-D' L-LE-C\"></span></div></foreignObject></g></g></g><g class=\"nodes\"><g class=\"node default\" id=\"flowchart-A-8\" transform=\"translate(88.7578125,27)\" style=\"opacity: 1;\"><rect rx=\"5\" ry=\"5\" x=\"-24.6796875\" y=\"-19\" width=\"49.359375\" height=\"38\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-14.6796875,-9)\"><foreignObject width=\"29.359375\" height=\"18\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\">field</div></foreignObject></g></g></g><g class=\"node default\" id=\"flowchart-B-9\" transform=\"translate(88.7578125,165.3210906982422)\" style=\"opacity: 1;\"><polygon points=\"69.32109375,0 138.6421875,-69.32109375 69.32109375,-138.6421875 0,-69.32109375\" transform=\"translate(-69.32109375,69.32109375)\" class=\"label-container\"></polygon><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-48.0234375,-9)\"><foreignObject width=\"96.046875\" height=\"18\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\">has resolver?</div></foreignObject></g></g></g><g class=\"node default\" id=\"flowchart-C-11\" transform=\"translate(88.7578125,409.6421813964844)\" style=\"opacity: 1;\"><rect rx=\"5\" ry=\"5\" x=\"-61.578125\" y=\"-19\" width=\"123.15625\" height=\"38\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-51.578125,-9)\"><foreignObject width=\"103.15625\" height=\"18\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\">return resolver</div></foreignObject></g></g></g><g class=\"node default\" id=\"flowchart-D-13\" transform=\"translate(157.0625,321.6421813964844)\" style=\"opacity: 1;\"><rect rx=\"5\" ry=\"5\" x=\"-89.15625\" y=\"-19\" width=\"178.3125\" height=\"38\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-79.15625,-9)\"><foreignObject width=\"158.3125\" height=\"18\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\">create default resolver</div></foreignObject></g></g></g></g></g></g></svg></div>\n<p>In Hot Chocolate a default resolver is a compiled function for a specific field that accesses a property of its parent value which matches with the field name. As an example, in case we have a parent value of type <code class=\"language-text\">User</code> which has a field called <code class=\"language-text\">name</code>, the compiled default resolver for the field <code class=\"language-text\">name</code> would look like the following.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"49581039347251800000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`var resolver = (User parent) => parent.Name;`, `49581039347251800000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> resolver <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> parent<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> parent<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">;</span></code></pre></div>\n<p>It's not exactly how it's implemented in Hot Chocolate, but it serves here basically as a simplified illustration. The key takeaway is that there is always a resolver for every field in place.</p>\n<blockquote>\n<p><strong>Note:</strong> The parent value represents the inner value of the parent resolver or in case of a root resolver the root value which represents the value of one of the root types (query, mutation or subscription). It has nothing to do with the result type of a resolver and is specific to the business logic of a resolver.</p>\n</blockquote>\n<h2 id=\"resolver-tree\" style=\"position:relative;\"><a href=\"#resolver-tree\" aria-label=\"resolver tree permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Resolver Tree</h2>\n<p>A resolver tree is a projection of a GraphQL operation which is prepared for execution. The execution engine takes the resolver tree and simply follows the path of resolvers from top to down. For better understanding let's imagine we have a simple GraphQL query like the following, where we select the name of the currently logged-in user.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"97778112032532840000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`query {\n  me {\n    name\n  }\n}`, `97778112032532840000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">{</span>\n  me <span class=\"token punctuation\">{</span>\n    name\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In Hot Chocolate this query results in the following resolver tree.</p>\n<div class=\"mermaid\" data-processed=\"true\"><svg id=\"mermaid-1605699592224\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"230\" style=\"max-width: 190.75px;\" viewBox=\"0 0 190.75 230\"><style>#mermaid-1605699592224{font-family:sans-serif;font-size:16px;fill:#333;}#mermaid-1605699592224 .error-icon{fill:#552222;}#mermaid-1605699592224 .error-text{fill:#552222;stroke:#552222;}#mermaid-1605699592224 .edge-thickness-normal{stroke-width:2px;}#mermaid-1605699592224 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-1605699592224 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-1605699592224 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-1605699592224 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-1605699592224 .marker{fill:#333333;}#mermaid-1605699592224 .marker.cross{stroke:#333333;}#mermaid-1605699592224 svg{font-family:sans-serif;font-size:16px;}#mermaid-1605699592224 .label{font-family:sans-serif;color:#333;}#mermaid-1605699592224 .label text{fill:#333;}#mermaid-1605699592224 .node rect,#mermaid-1605699592224 .node circle,#mermaid-1605699592224 .node ellipse,#mermaid-1605699592224 .node polygon,#mermaid-1605699592224 .node path{fill:#ECECFF;stroke:#9370DB;stroke-width:1px;}#mermaid-1605699592224 .node .label{text-align:center;}#mermaid-1605699592224 .node.clickable{cursor:pointer;}#mermaid-1605699592224 .arrowheadPath{fill:#333333;}#mermaid-1605699592224 .edgePath .path{stroke:#333333;stroke-width:1.5px;}#mermaid-1605699592224 .flowchart-link{stroke:#333333;fill:none;}#mermaid-1605699592224 .edgeLabel{background-color:#e8e8e8;text-align:center;}#mermaid-1605699592224 .edgeLabel rect{opacity:0.5;background-color:#e8e8e8;fill:#e8e8e8;}#mermaid-1605699592224 .cluster rect{fill:#ffffde;stroke:#aaaa33;stroke-width:1px;}#mermaid-1605699592224 .cluster text{fill:#333;}#mermaid-1605699592224 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:sans-serif;font-size:12px;background:hsl(80,100%,96.2745098039%);border:1px solid #aaaa33;border-radius:2px;pointer-events:none;z-index:100;}#mermaid-1605699592224:root{--mermaid-font-family:sans-serif;}#mermaid-1605699592224 flowchart{fill:apa;}</style><g><g class=\"output\"><g class=\"clusters\"></g><g class=\"edgePaths\"><g class=\"edgePath LS-A LE-B\" id=\"L-A-B\" style=\"opacity: 1;\"><path class=\"path\" d=\"M95.375,46L95.375,71L95.375,96\" marker-end=\"url(#arrowhead12)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead12\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g><g class=\"edgePath LS-B LE-C\" id=\"L-B-C\" style=\"opacity: 1;\"><path class=\"path\" d=\"M95.375,134L95.375,159L95.375,184\" marker-end=\"url(#arrowhead13)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead13\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g></g><g class=\"edgeLabels\"><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><foreignObject width=\"0\" height=\"0\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\"><span id=\"L-L-A-B\" class=\"edgeLabel L-LS-A' L-LE-B\"></span></div></foreignObject></g></g><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><foreignObject width=\"0\" height=\"0\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\"><span id=\"L-L-B-C\" class=\"edgeLabel L-LS-B' L-LE-C\"></span></div></foreignObject></g></g></g><g class=\"nodes\"><g class=\"node default\" id=\"flowchart-A-4\" transform=\"translate(95.375,27)\" style=\"opacity: 1;\"><rect rx=\"5\" ry=\"5\" x=\"-73.5859375\" y=\"-19\" width=\"147.171875\" height=\"38\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-63.5859375,-9)\"><foreignObject width=\"127.171875\" height=\"18\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\">query: QueryType</div></foreignObject></g></g></g><g class=\"node default\" id=\"flowchart-B-5\" transform=\"translate(95.375,115)\" style=\"opacity: 1;\"><rect rx=\"5\" ry=\"5\" x=\"-78.9140625\" y=\"-19\" width=\"157.828125\" height=\"38\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-68.9140625,-9)\"><foreignObject width=\"137.828125\" height=\"18\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\">me() =&gt; [UserType]</div></foreignObject></g></g></g><g class=\"node default\" id=\"flowchart-C-7\" transform=\"translate(95.375,203)\" style=\"opacity: 1;\"><rect rx=\"5\" ry=\"5\" x=\"-87.375\" y=\"-19\" width=\"174.75\" height=\"38\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-77.375,-9)\"><foreignObject width=\"154.75\" height=\"18\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\">name() =&gt; StringType</div></foreignObject></g></g></g></g></g></g></svg></div>\n<p>A resolver tree is in the end nothing else than a resolver chain where each branch can be executed in parallel.</p>\n<div class=\"mermaid\" data-processed=\"true\"><svg id=\"mermaid-1605699592252\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"54\" style=\"max-width: 189.578125px;\" viewBox=\"0 0 189.578125 54\"><style>#mermaid-1605699592252{font-family:sans-serif;font-size:16px;fill:#333;}#mermaid-1605699592252 .error-icon{fill:#552222;}#mermaid-1605699592252 .error-text{fill:#552222;stroke:#552222;}#mermaid-1605699592252 .edge-thickness-normal{stroke-width:2px;}#mermaid-1605699592252 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-1605699592252 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-1605699592252 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-1605699592252 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-1605699592252 .marker{fill:#333333;}#mermaid-1605699592252 .marker.cross{stroke:#333333;}#mermaid-1605699592252 svg{font-family:sans-serif;font-size:16px;}#mermaid-1605699592252 .label{font-family:sans-serif;color:#333;}#mermaid-1605699592252 .label text{fill:#333;}#mermaid-1605699592252 .node rect,#mermaid-1605699592252 .node circle,#mermaid-1605699592252 .node ellipse,#mermaid-1605699592252 .node polygon,#mermaid-1605699592252 .node path{fill:#ECECFF;stroke:#9370DB;stroke-width:1px;}#mermaid-1605699592252 .node .label{text-align:center;}#mermaid-1605699592252 .node.clickable{cursor:pointer;}#mermaid-1605699592252 .arrowheadPath{fill:#333333;}#mermaid-1605699592252 .edgePath .path{stroke:#333333;stroke-width:1.5px;}#mermaid-1605699592252 .flowchart-link{stroke:#333333;fill:none;}#mermaid-1605699592252 .edgeLabel{background-color:#e8e8e8;text-align:center;}#mermaid-1605699592252 .edgeLabel rect{opacity:0.5;background-color:#e8e8e8;fill:#e8e8e8;}#mermaid-1605699592252 .cluster rect{fill:#ffffde;stroke:#aaaa33;stroke-width:1px;}#mermaid-1605699592252 .cluster text{fill:#333;}#mermaid-1605699592252 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:sans-serif;font-size:12px;background:hsl(80,100%,96.2745098039%);border:1px solid #aaaa33;border-radius:2px;pointer-events:none;z-index:100;}#mermaid-1605699592252:root{--mermaid-font-family:sans-serif;}#mermaid-1605699592252 flowchart{fill:apa;}</style><g><g class=\"output\"><g class=\"clusters\"></g><g class=\"edgePaths\"><g class=\"edgePath LS-A LE-B\" id=\"L-A-B\" style=\"opacity: 1;\"><path class=\"path\" d=\"M60.890625,27L85.890625,27L110.890625,27\" marker-end=\"url(#arrowhead7)\" style=\"fill:none\"></path><defs><marker id=\"arrowhead7\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"strokeWidth\" markerWidth=\"8\" markerHeight=\"6\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowheadPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker></defs></g></g><g class=\"edgeLabels\"><g class=\"edgeLabel\" transform=\"\" style=\"opacity: 1;\"><g transform=\"translate(0,0)\" class=\"label\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><foreignObject width=\"0\" height=\"0\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\"><span id=\"L-L-A-B\" class=\"edgeLabel L-LS-A' L-LE-B\"></span></div></foreignObject></g></g></g><g class=\"nodes\"><g class=\"node default\" id=\"flowchart-A-2\" transform=\"translate(34.4453125,27)\" style=\"opacity: 1;\"><rect rx=\"5\" ry=\"5\" x=\"-26.4453125\" y=\"-19\" width=\"52.890625\" height=\"38\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-16.4453125,-9)\"><foreignObject width=\"32.890625\" height=\"18\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\">me()</div></foreignObject></g></g></g><g class=\"node default\" id=\"flowchart-B-3\" transform=\"translate(146.234375,27)\" style=\"opacity: 1;\"><rect rx=\"5\" ry=\"5\" x=\"-35.34375\" y=\"-19\" width=\"70.6875\" height=\"38\" class=\"label-container\"></rect><g class=\"label\" transform=\"translate(0,0)\"><g transform=\"translate(-25.34375,-9)\"><foreignObject width=\"50.6875\" height=\"18\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: inline-block; white-space: nowrap;\">name()</div></foreignObject></g></g></g></g></g></g></svg></div>\n<p>Okay, let's dissect a little further here. A resolver chain starts always with one or many root resolver, which is in our case <code class=\"language-text\">me()</code> and then just follows the path along. In our scenario it means the next resolver would be <code class=\"language-text\">name()</code> which is also the last resolver in our chain. So as soon as <code class=\"language-text\">me</code> has fetched the user profile of the currently logged-in user, Hot Chocolate will immediately start executing the next resolver and feeding in the previous object value which is also called parent or parent value in spec language. Let's say the parent value looks like this.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"95232480364483940000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`var parent = new User\n{\n  Id = &quot;user-1&quot;,\n  Name = &quot;ChilliCream&quot;,\n  ...\n}`, `95232480364483940000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> parent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">User</span>\n<span class=\"token punctuation\">{</span>\n  Id <span class=\"token operator\">=</span> <span class=\"token string\">\"user-1\"</span><span class=\"token punctuation\">,</span>\n  Name <span class=\"token operator\">=</span> <span class=\"token string\">\"ChilliCream\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Then the <code class=\"language-text\">name()</code> resolver can just access the <code class=\"language-text\">Name</code> property of the parent value and simply return it. As soon as all resolvers has been completed, the execution engine would then return the following GraphQL result provided that everything went successful.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"82928632096500100000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`{\n  &quot;data&quot;: {\n    &quot;me&quot;: {\n      &quot;name&quot;: &quot;ChilliCream&quot;\n    }\n  }\n}`, `82928632096500100000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"me\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ChilliCream\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nice, now that we know what resolvers are and how they work in a bigger picture, how can we actually start writing one. Let's jump to the next section and find out.</p>\n<h1 id=\"defining-a-resolver\" style=\"position:relative;\"><a href=\"#defining-a-resolver\" aria-label=\"defining a resolver permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Defining a resolver</h1>\n<h1 id=\"resolver-chains\" style=\"position:relative;\"><a href=\"#resolver-chains\" aria-label=\"resolver chains permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Resolver chains</h1>\n<h1 id=\"resolver-arguments\" style=\"position:relative;\"><a href=\"#resolver-arguments\" aria-label=\"resolver arguments permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Resolver Arguments</h1>\n<h1 id=\"di-and-stuff\" style=\"position:relative;\"><a href=\"#di-and-stuff\" aria-label=\"di and stuff permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>DI and stuff</h1>\n<h1 id=\"resolver-pipeline\" style=\"position:relative;\"><a href=\"#resolver-pipeline\" aria-label=\"resolver pipeline permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Resolver Pipeline</h1>\n<h1 id=\"error-handling\" style=\"position:relative;\"><a href=\"#error-handling\" aria-label=\"error handling permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Error Handling</h1>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/hotchocolate/fetching-data/#introduction\">Introduction</a></p>\n<ul>\n<li><a href=\"/hotchocolate/fetching-data/#resolver-tree\">Resolver Tree</a></li>\n</ul>\n</li>\n<li><a href=\"/hotchocolate/fetching-data/#defining-a-resolver\">Defining a resolver</a></li>\n<li><a href=\"/hotchocolate/fetching-data/#resolver-chains\">Resolver chains</a></li>\n<li><a href=\"/hotchocolate/fetching-data/#resolver-arguments\">Resolver Arguments</a></li>\n<li><a href=\"/hotchocolate/fetching-data/#di-and-stuff\">DI and stuff</a></li>\n<li><a href=\"/hotchocolate/fetching-data/#resolver-pipeline\">Resolver Pipeline</a></li>\n<li><a href=\"/hotchocolate/fetching-data/#error-handling\">Error Handling</a></li>\n</ul>"}},"site":{"siteMetadata":{"siteUrl":"https://chillicream.com","repositoryUrl":"https://github.com/ChilliCream/hotchocolate","tools":{"slack":"https://join.slack.com/t/hotchocolategraphql/shared_invite/enQtNTA4NjA0ODYwOTQ0LTViMzA2MTM4OWYwYjIxYzViYmM0YmZhYjdiNzBjOTg2ZmU1YmMwNDZiYjUyZWZlMzNiMTk1OWUxNWZhMzQwY2Q"}}},"config":{"products":[{"path":"hotchocolate","title":"Hot Chocolate","description":"Build your own thin GraphQL API layer on top of any resource.","versions":[{"path":"v10","title":"v10 (stable)","items":[{"path":"index","title":"Introduction","items":null},{"path":"code-first","title":"Code-First","items":null},{"path":"schema-first","title":"Schema-First","items":null},{"path":"schema","title":"Schema","items":[{"path":"index","title":"Schema"},{"path":"object-type","title":"Object Type"},{"path":"interface-type","title":"Interface Type"},{"path":"union-type","title":"Union Type"},{"path":"input-object-type","title":"Input Object Type"},{"path":"enum-type","title":"Enum Type"},{"path":"descriptions","title":"Schema Descriptions"},{"path":"custom-scalar-types","title":"Scalar Type Support"},{"path":"descriptor-attributes","title":"Descriptor Attributes"},{"path":"extending-types","title":"Custom Base Classes"},{"path":"directives","title":"Directives"},{"path":"resolvers","title":"Resolvers"},{"path":"relay","title":"Relay"},{"path":"conventions","title":"Conventions"},{"path":"options","title":"Schema Options"}]},{"path":"data-fetching","title":"Data Fetching","items":[{"path":"index","title":"Data Loaders"},{"path":"pagination","title":"Pagination"},{"path":"filters","title":"Filters"}]},{"path":"security","title":"Security","items":[{"path":"index","title":"Authorization"},{"path":"security","title":"Security"}]},{"path":"execution-engine","title":"Execution Engine","items":[{"path":"index","title":"Middleware"},{"path":"validation-rules","title":"Validation Rules"},{"path":"instrumentation","title":"Instrumentation"},{"path":"apollo-tracing","title":"Apollo Tracing"},{"path":"batching","title":"Batching"},{"path":"persisted-queries","title":"Persisted Queries"},{"path":"custom-context-data","title":"Custom Context Data"},{"path":"subscriptions","title":"Subscriptions"},{"path":"type-conversion","title":"Type Conversion"},{"path":"error-filter","title":"Error Filter"},{"path":"execution-options","title":"Execution Options"}]},{"path":"server","title":"Server","items":[{"path":"index","title":"ASP.Net"},{"path":"dependency-injection","title":"Dependency Injection"}]},{"path":"stitching","title":"Schema Stitching","items":null},{"path":"tooling","title":"Tooling","items":null},{"path":"advanced","title":"Advanced","items":[{"path":"index","title":"Parser"},{"path":"dotnet-cli","title":".Net CLI"}]},{"path":"tutorials","title":"Tutorials","items":[{"path":"index","title":"Entity Framework"}]},{"path":"examples","title":"Examples","items":[{"path":"index","title":"Star Wars"},{"path":"slack-clone","title":"Slack Clone"},{"path":"other-examples","title":"Other Examples"}]}]},{"path":"","title":"v11 (preview)","items":[{"path":"index","title":"Introduction","items":null},{"path":"get-started","title":"Get Started","items":null},{"path":"defining-a-schema","title":"Defining a schema","items":[{"path":"index","title":"Schema basics"},{"path":"versioning","title":"Versioning"},{"path":"unions-and-interfaces","title":"Unions and Interfaces"},{"path":"scalars","title":"Scalars"},{"path":"directives","title":"Directives"}]},{"path":"fetching-data","title":"Fetching data","items":[{"path":"index","title":"Resolver"},{"path":"fetching-from-databases","title":"Fetching from Databases"},{"path":"fetching-from-rest","title":"Fetching from REST"},{"path":"dataloader","title":"DataLoader"},{"path":"pagination","title":"Pagination"},{"path":"filtering","title":"Filtering"},{"path":"sorting","title":"Sorting"}]},{"path":"api-reference","title":"API Reference","items":[{"path":"index","title":"Overview"},{"path":"language","title":"Lanugage"},{"path":"visitors","title":"Visitors"},{"path":"aspnetcore","title":"ASP.NET Core"},{"path":"migrate-from-10-to-11","title":"Migrate from 10.5 to 11.0"}]}]}]},{"path":"bananacakepop","title":"Banana Cake Pop","description":"Use this GUI to get deep insights from any GraphQL API.","versions":[{"path":"","title":"v1 (preview)","items":[{"path":"index","title":"Introduction","items":null}]}]},{"path":"strawberryshake","title":"Strawberry Shake","description":"Generate a unique GraphQL client for .Net to fetch data from any GraphQL API.","versions":[{"path":"","title":"v11 (preview)","items":[{"path":"index","title":"Introduction","items":null}]}]},{"path":"marshmallowpie","title":"Marshmallow Pie","description":"Configure a GraphQL registry to keep track of any GraphQL server and client.","versions":[{"path":"","title":"v11 (preview)","items":[{"path":"index","title":"Introduction","items":null}]}]},{"path":"greendonut","title":"Green Donut","description":"Configure data loaders and caching for GraphQL endpoints.","versions":[{"path":"v10","title":"v10 (stable)","items":[{"path":"index","title":"Introduction","items":null},{"path":"installation","title":"Installation","items":null},{"path":"usage","title":"Usage","items":null},{"path":"api","title":"API","items":null},{"path":"advanced-concepts","title":"Advanced Concepts","items":[{"path":"index","title":"Custom DataLoader"},{"path":"diagnostics","title":"Diagnostic Events"}]}]},{"path":"","title":"v11 (preview)","items":[{"path":"index","title":"Introduction","items":null}]}]}]}},"pageContext":{"originPath":"hotchocolate/fetching-data/index.md"}},"staticQueryHashes":["2890364758","4218812017","63159454"]}