{"componentChunkName":"component---src-templates-doc-page-template-tsx","path":"/docs/hotchocolate/fetching-data/filtering","result":{"data":{"file":{"childMarkdownRemark":{"fields":{"slug":"/hotchocolate/fetching-data/filtering/"},"frontmatter":{"title":"Filtering"},"html":"<p><strong>What are filters?</strong></p>\n<p>With <em>Hot Chocolate</em> filters, you can expose complex filter objects through your GraphQL API that translates to native database queries.</p>\n<p>The default filter implementation translates filters to expression trees that are applied to <code class=\"language-text\">IQueryable</code>.</p>\n<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<p>Filters by default work on <code class=\"language-text\">IQueryable</code> but you can also easily customize them to use other interfaces.</p>\n<p><em>Hot Chocolate</em> by default will inspect your .NET model and infer the possible filter operations from it.</p>\n<p>The following type would yield the following filter operations:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"21122108859139875000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class Foo\n{\n    public string Bar { get; set; }\n}`, `21122108859139875000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Foo</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Bar <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"29237195014051885000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`input FooFilter {\n  bar: String\n  bar_contains: String\n  bar_ends_with: String\n  bar_in: [String]\n  bar_not: String\n  bar_not_contains: String\n  bar_not_ends_with: String\n  bar_not_in: [String]\n  bar_not_starts_with: String\n  bar_starts_with: String\n  AND: [FooFilter!]\n  OR: [FooFilter!]\n}`, `29237195014051885000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">input</span> FooFilter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">bar</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">bar_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">bar_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">bar_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">bar_not</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">bar_not_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">bar_not_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">bar_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">bar_not_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">bar_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>FooFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>FooFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>So how can we get started with filters?</strong></p>\n<p>Getting started with filters is very easy, especially if you do not want to explicitly define filters or customize anything.</p>\n<p>Hot Chocolate will infer the filters directly from your .Net Model and then use a Middleware to apply filters to <code class=\"language-text\">IQueryable&lt;T&gt;</code> or <code class=\"language-text\">IEnumerable&lt;T&gt;</code> on execution.</p>\n<blockquote>\n<p>⚠️ <strong>Note:</strong> If you use more than middleware, keep in mind that <strong>ORDER MATTERS</strong> <em>Why order matters</em> &#x3C;<Add link >></p>\n</blockquote>\n<blockquote>\n<p>⚠️ <strong>Note:</strong> Be sure to install the <code class=\"language-text\">HotChocolate.Types.Filters</code> NuGet package.</p>\n</blockquote>\n<p>In the following example, the person resolver returns the <code class=\"language-text\">IQueryable</code> representing the data source. The <code class=\"language-text\">IQueryable</code> represents a not executed database query on which <em>Hot Chocolate</em> can apply filters.</p>\n<p><strong>Code First</strong></p>\n<p>The next thing to note is the <code class=\"language-text\">UseFiltering</code> extension method which adds the filter argument to the field and a middleware that can apply those filters to the <code class=\"language-text\">IQueryable</code>. The execution engine will, in the end, execute the <code class=\"language-text\">IQueryable</code> and fetch the data.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"1306444386585781000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class QueryType\n    : ObjectType<Query>\n{\n    protected override void Configure(IObjectTypeDescriptor<Query> descriptor)\n    {\n        descriptor.Field(t => t.GetPersons(default))\n            .Type<ListType<NonNullType<PersonType>>>()\n            .UseFiltering();\n    }\n}\n\npublic class Query\n{\n    public IQueryable<Person> GetPersons([Service]IPersonRepository repository)\n    {\n        repository.GetPersons();\n    }\n}`, `1306444386585781000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">QueryType</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType<span class=\"token punctuation\">&lt;</span>Query<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObjectTypeDescriptor<span class=\"token punctuation\">&lt;</span>Query<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Field</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=></span> t<span class=\"token punctuation\">.</span><span class=\"token function\">GetPersons</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Type</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>ListType<span class=\"token punctuation\">&lt;</span>NonNullType<span class=\"token punctuation\">&lt;</span>PersonType<span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">UseFiltering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>Person<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetPersons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">IPersonRepository</span> repository<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        repository<span class=\"token punctuation\">.</span><span class=\"token function\">GetPersons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Pure Code First</strong></p>\n<p>The field descriptor attribute <code class=\"language-text\">[UseFiltering]</code> does apply the extension method <code class=\"language-text\">UseFiltering()</code> on the field descriptor.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"42779280432139300000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class Query\n{\n    [UseFiltering]\n    public IQueryable<Person> GetPersons([Service]IPersonRepository repository)\n    {\n        repository.GetPersons();\n    }\n}`, `42779280432139300000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseFiltering</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>Person<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetPersons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">IPersonRepository</span> repository<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        repository<span class=\"token punctuation\">.</span><span class=\"token function\">GetPersons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Schema First</strong></p>\n<blockquote>\n<p>⚠️ <strong>Note:</strong> Schema first does currently not support filtering!</p>\n</blockquote>\n<h1 id=\"customizing-filters\" style=\"position:relative;\"><a href=\"#customizing-filters\" aria-label=\"customizing filters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customizing Filters</h1>\n<p>The filter objects can be customized and you can rename and remove operations from it or define operations explicitly.</p>\n<p>Filters are input objects and are defined through a <code class=\"language-text\">FilterInputType&lt;T&gt;</code>. To define and customize a filter we have to inherit from <code class=\"language-text\">FilterInputType&lt;T&gt;</code> and configure it like any other type.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"41299450741247615000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class PersonFilterType\n    : FilterInputType<Person>\n{\n    protected override void Configure(\n        IFilterInputTypeDescriptor<Person> descriptor)\n    {\n        descriptor\n            .BindFieldsExplicitly()\n            .Filter(t => t.Name)\n            .BindOperationsExplicitly()\n            .AllowEquals().Name(&quot;equals&quot;).And()\n            .AllowContains().Name(&quot;contains&quot;).And()\n            .AllowIn().Name(&quot;in&quot;);\n    }\n}`, `41299450741247615000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PersonFilterType</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterInputType<span class=\"token punctuation\">&lt;</span>Person<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span>\n        <span class=\"token class-name\">IFilterInputTypeDescriptor<span class=\"token punctuation\">&lt;</span>Person<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor\n            <span class=\"token punctuation\">.</span><span class=\"token function\">BindFieldsExplicitly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">Filter</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=></span> t<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">BindOperationsExplicitly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowEquals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"equals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowContains</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"contains\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"in\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The above type defines explicitly for what fields filter operations are allowed and what filter operations are allowed. Also, the filter renames the equals filter to <code class=\"language-text\">equals</code>.</p>\n<p>To apply this filter type we just have to provide it to the <code class=\"language-text\">UseFiltering</code> extension method with as the generic type argument.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"49465888486908715000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class QueryType\n    : ObjectType<Query>\n{\n    protected override void Configure(IObjectTypeDescriptor<Query> descriptor)\n    {\n        descriptor.Field(t => t.GetPerson(default))\n            .Type<ListType<NonNullType<PersonType>>>();\n            .UseFiltering<PersonFilterType>()\n    }\n}`, `49465888486908715000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">QueryType</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType<span class=\"token punctuation\">&lt;</span>Query<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObjectTypeDescriptor<span class=\"token punctuation\">&lt;</span>Query<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Field</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=></span> t<span class=\"token punctuation\">.</span><span class=\"token function\">GetPerson</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Type</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>ListType<span class=\"token punctuation\">&lt;</span>NonNullType<span class=\"token punctuation\">&lt;</span>PersonType<span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">UseFiltering</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>PersonFilterType<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"sorting\" style=\"position:relative;\"><a href=\"#sorting\" aria-label=\"sorting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sorting</h1>\n<p>Like with filter support you can add sorting support to your database queries.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"26983121877191100000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class QueryType\n    : ObjectType<Query>\n{\n    protected override void Configure(IObjectTypeDescriptor<Query> descriptor)\n    {\n        descriptor.Field(t => t.GetPerson(default))\n            .Type<ListType<NonNullType<PersonType>>>();\n            .UseSorting()\n    }\n}`, `26983121877191100000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">QueryType</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType<span class=\"token punctuation\">&lt;</span>Query<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObjectTypeDescriptor<span class=\"token punctuation\">&lt;</span>Query<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Field</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=></span> t<span class=\"token punctuation\">.</span><span class=\"token function\">GetPerson</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Type</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>ListType<span class=\"token punctuation\">&lt;</span>NonNullType<span class=\"token punctuation\">&lt;</span>PersonType<span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">UseSorting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>⚠️ <strong>Note</strong>: Be sure to install the <code class=\"language-text\">HotChocolate.Types.Sorting</code> NuGet package.</p>\n</blockquote>\n<p>If you want to combine for instance paging, filtering and sorting make sure that the order is like follows:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"91227565064154860000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class QueryType\n    : ObjectType<Query>\n{\n    protected override void Configure(IObjectTypeDescriptor<Query> descriptor)\n    {\n        descriptor.Field(t => t.GetPerson(default))\n            .UsePaging<PersonType>()\n            .UseFiltering()\n            .UseSorting();\n    }\n}`, `91227565064154860000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">QueryType</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType<span class=\"token punctuation\">&lt;</span>Query<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObjectTypeDescriptor<span class=\"token punctuation\">&lt;</span>Query<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Field</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=></span> t<span class=\"token punctuation\">.</span><span class=\"token function\">GetPerson</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">UsePaging</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>PersonType<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">UseFiltering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">UseSorting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Why is order important?</strong></p>\n<p>Paging, filtering and sorting are modular middlewares that form the field resolver pipeline.</p>\n<p>The above example forms the following pipeline:</p>\n<p><code class=\"language-text\">Paging -&gt; Filtering -&gt; Sorting -&gt; Field Resolver</code></p>\n<p>The paging middleware will first delegate to the next middleware, which is filtering.</p>\n<p>The filtering middleware will also first delegate to the next middleware, which is sorting.</p>\n<p>The sorting middleware will again first delegate to the next middleware, which is the actual field resolver.</p>\n<p>The field resolver will call <code class=\"language-text\">GetPerson</code> which returns in this example an <code class=\"language-text\">IQueryable&lt;Person&gt;</code>. The queryable represents a not yet executed database query.</p>\n<p>After the resolver has been executed and puts its result onto the middleware context the sorting middleware will apply for the sort order on the query.</p>\n<p>After the sorting middleware has been executed and updated the result on the middleware context the filtering middleware will apply its filters on the queryable and updates the result on the middleware context.</p>\n<p>After the paging middleware has been executed and updated the result on the middleware context the paging middleware will slice the data and execute the queryable which will then actually pull in data from the data source.</p>\n<p>So, if we, for instance, applied paging as our last middleware the data set would have been sliced first and then filtered which in most cases is not what we actually want.</p>\n<h1 id=\"filter--operations-kinds\" style=\"position:relative;\"><a href=\"#filter--operations-kinds\" aria-label=\"filter  operations kinds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Filter &#x26; Operations Kinds</h1>\n<p>Filtering can be broken down into different kinds of filters that then have different operations.\nThe filter kind is bound to the type. A string is fundamentally something different than an array or an object.\nEach filter kind has different operations that can be applied to it. Some operations are unique to a filter and some operations are shared across multiple filters.\ne.g. A string filter has string specific operations like <code class=\"language-text\">Contains</code> or <code class=\"language-text\">EndsWith</code> but still shares the operations <code class=\"language-text\">Equals</code> and <code class=\"language-text\">NotEquals</code> with the boolean filter.</p>\n<h2 id=\"filter-kinds\" style=\"position:relative;\"><a href=\"#filter-kinds\" aria-label=\"filter kinds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Filter Kinds</h2>\n<p>Hot Chocolate knows following filter kinds</p>\n<table>\n<thead>\n<tr>\n<th>Kind</th>\n<th>Operations</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>String</td>\n<td>Equals, In, EndsWith, StartsWith, Contains, NotEquals, NotIn, NotEndsWith, NotStartsWith, NotContains</td>\n</tr>\n<tr>\n<td>Bool</td>\n<td>Equals, NotEquals</td>\n</tr>\n<tr>\n<td>Object</td>\n<td>Equals</td>\n</tr>\n<tr>\n<td>Array</td>\n<td>Some, Any, All, None</td>\n</tr>\n<tr>\n<td>Comparable</td>\n<td>Equals, In, GreaterThan, GreaterThanOrEqual, LowerThan, LowerThanOrEqual, NotEquals, NotIn, NotGreaterThan, NotGreaterThanOrEqual, NotLowerThan, NotLowerThanOrEqual</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"operations-kinds\" style=\"position:relative;\"><a href=\"#operations-kinds\" aria-label=\"operations kinds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Operations Kinds</h2>\n<p>Hot Chocolate knows following operation kinds</p>\n<table>\n<thead>\n<tr>\n<th>Kind</th>\n<th>Operations</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Equals</td>\n<td>Compares the equality of input value and property value</td>\n</tr>\n<tr>\n<td>NotEquals</td>\n<td>negation of Equals</td>\n</tr>\n<tr>\n<td>In</td>\n<td>Checks if the property value is contained in a given list of input values</td>\n</tr>\n<tr>\n<td>NotIn</td>\n<td>negation of In</td>\n</tr>\n<tr>\n<td>GreaterThan</td>\n<td>checks if the input value is greater than the property value</td>\n</tr>\n<tr>\n<td>NotGreaterThan</td>\n<td>negation of GreaterThan</td>\n</tr>\n<tr>\n<td>GreaterThanOrEquals</td>\n<td>checks if the input value is greater than or equal to the property value</td>\n</tr>\n<tr>\n<td>NotGreaterThanOrEquals</td>\n<td>negation of GreaterThanOrEquals</td>\n</tr>\n<tr>\n<td>LowerThan</td>\n<td>checks if the input value is lower than the property value</td>\n</tr>\n<tr>\n<td>NotLowerThan</td>\n<td>negation of LowerThan</td>\n</tr>\n<tr>\n<td>LowerThanOrEquals</td>\n<td>checks if the input value is lower than or equal to the property value</td>\n</tr>\n<tr>\n<td>NotLowerThanOrEquals</td>\n<td>negation of LowerThanOrEquals</td>\n</tr>\n<tr>\n<td>EndsWith</td>\n<td>checks if the property value ends with the input value</td>\n</tr>\n<tr>\n<td>NotEndsWith</td>\n<td>negation of EndsWith</td>\n</tr>\n<tr>\n<td>StartsWith</td>\n<td>checks if the property value starts with the input value</td>\n</tr>\n<tr>\n<td>NotStartsWith</td>\n<td>negation of StartsWith</td>\n</tr>\n<tr>\n<td>Contains</td>\n<td>checks if the input value is contained in the property value</td>\n</tr>\n<tr>\n<td>NotContains</td>\n<td>negation of Contains</td>\n</tr>\n<tr>\n<td>Some</td>\n<td>checks if at least one element in the collection exists</td>\n</tr>\n<tr>\n<td>Some</td>\n<td>checks if at least one element of the property value meets the condition provided by the input value</td>\n</tr>\n<tr>\n<td>None</td>\n<td>checks if no element of the property value meets the condition provided by the input value</td>\n</tr>\n<tr>\n<td>All</td>\n<td>checks if all least one element of the property value meets the condition provided by the input value</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"boolean-filter\" style=\"position:relative;\"><a href=\"#boolean-filter\" aria-label=\"boolean filter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Boolean Filter</h2>\n<p>In this example, we look at the filter configuration of a Boolean filter.\nAs an example, we will use the following model:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"39070770545448050000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class User\n{\n    public bool IsOnline {get;set;}\n}\n\npublic class Query : ObjectType\n{\n    [UseFiltering]\n    public IQueryable<User> GetUsers([Service]UserService users )\n      => users.AsQueryable();\n}`, `39070770545448050000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> IsOnline <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseFiltering</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">UserService</span> users <span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">=></span> users<span class=\"token punctuation\">.</span><span class=\"token function\">AsQueryable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The produced GraphQL SDL will look like the following:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"35002193789979152000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Query {\n  users(where: UserFilter): [User]\n}\n\ntype User {\n  isOnline: Boolean\n}\n\ninput UserFilter {\n  isOnline: Boolean\n  isOnline_not: Boolean\n  AND: [UserFilter!]\n  OR: [UserFilter!]\n}`, `35002193789979152000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">users</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">where</span><span class=\"token punctuation\">:</span> UserFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">isOnline</span><span class=\"token punctuation\">:</span> Boolean\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> UserFilter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">isOnline</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">isOnline_not</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"boolean-operation-descriptor\" style=\"position:relative;\"><a href=\"#boolean-operation-descriptor\" aria-label=\"boolean operation descriptor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Boolean Operation Descriptor</h3>\n<p>The example above showed that configuring the operations is optional.\nIf you want to have access to the actual field input types or allow only a subset of Boolean filters for a given property, you can configure the operation over the <code class=\"language-text\">IFilterInputTypeDescriptor&lt;User&gt;</code></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"4729583185309494000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class UserFilterType : FilterInputType<User>\n{\n    protected override void Configure(\n        IFilterInputTypeDescriptor<User> descriptor)\n    {\n        descriptor.BindFieldsExplicitly();\n        descriptor.Filter(x => x.Name)\n            .AllowEquals().And()\n            .AllowNotEquals();\n    }\n}`, `4729583185309494000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserFilterType</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterInputType<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span>\n        <span class=\"token class-name\">IFilterInputTypeDescriptor<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">BindFieldsExplicitly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Filter</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowEquals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowNotEquals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"comparable-filter\" style=\"position:relative;\"><a href=\"#comparable-filter\" aria-label=\"comparable filter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Comparable Filter</h2>\n<p>In this example, we look at the filter configuration of a comparable filter.</p>\n<p>A comparable filter is generated for all values that implement IComparable except string and boolean.\ne.g. <code class=\"language-csharp\"><span class=\"token keyword\">enum</span></code>, <code class=\"language-csharp\"><span class=\"token keyword\">int</span></code>, <code class=\"language-csharp\">DateTime</code>...</p>\n<p>As an example we will use the following model:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"46890916560887280000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class User\n{\n    public int LoggingCount {get;set;}\n}\n\npublic class Query : ObjectType\n{\n    [UseFiltering]\n    public IQueryable<User> GetUsers([Service]UserService users )\n      => users.AsQueryable();\n}`, `46890916560887280000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> LoggingCount <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseFiltering</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">UserService</span> users <span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">=></span> users<span class=\"token punctuation\">.</span><span class=\"token function\">AsQueryable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The produced GraphQL SDL will look like the following:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"69274088986042860000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Query {\n  users(where: UserFilter): [User]\n}\n\ntype User {\n  loggingCount: Int\n}\n\ninput UserFilter {\n  loggingCount: Int\n  loggingCount_gt: Int\n  loggingCount_gte: Int\n  loggingCount_in: [Int!]\n  loggingCount_lt: Int\n  loggingCount_lte: Int\n  loggingCount_not: Int\n  loggingCount_not_gt: Int\n  loggingCount_not_gte: Int\n  loggingCount_not_in: [Int!]\n  loggingCount_not_lt: Int\n  loggingCount_not_lte: Int\n  AND: [UserFilter!]\n  OR: [UserFilter!]\n}`, `69274088986042860000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">users</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">where</span><span class=\"token punctuation\">:</span> UserFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">loggingCount</span><span class=\"token punctuation\">:</span> Int\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> UserFilter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">loggingCount</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_gt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_gte</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Int<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">loggingCount_lt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_lte</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not_gt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not_gte</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Int<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">loggingCount_not_lt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not_lte</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"comparable-operation-descriptor\" style=\"position:relative;\"><a href=\"#comparable-operation-descriptor\" aria-label=\"comparable operation descriptor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Comparable Operation Descriptor</h3>\n<p>The example above showed that configuring the operations is optional.\nIf you want to have access to the actual field input types or allow only a subset of comparable filters for a given property, you can configure the operation over the <code class=\"language-text\">IFilterInputTypeDescriptor&lt;User&gt;</code></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"5354175200333233000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class UserFilterType : FilterInputType<User>\n{\n    protected override void Configure(\n        IFilterInputTypeDescriptor<User> descriptor)\n    {\n        descriptor.BindFieldsExplicitly();\n        descriptor.Filter(x => x.Name)\n            .AllowEquals().And()\n            .AllowNotEquals().And()\n            .AllowGreaterThan().And()\n            .AllowNotGreaterThan().And()\n            .AllowGreaterThanOrEqals().And()\n            .AllowNotGreaterThanOrEqals().And()\n            .AllowLowerThan().And()\n            .AllowNotLowerThan().And()\n            .AllowLowerThanOrEqals().And()\n            .AllowNotLowerThanOrEqals().And()\n            .AllowIn().And()\n            .AllowNotIn();\n    }\n}`, `5354175200333233000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserFilterType</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterInputType<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span>\n        <span class=\"token class-name\">IFilterInputTypeDescriptor<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">BindFieldsExplicitly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Filter</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowEquals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowNotEquals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowGreaterThan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowNotGreaterThan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowGreaterThanOrEqals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowNotGreaterThanOrEqals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowLowerThan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowNotLowerThan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowLowerThanOrEqals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowNotLowerThanOrEqals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowNotIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"string-filter\" style=\"position:relative;\"><a href=\"#string-filter\" aria-label=\"string filter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>String Filter</h2>\n<p>In this example, we look at the filter configuration of a String filter.\nAs an example we will use the following model:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"59996618584524850000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class User\n{\n    public string Name {get;set;}\n}\n\npublic class Query : ObjectType\n{\n    [UseFiltering]\n    public IQueryable<User> GetUsers([Service]UserService users )\n      => users.AsQueryable();\n}`, `59996618584524850000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseFiltering</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">UserService</span> users <span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">=></span> users<span class=\"token punctuation\">.</span><span class=\"token function\">AsQueryable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The produced GraphQL SDL will look like the following:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"67954101871447040000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Query {\n  users(where: UserFilter): [User]\n}\n\ntype User {\n  name: String\n}\n\ninput UserFilter {\n  name: String\n  name_contains: String\n  name_ends_with: String\n  name_in: [String]\n  name_not: String\n  name_not_contains: String\n  name_not_ends_with: String\n  name_not_in: [String]\n  name_not_starts_with: String\n  name_starts_with: String\n  AND: [UserFilter!]\n  OR: [UserFilter!]\n}`, `67954101871447040000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">users</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">where</span><span class=\"token punctuation\">:</span> UserFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> String\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> UserFilter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">name_not</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_not_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_not_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">name_not_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"string-operation-descriptor\" style=\"position:relative;\"><a href=\"#string-operation-descriptor\" aria-label=\"string operation descriptor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>String Operation Descriptor</h3>\n<p>The example above showed that configuring the operations is optional.\nIf you want to have access to the actual field input types or allow only a subset of string filters for a given property, you can configure the operation over the <code class=\"language-text\">IFilterInputTypeDescriptor&lt;User&gt;</code></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"78913307115273200000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class UserFilterType : FilterInputType<User>\n{\n    protected override void Configure(\n        IFilterInputTypeDescriptor<User> descriptor)\n    {\n        descriptor.BindFieldsExplicitly();\n        descriptor.Filter(x => x.Name)\n            .AllowEquals().And()\n            .AllowNotEquals().And()\n            .AllowContains().And()\n            .AllowNotContains().And()\n            .AllowStartsWith().And()\n            .AllowNotStartsWith().And()\n            .AllowEndsWith().And()\n            .AllowNotEndsWith().And()\n            .AllowIn().And()\n            .AllowNotIn();\n    }\n}`, `78913307115273200000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserFilterType</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterInputType<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span>\n        <span class=\"token class-name\">IFilterInputTypeDescriptor<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">BindFieldsExplicitly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Filter</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowEquals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowNotEquals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowContains</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowNotContains</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowStartsWith</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowNotStartsWith</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowEndsWith</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowNotEndsWith</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowNotIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"object-filter\" style=\"position:relative;\"><a href=\"#object-filter\" aria-label=\"object filter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Object Filter</h2>\n<p>In this example, we look at the filter configuration of an object filter.</p>\n<p>An object filter is generated for all nested objects. The object filter can also be used to filter over database relations.\nFor each nested object, filters are generated.</p>\n<p>As an example we will use the following model:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"2445499677631701500\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class User\n{\n    public Address Address {get;set;}\n}\n\npublic class Address\n{\n    public string Street {get;set;}\n\n    public bool IsPrimary {get;set;}\n}\n\npublic class Query : ObjectType\n{\n    [UseFiltering]\n    public IQueryable<User> GetUsers([Service]UserService users )\n      => users.AsQueryable();\n}`, `2445499677631701500`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Address</span> Address <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Address</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Street <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> IsPrimary <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseFiltering</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">UserService</span> users <span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">=></span> users<span class=\"token punctuation\">.</span><span class=\"token function\">AsQueryable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The produced GraphQL SDL will look like the following:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"62564664167478940000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Query {\n  users(where: UserFilter): [User]\n}\n\ntype User {\n  address: Address\n}\n\ntype Address {\n  isPrimary: Boolean\n  street: String\n}\n\ninput UserFilter {\n  address: AddressFilter\n  AND: [UserFilter!]\n  OR: [UserFilter!]\n}\n\ninput AddressFilter {\n  is_primary: Boolean\n  is_primary_not: Boolean\n  street: String\n  street_contains: String\n  street_ends_with: String\n  street_in: [String]\n  street_not: String\n  street_not_contains: String\n  street_not_ends_with: String\n  street_not_in: [String]\n  street_not_starts_with: String\n  street_starts_with: String\n  AND: [AddressFilter!]\n  OR: [AddressFilter!]\n}`, `62564664167478940000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">users</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">where</span><span class=\"token punctuation\">:</span> UserFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">address</span><span class=\"token punctuation\">:</span> Address\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Address</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">isPrimary</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">street</span><span class=\"token punctuation\">:</span> String\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> UserFilter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">address</span><span class=\"token punctuation\">:</span> AddressFilter\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> AddressFilter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">is_primary</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">is_primary_not</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">street</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">street_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">street_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">street_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">street_not</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">street_not_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">street_not_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">street_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">street_not_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">street_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>AddressFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>AddressFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"object-operation-descriptor\" style=\"position:relative;\"><a href=\"#object-operation-descriptor\" aria-label=\"object operation descriptor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Object Operation Descriptor</h3>\n<p>The example above showed that configuring the operations is optional.\nIf you want to have access to the actual field input types or allow only a subset of comparable filters for a given property, you can configure the operation over the <code class=\"language-text\">IFilterInputTypeDescriptor&lt;User&gt;</code></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"46329901411512700000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class UserFilterType : FilterInputType<User>\n{\n    protected override void Configure(\n        IFilterInputTypeDescriptor<User> descriptor)\n    {\n        descriptor.BindFieldsExplicitly();\n        descriptor.Object(x => x.Address);\n    }\n}`, `46329901411512700000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserFilterType</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterInputType<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span>\n        <span class=\"token class-name\">IFilterInputTypeDescriptor<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">BindFieldsExplicitly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Object</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Configuring a custom nested filter type:</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"86313570024275180000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class UserFilterType : FilterInputType<User>\n{\n    protected override void Configure(\n        IFilterInputTypeDescriptor<User> descriptor)\n    {\n        descriptor.BindFieldsExplicitly();\n        descriptor.Object(x => x.Address).AllowObject<AddressFilterType>();\n    }\n}\n\npublic class AddressFilterType : FilterInputType<Address>\n{\n    protected override void Configure(\n        IFilterInputTypeDescriptor<Address> descriptor)\n    {\n        descriptor.BindFieldsExplicitly();\n        descriptor.Filter(x => x.IsPrimary);\n    }\n}\n\n// Or Inline\n\npublic class UserFilterType : FilterInputType<User>\n{\n    protected override void Configure(\n        IFilterInputTypeDescriptor<User> descriptor)\n    {\n        descriptor.BindFieldsExplicitly();\n        descriptor.Object(x => x.Address)\n          .AllowObject(\n            y => y.BindFieldsExplicitly().Filter(z => z.IsPrimary));\n    }\n}`, `86313570024275180000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserFilterType</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterInputType<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span>\n        <span class=\"token class-name\">IFilterInputTypeDescriptor<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">BindFieldsExplicitly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Object</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AllowObject</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>AddressFilterType<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AddressFilterType</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterInputType<span class=\"token punctuation\">&lt;</span>Address<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span>\n        <span class=\"token class-name\">IFilterInputTypeDescriptor<span class=\"token punctuation\">&lt;</span>Address<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">BindFieldsExplicitly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Filter</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>IsPrimary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Or Inline</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserFilterType</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterInputType<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span>\n        <span class=\"token class-name\">IFilterInputTypeDescriptor<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">BindFieldsExplicitly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Object</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Address<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">AllowObject</span><span class=\"token punctuation\">(</span>\n            y <span class=\"token operator\">=></span> y<span class=\"token punctuation\">.</span><span class=\"token function\">BindFieldsExplicitly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Filter</span><span class=\"token punctuation\">(</span>z <span class=\"token operator\">=></span> z<span class=\"token punctuation\">.</span>IsPrimary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"list-filter\" style=\"position:relative;\"><a href=\"#list-filter\" aria-label=\"list filter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>List Filter</h2>\n<p>In this example, we look at the filter configuration of a list filter.</p>\n<p>List filters are generated for all nested IEnumerables. The array filter addresses scalars and object values differently.\nIn the case of a scalar, an object type is generated to address the different operations of this scalar. If a list of strings is filtered, an object type is created to address all string operations.\nIn case the list contains a complex object, an object filter for this object is generated.</p>\n<p>A list filter is generated for all properties that implement IEnumerable.\ne.g. <code class=\"language-csharp\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></code>, <code class=\"language-csharp\">List<span class=\"token operator\">&lt;</span>Foo<span class=\"token operator\">></span></code>, <code class=\"language-csharp\">IEnumerable<span class=\"token operator\">&lt;</span>Bar<span class=\"token operator\">></span></code>...</p>\n<p>As an example we will use the following model:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"32231735854204580000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class User\n{\n    public string[] Roles {get;set;}\n\n    public IEnumerable<Address> Addresses {get;set;}\n}\n\npublic class Address\n{\n    public string Street {get;set;}\n\n    public bool IsPrimary {get;set;}\n}\n\npublic class Query : ObjectType\n{\n    [UseFiltering]\n    public IQueryable<User> GetUsers([Service]UserService users )\n      => users.AsQueryable();\n}`, `32231735854204580000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> Roles <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IEnumerable<span class=\"token punctuation\">&lt;</span>Address<span class=\"token punctuation\">></span></span> Addresses <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Address</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Street <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> IsPrimary <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseFiltering</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">UserService</span> users <span class=\"token punctuation\">)</span>\n      <span class=\"token operator\">=></span> users<span class=\"token punctuation\">.</span><span class=\"token function\">AsQueryable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The produced GraphQL SDL will look like the following:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"3701311678176289000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Query {\n  users(where: UserFilter): [User]\n}\n\ntype User {\n  addresses: [Address]\n  roles: [String]\n}\n\ntype Address {\n  isPrimary: Boolean\n  street: String\n}\n\ninput UserFilter {\n  addresses_some: AddressFilter\n  addresses_all: AddressFilter\n  addresses_none: AddressFilter\n  addresses_any: Boolean\n  roles_some: ISingleFilterOfStringFilter\n  roles_all: ISingleFilterOfStringFilter\n  roles_none: ISingleFilterOfStringFilter\n  roles_any: Boolean\n  AND: [UserFilter!]\n  OR: [UserFilter!]\n}\n\ninput AddressFilter {\n  is_primary: Boolean\n  is_primary_not: Boolean\n  street: String\n  street_contains: String\n  street_ends_with: String\n  street_in: [String]\n  street_not: String\n  street_not_contains: String\n  street_not_ends_with: String\n  street_not_in: [String]\n  street_not_starts_with: String\n  street_starts_with: String\n  AND: [AddressFilter!]\n  OR: [AddressFilter!]\n}\n\ninput ISingleFilterOfStringFilter {\n  AND: [ISingleFilterOfStringFilter!]\n  element: String\n  element_contains: String\n  element_ends_with: String\n  element_in: [String]\n  element_not: String\n  element_not_contains: String46\n  element_not_ends_with: String\n  element_not_in: [String]\n  element_not_starts_with: String\n  element_starts_with: String\n  OR: [ISingleFilterOfStringFilter!]\n}`, `3701311678176289000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">users</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">where</span><span class=\"token punctuation\">:</span> UserFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">addresses</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Address<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">roles</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Address</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">isPrimary</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">street</span><span class=\"token punctuation\">:</span> String\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> UserFilter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">addresses_some</span><span class=\"token punctuation\">:</span> AddressFilter\n  <span class=\"token attr-name\">addresses_all</span><span class=\"token punctuation\">:</span> AddressFilter\n  <span class=\"token attr-name\">addresses_none</span><span class=\"token punctuation\">:</span> AddressFilter\n  <span class=\"token attr-name\">addresses_any</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">roles_some</span><span class=\"token punctuation\">:</span> ISingleFilterOfStringFilter\n  <span class=\"token attr-name\">roles_all</span><span class=\"token punctuation\">:</span> ISingleFilterOfStringFilter\n  <span class=\"token attr-name\">roles_none</span><span class=\"token punctuation\">:</span> ISingleFilterOfStringFilter\n  <span class=\"token attr-name\">roles_any</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> AddressFilter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">is_primary</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">is_primary_not</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">street</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">street_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">street_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">street_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">street_not</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">street_not_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">street_not_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">street_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">street_not_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">street_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>AddressFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>AddressFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> ISingleFilterOfStringFilter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>ISingleFilterOfStringFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">element</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">element_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">element_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">element_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">element_not</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">element_not_contains</span><span class=\"token punctuation\">:</span> String46\n  <span class=\"token attr-name\">element_not_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">element_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">element_not_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">element_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>ISingleFilterOfStringFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"array-operation-descriptor\" style=\"position:relative;\"><a href=\"#array-operation-descriptor\" aria-label=\"array operation descriptor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Array Operation Descriptor</h3>\n<p>The example above showed that configuring the operations is optional.\nIf you want to have access to the actual field input types or allow only a subset of array filters for a given property, you can configure the operation over the <code class=\"language-text\">IFilterInputTypeDescriptor&lt;User&gt;</code></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"59304676026493010000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class UserFilterType : FilterInputType<User>\n{\n    protected override void Configure(\n        IFilterInputTypeDescriptor<User> descriptor)\n    {\n        descriptor.BindFieldsExplicitly();\n        descriptor.List(x => x.Addresses)\n            .AllowSome().And()\n            .AlloAny().And()\n            .AllowAll().And()\n            .AllowNone();\n        descriptor.List(x => x.Roles)\n            .AllowSome().And()\n            .AlloAny().And()\n            .AllowAll().And()\n            .AllowNone();\n    }\n}`, `59304676026493010000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserFilterType</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterInputType<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span>\n        <span class=\"token class-name\">IFilterInputTypeDescriptor<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">BindFieldsExplicitly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">List</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Addresses<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowSome</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AlloAny</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowNone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">List</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Roles<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowSome</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AlloAny</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowNone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"naming-conventions\" style=\"position:relative;\"><a href=\"#naming-conventions\" aria-label=\"naming conventions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Naming Conventions</h1>\n<p><em>Hot Chococlate</em> already provides two naming schemes for filters. If you would like to define your own naming scheme or extend existing ones have a look at the documentation of &#x3C;<LINk FILTER CONVENTIONS>></p>\n<h2 id=\"snake-case\" style=\"position:relative;\"><a href=\"#snake-case\" aria-label=\"snake case permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Snake Case</h2>\n<p><strong>Configuration</strong>\nYou can configure the Snake Case with the <code class=\"language-text\">UseSnakeCase</code> extension method convention on the <code class=\"language-text\">IFilterConventionDescriptor</code></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"67188491796094850000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class CustomConvention : FilterConvention\n{\n    protected override void Configure(IFilterConventionDescriptor descriptor)\n    {\n        descriptor.UseSnakeCase()\n    }\n}\n\nSchemaBuilder.New().AddConvention<CustomConvention>();\n//\nSchemaBuilder.New().AddConvention(new FilterConvention(x => x.UseSnakeCase())`, `67188491796094850000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomConvention</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterConvention</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IFilterConventionDescriptor</span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">UseSnakeCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nSchemaBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddConvention</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>CustomConvention<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//</span>\nSchemaBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AddConvention</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FilterConvention</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span><span class=\"token function\">UseSnakeCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"10236252932597600000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`input FooBarFilter {\n  AND: [FooBarFilter!]\n  nested: String\n  nested_contains: String\n  nested_ends_with: String\n  nested_in: [String]\n  nested_not: String\n  nested_not_contains: String\n  nested_not_ends_with: String\n**Change the name of an operation**\n  nested_not_in: [String]\n  nested_not_starts_with: String\n  nested_starts_with: String\n  OR: [FooBarFilter!]\n}\n\ninput FooFilter {\n  AND: [FooFilter!]\n  bool: Boolean\n  bool_not: Boolean\n  comparable: Short\n  comparableEnumerable_all: ISingleFilterOfInt16Filter\n  comparableEnumerable_any: Boolean\n  comparableEnumerable_none: ISingleFilterOfInt16Filter\n  comparableEnumerable_some: ISingleFilterOfInt16Filter\n  comparable_gt: Short\n  comparable_gte: Short\n  comparable_in: [Short!]\n  comparable_lt: Short\n  comparable_lte: Short\n  comparable_not: Short\n  comparable_not_gt: Short\n  comparable_not_gte: Short\n  comparable_not_in: [Short!]\n  comparable_not_lt: Short\n  comparable_not_lte: Short\n  object: FooBarFilter\n  OR: [FooFilter!]\n}\n\ninput ISingleFilterOfInt16Filter {\n  AND: [ISingleFilterOfInt16Filter!]\n  element: Short\n  element_gt: Short\n  element_gte: Short\n  element_in: [Short!]\n  element_lt: Short\n  element_lte: Short\n  element_not: Short\n  element_not_gt: Short\n  element_not_gte: Short\n  element_not_in: [Short!]\n  element_not_lt: Short\n  element_not_lte: Short\n  OR: [ISingleFilterOfInt16Filter!]\n}`, `10236252932597600000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">input</span> FooBarFilter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>FooBarFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">nested</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">nested_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">nested_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">nested_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">nested_not</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">nested_not_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">nested_not_ends_with</span><span class=\"token punctuation\">:</span> String\n**Change the name of an operation**\n  <span class=\"token attr-name\">nested_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">nested_not_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">nested_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>FooBarFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> FooFilter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>FooFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">bool</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">bool_not</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">comparable</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">comparableEnumerable_all</span><span class=\"token punctuation\">:</span> ISingleFilterOfInt16Filter\n  <span class=\"token attr-name\">comparableEnumerable_any</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">comparableEnumerable_none</span><span class=\"token punctuation\">:</span> ISingleFilterOfInt16Filter\n  <span class=\"token attr-name\">comparableEnumerable_some</span><span class=\"token punctuation\">:</span> ISingleFilterOfInt16Filter\n  <span class=\"token attr-name\">comparable_gt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">comparable_gte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">comparable_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Short<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">comparable_lt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">comparable_lte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">comparable_not</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">comparable_not_gt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">comparable_not_gte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">comparable_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Short<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">comparable_not_lt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">comparable_not_lte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">object</span><span class=\"token punctuation\">:</span> FooBarFilter\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>FooFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> ISingleFilterOfInt16Filter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>ISingleFilterOfInt16Filter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">element</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">element_gt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">element_gte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">element_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Short<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">element_lt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">element_lte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">element_not</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">element_not_gt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">element_not_gte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">element_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Short<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">element_not_lt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">element_not_lte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>ISingleFilterOfInt16Filter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"pascal-case\" style=\"position:relative;\"><a href=\"#pascal-case\" aria-label=\"pascal case permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pascal Case</h2>\n<p><strong>Configuration</strong>\nYou can configure the Pascal Case with the <code class=\"language-text\">UsePascalCase</code> extension method convention on the <code class=\"language-text\">IFilterConventionDescriptor</code></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"48081765190419380000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class CustomConvention : FilterConvention\n{\n    protected override void Configure(IFilterConventionDescriptor descriptor)\n    {\n        descriptor.UsePascalCase()\n    }\n}\n\nSchemaBuilder.New().AddConvention<CustomConvention>();\n//\nSchemaBuilder.New().AddConvention(new FilterConvention(x => x.UsePascalCase())`, `48081765190419380000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomConvention</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterConvention</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IFilterConventionDescriptor</span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">UsePascalCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nSchemaBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddConvention</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>CustomConvention<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//</span>\nSchemaBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AddConvention</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FilterConvention</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span><span class=\"token function\">UsePascalCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"73588941863588460000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`input FooBarFilter {\n  AND: [FooBarFilter!]\n  Nested: String\n  Nested_Contains: String\n  Nested_EndsWith: String\n  Nested_In: [String]\n  Nested_Not: String\n  Nested_Not_Contains: String\n  Nested_Not_EndsWith: String\n  Nested_Not_In: [String]\n  Nested_Not_StartsWith: String\n  Nested_StartsWith: String\n  OR: [FooBarFilter!]\n}\n\ninput FooFilter {\n  AND: [FooFilter!]\n  Bool: Boolean\n  Bool_Not: Boolean\n  Comparable: Short\n  ComparableEnumerable_All: ISingleFilterOfInt16Filter\n  ComparableEnumerable_Any: Boolean\n  ComparableEnumerable_None: ISingleFilterOfInt16Filter\n  ComparableEnumerable_Some: ISingleFilterOfInt16Filter\n  Comparable_Gt: Short\n  Comparable_Gte: Short\n  Comparable_In: [Short!]\n  Comparable_Lt: Short\n  Comparable_Lte: Short\n  Comparable_Not: Short\n  Comparable_Not_Gt: Short\n  Comparable_Not_Gte: Short\n  Comparable_Not_In: [Short!]\n  Comparable_Not_Lt: Short\n  Comparable_Not_Lte: Short\n  Object: FooBarFilter\n  OR: [FooFilter!]\n}\n\ninput ISingleFilterOfInt16Filter {\n  AND: [ISingleFilterOfInt16Filter!]\n  Element: Short\n  Element_Gt: Short\n  Element_Gte: Short\n  Element_In: [Short!]\n  Element_Lt: Short\n  Element_Lte: Short\n  Element_Not_Gt: Short\n  Element_Not: Short\n  Element_Not_Gte: Short\n  Element_Not_In: [Short!]\n  Element_Not_Lt: Short\n  Element_Not_Lte: Short\n  OR: [ISingleFilterOfInt16Filter!]\n}`, `73588941863588460000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">input</span> FooBarFilter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>FooBarFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">Nested</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">Nested_Contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">Nested_EndsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">Nested_In</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">Nested_Not</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">Nested_Not_Contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">Nested_Not_EndsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">Nested_Not_In</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">Nested_Not_StartsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">Nested_StartsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>FooBarFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> FooFilter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>FooFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">Bool</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">Bool_Not</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">Comparable</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">ComparableEnumerable_All</span><span class=\"token punctuation\">:</span> ISingleFilterOfInt16Filter\n  <span class=\"token attr-name\">ComparableEnumerable_Any</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">ComparableEnumerable_None</span><span class=\"token punctuation\">:</span> ISingleFilterOfInt16Filter\n  <span class=\"token attr-name\">ComparableEnumerable_Some</span><span class=\"token punctuation\">:</span> ISingleFilterOfInt16Filter\n  <span class=\"token attr-name\">Comparable_Gt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">Comparable_Gte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">Comparable_In</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Short<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">Comparable_Lt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">Comparable_Lte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">Comparable_Not</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">Comparable_Not_Gt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">Comparable_Not_Gte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">Comparable_Not_In</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Short<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">Comparable_Not_Lt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">Comparable_Not_Lte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">Object</span><span class=\"token punctuation\">:</span> FooBarFilter\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>FooFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> ISingleFilterOfInt16Filter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>ISingleFilterOfInt16Filter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">Element</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">Element_Gt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">Element_Gte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">Element_In</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Short<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">Element_Lt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">Element_Lte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">Element_Not_Gt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">Element_Not</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">Element_Not_Gte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">Element_Not_In</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Short<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">Element_Not_Lt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">Element_Not_Lte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>ISingleFilterOfInt16Filter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"customizing-filter\" style=\"position:relative;\"><a href=\"#customizing-filter\" aria-label=\"customizing filter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customizing Filter</h1>\n<p>Hot Chocolate provides different APIs to customize filtering. You can write custom filter input types, customize the inference behavior of .NET Objects, customize the generated expression, or create a custom visitor and attach your exotic database.</p>\n<p><strong>As this can be a bit overwhelming the following questionnaire might help:</strong></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>You do not want all of the generated filters and only allow a particular set of filters in a specific case?</em></td>\n<td>Custom FilterInputType</td>\n</tr>\n<tr>\n<td><em>You want to change the name of a field or a whole type?</em></td>\n<td>Custom FilterInputType</td>\n</tr>\n<tr>\n<td><em>You want to change the name of the <code class=\"language-text\">where</code> argument?</em></td>\n<td>Filter Conventions ArgumentName</td>\n</tr>\n<tr>\n<td><em>You want to configure how the name and the description of filters are generated in general? e.g. <code class=\"language-text\">PascalCaseFilterType</code>?</em></td>\n<td>Filter Conventions</td>\n</tr>\n<tr>\n<td><em>You want to configure what filters are allowed in general?</em></td>\n<td>Filter Conventions</td>\n</tr>\n<tr>\n<td>_Your database provider does not support certain operations of <code class=\"language-text\">IQueryable</code></td>\n<td>Filter Conventions</td>\n</tr>\n<tr>\n<td><em>You want to change the naming of a particular filter type? e.g.</em> <code class=\"language-text\">foo_contains</code> <em>should be</em> <code class=\"language-text\">foo_like</code></td>\n<td>Filter Conventions</td>\n</tr>\n<tr>\n<td><em>You want to customize the expression a filter is generating: e.g.</em> <code class=\"language-text\">_equals</code> <em>should not be case sensitive?</em></td>\n<td>Expression Visitor </td>\n</tr>\n<tr>\n<td><em>You want to create your own filter types with custom parameters and custom expressions? e.g. GeoJson?</em></td>\n<td>Filter Conventions</td>\n</tr>\n<tr>\n<td><em>You have a database client that does not support <code class=\"language-text\">IQueryable</code> and wants to generate filters for it?</em></td>\n<td>Custom Visitor</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"custom-filterinputtype\" style=\"position:relative;\"><a href=\"#custom-filterinputtype\" aria-label=\"custom filterinputtype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom FilterInputType</h1>\n<p>Under the hood, filtering is based on top of normal <em>Hot Chocolate</em> input types. You can easily customize them with a very familiar fluent interface. The filter input types follow the same <code class=\"language-text\">descriptor</code> scheme as you are used to from the normal filter input types. Just extend the base class <code class=\"language-text\">FilterInputType&lt;T&gt;</code> and override the descriptor method.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"39021642718711980000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class User\n{\n    public string Name {get; set; }\n\n    public string LastName {get; set; }\n}\n\npublic class UserFilterType\n    : FilterInputType<User>\n{\n    protected override void Configure( IFilterInputTypeDescriptor<User> descriptor) {\n\n    }\n}`, `39021642718711980000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> LastName <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserFilterType</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterInputType<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">IFilterInputTypeDescriptor<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">IFilterInputTypeDescriptor&lt;T&gt;</code> supports most of the methods of <code class=\"language-text\">IInputTypeDescriptor&lt;T&gt;</code> and adds the configuration interface for the filters. By default filters for all fields of the type are generated.\nIf you do want to specify the filters by yourself you can change this behavior with <code class=\"language-text\">BindFields</code>, <code class=\"language-text\">BindFieldsExplicitly</code> or <code class=\"language-text\">BindFieldsImplicitly</code>.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"85354995961126520000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class UserFilterType\n    : FilterInputType<User>\n{\n    protected override void Configure( IFilterInputTypeDescriptor<User> descriptor) {\n       descriptor.BindFieldsExplicitly();\n       descriptor.Filter(x => x.Name);\n    }\n}`, `85354995961126520000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserFilterType</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterInputType<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">IFilterInputTypeDescriptor<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">BindFieldsExplicitly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Filter</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"46308217193956370000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`input UserFilter {\n  name: String\n  name_contains: String\n  name_ends_with: String\n  name_in: [String]\n  name_not: String\n  name_not_contains: String\n  name_not_ends_with: String\n  name_not_in: [String]\n  name_not_starts_with: String\n  name_starts_with: String\n  AND: [UserFilter!]\n  OR: [UserFilter!]\n}`, `46308217193956370000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">input</span> UserFilter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">name_not</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_not_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_not_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">name_not_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>To add or customize a filter you have to use <code class=\"language-text\">Filter(x =&gt; x.Foo)</code> for scalars <code class=\"language-text\">List(x =&gt; x.Bar)</code> for lists and <code class=\"language-text\">Object(x =&gt; x.Baz)</code> for nested objects.\nThese methods will return fluent interfaces to configure the filter for the selected field.</p>\n<p>A field has different filter operations that can be configured. You will find more about filter types and filter operations here &#x3C;<LINK>>\nWhen fields are bound implicitly, meaning filters are added for all properties, you may want to hide a few fields. You can do this with <code class=\"language-text\">Ignore(x =&gt; Bar)</code>.\nOperations on fields can again be bound implicitly or explicitly. By default, operations are generated for all fields of the type.\nIf you do want to specify the operations by yourself you can change this behavior with <code class=\"language-text\">BindFilters</code>, <code class=\"language-text\">BindFiltersExplicitly</code> or <code class=\"language-text\">BindFiltersImplicitly</code>.</p>\n<p>It is also possible to customize the GraphQL field of the operation further. You can change the name, add a description or directive.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"91214230915047520000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class UserFilterType\n    : FilterInputType<User>\n{\n    protected override void Configure( IFilterInputTypeDescriptor<User> descriptor) {\n       // descriptor.BindFieldsImplicitly(); <- is already the default\n       descriptor.Filter(x => x.Name)\n          .BindFilterExplicitly()\n          .AllowContains()\n            .Description(&quot;Checks if the provided string is contained in the \\`Name\\` of a User&quot;)\n            .And()\n          .AllowEquals()\n            .Name(&quot;exits_with_name&quot;)\n            .Directive(&quot;name&quot;);\n       descriptor.Ignore(x => x.Bar);\n    }\n}`, `91214230915047520000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserFilterType</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterInputType<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">IFilterInputTypeDescriptor<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token comment\">// descriptor.BindFieldsImplicitly(); &lt;- is already the default</span>\n       descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Filter</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">BindFilterExplicitly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">AllowContains</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">Description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Checks if the provided string is contained in the `Name` of a User\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">AllowEquals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exits_with_name\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">Directive</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Ignore</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Bar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"30122783605019054000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`input UserFilter {\n  exits_with_name: String @name\n  &quot;&quot;&quot;\n  Checks if the provided string is contained in the \\`Name\\` of a User\n  &quot;&quot;&quot;\n  name_contains: String\n  AND: [UserFilter!]\n  OR: [UserFilter!]\n}`, `30122783605019054000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">input</span> UserFilter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">exits_with_name</span><span class=\"token punctuation\">:</span> String <span class=\"token directive function\">@name</span>\n  <span class=\"token string\">\"\"</span>\"\n  Checks if the provided string is contained in the `Name` of a User\n  <span class=\"token string\">\"\"</span>\"\n  <span class=\"token attr-name\">name_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>API Documentation</strong></p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-csharp\"><span class=\"token function\">BindFields</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BindingBehavior</span> bindingBehavior<span class=\"token punctuation\">)</span></code></td>\n<td>Defines the filter binding behavior. <code class=\"language-text\">Explicitly</code>or <code class=\"language-text\">Implicitly</code>. Default is <code class=\"language-text\">Implicitly</code></td>\n</tr>\n<tr>\n<td><code class=\"language-csharp\">BindFieldsExplicitly</code></td>\n<td>Defines that all filters have to be specified explicitly. This means that only the filters are applied that are added with <code class=\"language-text\">Filter(x =&gt; x.Foo)</code></td>\n</tr>\n<tr>\n<td><code class=\"language-csharp\">BindFieldsImplicitly</code></td>\n<td>The filter type will add filters for all compatible fields.</td>\n</tr>\n<tr>\n<td><code class=\"language-csharp\"><span class=\"token function\">Description</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">)</span></code></td>\n<td>Adds explanatory text of the <code class=\"language-text\">FilterInputType&lt;T&gt;</code> that can be accessed via introspection.</td>\n</tr>\n<tr>\n<td><code class=\"language-csharp\"><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NameString</span> <span class=\"token keyword\">value</span><span class=\"token punctuation\">)</span></code></td>\n<td>Defines the graphql name of the <code class=\"language-text\">FilterInputType&lt;T&gt;</code>.</td>\n</tr>\n<tr>\n<td><code class=\"language-csharp\"><span class=\"token function\">Ignore</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Expression<span class=\"token punctuation\">&lt;</span>Func<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">,</span> <span class=\"token keyword\">object</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> property<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></td>\n<td>Ignore the specified property.</td>\n</tr>\n<tr>\n<td><code class=\"language-csharp\"><span class=\"token function\">Filter</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Expression<span class=\"token punctuation\">&lt;</span>Func<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">,</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> property<span class=\"token punctuation\">)</span></code></td>\n<td>Defines a string filter for the selected property.</td>\n</tr>\n<tr>\n<td><code class=\"language-csharp\"><span class=\"token function\">Filter</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Expression<span class=\"token punctuation\">&lt;</span>Func<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> property<span class=\"token punctuation\">)</span></code></td>\n<td>Defines a bool filter for the selected property.</td>\n</tr>\n<tr>\n<td><code class=\"language-csharp\"><span class=\"token function\">Filter</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Expression<span class=\"token punctuation\">&lt;</span>Func<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">,</span> IComparable<span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> property<span class=\"token punctuation\">)</span></code></td>\n<td>Defines a comarable filter for the selected property.</td>\n</tr>\n<tr>\n<td><code class=\"language-csharp\"><span class=\"token generic-method\"><span class=\"token function\">Object</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>TObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Expression<span class=\"token punctuation\">&lt;</span>Func<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">,</span> TObject<span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> property<span class=\"token punctuation\">)</span></code></td>\n<td>Defines a object filter for the selected property.</td>\n</tr>\n<tr>\n<td><code class=\"language-csharp\"><span class=\"token function\">List</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Expression<span class=\"token punctuation\">&lt;</span>Func<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">,</span> IEnumerable<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> property<span class=\"token punctuation\">)</span></code></td>\n<td>Defines a array string filter for the selected property.</td>\n</tr>\n<tr>\n<td><code class=\"language-csharp\"><span class=\"token function\">List</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Expression<span class=\"token punctuation\">&lt;</span>Func<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">,</span> IEnumerable<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> property<span class=\"token punctuation\">)</span></code></td>\n<td>Defines a array bool filter for the selected property.</td>\n</tr>\n<tr>\n<td><code class=\"language-csharp\"><span class=\"token function\">List</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Expression<span class=\"token punctuation\">&lt;</span>Func<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">,</span> IEnumerable<span class=\"token punctuation\">&lt;</span>IComparable<span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> property<span class=\"token punctuation\">)</span></code></td>\n<td>Defines a array comarable filter for the selected property.</td>\n</tr>\n<tr>\n<td><code class=\"language-csharp\"><span class=\"token generic-method\"><span class=\"token function\">Filter</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>TObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Expression<span class=\"token punctuation\">&lt;</span>Func<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">,</span> IEnumerable<span class=\"token punctuation\">&lt;</span>TObject<span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> property<span class=\"token punctuation\">)</span></code></td>\n<td>Defines a array object filter for the selected property.</td>\n</tr>\n<tr>\n<td><code class=\"language-csharp\"><span class=\"token generic-method\"><span class=\"token function\">Directive</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>TDirective<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TDirective</span> directiveInstance<span class=\"token punctuation\">)</span></code></td>\n<td>Add directive <code class=\"language-text\">directiveInstance</code> to the type</td>\n</tr>\n<tr>\n<td><code class=\"language-csharp\"><span class=\"token generic-method\"><span class=\"token function\">Directive</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>TDirective<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TDirective</span> directiveInstance<span class=\"token punctuation\">)</span></code></td>\n<td>Add directive of type <code class=\"language-text\">TDirective</code> to the type</td>\n</tr>\n<tr>\n<td><code class=\"language-csharp\"><span class=\"token generic-method\"><span class=\"token function\">Directive</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>TDirective<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NameString</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">params</span> <span class=\"token class-name\">ArgumentNode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> arguments<span class=\"token punctuation\">)</span></code></td>\n<td>Add directive of type <code class=\"language-text\">TDirective</code> to the type</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"filter-conventions\" style=\"position:relative;\"><a href=\"#filter-conventions\" aria-label=\"filter conventions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Filter Conventions</h1>\n<p>The customization of filters with <code class=\"language-text\">FilterInputTypes&lt;T&gt;</code> works if you only want to customize one specific filter type.\nIf you want to change the behavior of all filter types, you want to create a convention for your filters. The filter convention comes with a fluent interface that is close to a type descriptor.\nYou can see the convention as a configuration object that holds the state that is used by the type system or the execution engine.</p>\n<h2 id=\"get-started\" style=\"position:relative;\"><a href=\"#get-started\" aria-label=\"get started permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Get Started</h2>\n<p>To use a filter convention you can extend <code class=\"language-text\">FilterConvention</code> and override the <code class=\"language-text\">Configure</code> method. Alternatively, you can directly configure the convention over the constructor argument.\nYou then have to register your custom convention on the schema builder with <code class=\"language-text\">AddConvention</code>.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"62020270274218240000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class CustomConvention\n    : FilterConvention\n{\n    protected override void Configure(IFilterConventionDescriptor descriptor) { }\n}\n\nSchemaBuilder.New().AddConvention<CustomConvention>();\n//\nSchemaBuilder.New().AddConvention(new FilterConvention(x => /* Config */));`, `62020270274218240000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomConvention</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterConvention</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IFilterConventionDescriptor</span> descriptor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nSchemaBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddConvention</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>CustomConvention<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//</span>\nSchemaBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">AddConvention</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FilterConvention</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> <span class=\"token comment\">/* Config */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"convention-descriptor-basics\" style=\"position:relative;\"><a href=\"#convention-descriptor-basics\" aria-label=\"convention descriptor basics permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Convention Descriptor Basics</h2>\n<p>In this section, we will take a look at the basic features of the filter convention.\nThe documentation will reference often to <code class=\"language-text\">descriptor</code>. Imagine this <code class=\"language-text\">descriptor</code> as the parameter of the Configure method of the filter convention in the following context:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"43472549159671180000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class CustomConvention\n    : FilterConvention\n{\n    protected override void Configure(\n        /**highlight-start**/\n        IFilterConventionDescriptor descriptor\n        /**highlight-end**/\n    ) { }\n}\n\nSchemaBuilder.New().AddConvention<CustomConvention>();`, `43472549159671180000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomConvention</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterConvention</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">        IFilterConventionDescriptor descriptor</span>    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nSchemaBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddConvention</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>CustomConvention<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<h3 id=\"argument-name\" style=\"position:relative;\"><a href=\"#argument-name\" aria-label=\"argument name permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Argument Name</h3>\n<p>With the convention descriptor, you can easily change the argument name of the <code class=\"language-text\">FilterInputType</code>.</p>\n<p><strong>Configuration</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"60931043813626040000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`descriptor.ArgumentName(&quot;example_argument_name&quot;);`, `60931043813626040000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">ArgumentName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"example_argument_name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Result</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"94732332518172660000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Query {\n  users(example_argument_name: UserFilter): [User]\n}`, `94732332518172660000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">users</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">example_argument_name</span><span class=\"token punctuation\">:</span> UserFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"change-name-of-scalar-list-type-element\" style=\"position:relative;\"><a href=\"#change-name-of-scalar-list-type-element\" aria-label=\"change name of scalar list type element permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Change Name of Scalar List Type Element</h3>\n<p>You can change the name of the element of the list type.</p>\n<p><strong>Configuration</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"80492063214386940000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`descriptor.ElementName(&quot;example_element_name&quot;);`, `80492063214386940000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">ElementName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"example_element_name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Result</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"37210981725007700000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`input ISingleFilterOfInt16Filter {\n  AND: [ISingleFilterOfInt16Filter!]\n  example_element_name: Short\n  example_element_name_gt: Short\n  example_element_name_gte: Short\n  example_element_name_in: [Short!]\n  example_element_name_lt: Short\n  example_element_name_lte: Short\n  example_element_name_not: Short\n  example_element_name_not_gt: Short\n  example_element_name_not_gte: Short\n  example_element_name_not_in: [Short!]\n  example_element_name_not_lt: Short\n  example_element_name_not_lte: Short\n  OR: [ISingleFilterOfInt16Filter!]\n}`, `37210981725007700000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">input</span> ISingleFilterOfInt16Filter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>ISingleFilterOfInt16Filter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">example_element_name</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">example_element_name_gt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">example_element_name_gte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">example_element_name_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Short<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">example_element_name_lt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">example_element_name_lte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">example_element_name_not</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">example_element_name_not_gt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">example_element_name_not_gte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">example_element_name_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Short<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">example_element_name_not_lt</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">example_element_name_not_lte</span><span class=\"token punctuation\">:</span> Short\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>ISingleFilterOfInt16Filter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"configure-filter-type-name-globally\" style=\"position:relative;\"><a href=\"#configure-filter-type-name-globally\" aria-label=\"configure filter type name globally permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configure Filter Type Name Globally</h3>\n<p>To change the way filter types are named, you have to exchange the factory.</p>\n<p>You have to provide a delegate of the following type:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"12445051157263354000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public delegate NameString GetFilterTypeName(\n    IDescriptorContext context,\n    Type entityType);`, `12445051157263354000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">delegate</span> <span class=\"token return-type class-name\">NameString</span> <span class=\"token function\">GetFilterTypeName</span><span class=\"token punctuation\">(</span>\n    <span class=\"token class-name\">IDescriptorContext</span> context<span class=\"token punctuation\">,</span>\n    <span class=\"token class-name\">Type</span> entityType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Configuration</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"55877611766248970000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`descriptor.TypeName((context,types) =>\n    context.Naming.GetTypeName(entityType, TypeKind.Object) + &quot;Custom&quot;);`, `55877611766248970000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">TypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span>types<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    context<span class=\"token punctuation\">.</span>Naming<span class=\"token punctuation\">.</span><span class=\"token function\">GetTypeName</span><span class=\"token punctuation\">(</span>entityType<span class=\"token punctuation\">,</span> TypeKind<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"Custom\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Result</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"89478057145618190000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Query {\n  users(where: UserCustom): [User]\n}`, `89478057145618190000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">users</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">where</span><span class=\"token punctuation\">:</span> UserCustom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"configure-filter-description-globally\" style=\"position:relative;\"><a href=\"#configure-filter-description-globally\" aria-label=\"configure filter description globally permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configure Filter Description Globally</h3>\n<p>To change the way filter types are named, you have to exchange the factory.</p>\n<p>You have to provide a delegate of the following type:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"21797005731686860000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public delegate string GetFilterTypeDescription(\n    IDescriptorContext context,\n    Type entityType);`, `21797005731686860000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">delegate</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">GetFilterTypeDescription</span><span class=\"token punctuation\">(</span>\n    <span class=\"token class-name\">IDescriptorContext</span> context<span class=\"token punctuation\">,</span>\n    <span class=\"token class-name\">Type</span> entityType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Configuration</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"47712608099427010000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`descriptor.TypeName((context,types) =>\n    context.Naming.GetTypeDescription(entityType, TypeKind.Object); + &quot;Custom&quot;);`, `47712608099427010000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">TypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span>types<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    context<span class=\"token punctuation\">.</span>Naming<span class=\"token punctuation\">.</span><span class=\"token function\">GetTypeDescription</span><span class=\"token punctuation\">(</span>entityType<span class=\"token punctuation\">,</span> TypeKind<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"Custom\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Result</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"42265643265839440000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`&quot;&quot;&quot;\nCustom\n&quot;&quot;&quot;\ninput UserFilter {\n  AND: [UserFilter!]\n  isOnline: Boolean\n  isOnline_not: Boolean\n  OR: [UserFilter!]\n}`, `42265643265839440000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token string\">\"\"</span>\"\nCustom\n<span class=\"token string\">\"\"</span>\"\n<span class=\"token keyword\">input</span> UserFilter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">isOnline</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">isOnline_not</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"reset-configuration\" style=\"position:relative;\"><a href=\"#reset-configuration\" aria-label=\"reset configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reset Configuration</h3>\n<p>By default, all predefined values are configured. To start from scratch, you need to call <code class=\"language-text\">Reset()</code>first.</p>\n<p><strong>Configuration</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"71711130510682070000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`descriptor.Reset();`, `71711130510682070000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Result</strong></p>\n<blockquote>\n<p><strong>⚠ Note:</strong> You will need to add a complete configuration, otherwise the filter will not work as desired!</p>\n</blockquote>\n<h2 id=\"describe-with-convention\" style=\"position:relative;\"><a href=\"#describe-with-convention\" aria-label=\"describe with convention permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Describe with convention</h2>\n<p>With the filter convention descriptor, you have full control over what filters are inferred, their names, operations, and a lot more.\nThe convention provides a familiar interface to the type configuration. It is recommended to first take a look at <code class=\"language-text\">Filter &amp; Operations</code> to understand the concept of filters. This will help you understand how the filter configuration works.</p>\n<p>Filtering has two core components at its heart. First, you have the inference of filters based on .NET types. The second component is an interceptor that translates the filters to the desired output and applies it to the resolver pipeline. These two parts can (and have to) be configured completely independently. With this separation, it is possible to easily extend the behavior. The descriptor is designed to be extendable by extension methods.</p>\n<p><strong>It's fluent</strong></p>\n<p>Filter conventions are a completely fluent experience. You can write a whole configuration as a chain of method calls.\nThis provides a very clean interface, but can, on the other hand, get messy quickly. We recommend using indentation to keep the configuration comprehensible.\nYou can drill up with <code class=\"language-text\">And()</code>.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"77777053263748100000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(` descriptor.Operation(FilterOperationKind.Equals).Description(&quot;has to be equal&quot;);\n descriptor.Operation(FilterOperationKind.NotEquals).Description(&quot;has not to be equal&quot;);\n descriptor.Type(FilterKind.Comparable).Operation(FilterOperationKind.NotEquals).Description(&quot;has to be comparable and not equal&quot;)\n\n\n descriptor\n    .Operation(FilterOperationKind.Equals)\n        .Description(&quot;has to be equal&quot;)\n        .And()\n    .Operation(FilterOperationKind.NotEquals)\n        .Description(&quot;has not to be equal&quot;)\n        .And()\n    .Type(FilterKind.Comparable)\n        .Operation(FilterOperationKind.NotEquals)\n            .Description(&quot;has to be comparable and not equal&quot;)`, `77777053263748100000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"> descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>FilterOperationKind<span class=\"token punctuation\">.</span>Equals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"has to be equal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>FilterOperationKind<span class=\"token punctuation\">.</span>NotEquals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"has not to be equal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Type</span><span class=\"token punctuation\">(</span>FilterKind<span class=\"token punctuation\">.</span>Comparable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>FilterOperationKind<span class=\"token punctuation\">.</span>NotEquals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"has to be comparable and not equal\"</span><span class=\"token punctuation\">)</span>\n\n\n descriptor\n    <span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>FilterOperationKind<span class=\"token punctuation\">.</span>Equals<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">Description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"has to be equal\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>FilterOperationKind<span class=\"token punctuation\">.</span>NotEquals<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">Description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"has not to be equal\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">Type</span><span class=\"token punctuation\">(</span>FilterKind<span class=\"token punctuation\">.</span>Comparable<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>FilterOperationKind<span class=\"token punctuation\">.</span>NotEquals<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">Description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"has to be comparable and not equal\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"configuration-of-the-type-system\" style=\"position:relative;\"><a href=\"#configuration-of-the-type-system\" aria-label=\"configuration of the type system permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration of the type system</h3>\n<p>In this section, we will focus mainly on the generation of the schema. If you are interested in changing how filters are translated to the database, you have to look here &#x3C;<INSERT LINK HERE>></p>\n<h4 id=\"configure-filter-operations\" style=\"position:relative;\"><a href=\"#configure-filter-operations\" aria-label=\"configure filter operations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configure Filter Operations</h4>\n<p>Operations can be configured in two ways.</p>\n<p>You can configure a default configuration that applies to all operations of this kind. In this case the configuration for <code class=\"language-text\">FilterOperationKind.Equals</code> would be applied to all <code class=\"language-text\">FilterKind</code> that specify this operation.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"20539990258530947000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(` descriptor.Operation(FilterOperationKind.Equals)`, `20539990258530947000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"> descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>FilterOperationKind<span class=\"token punctuation\">.</span>Equals<span class=\"token punctuation\">)</span></code></pre></div>\n<p>If you want to configure a more specific Operation e.g. <code class=\"language-text\">FilterOperationKind.Equal</code> of kind <code class=\"language-text\">FilterKind.String</code>, you can override the default behavior.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"88734234154669410000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(` descriptor.Type(FilterKind.String).Operation(FilterOperationKind.Equals)`, `88734234154669410000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"> descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Type</span><span class=\"token punctuation\">(</span>FilterKind<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>FilterOperationKind<span class=\"token punctuation\">.</span>Equals<span class=\"token punctuation\">)</span></code></pre></div>\n<p>The operation descriptor allows you to configure the name, the description or even ignore an operation completely</p>\n<p>In this example, we will look at the following input type:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"6757256712044147000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`input UserFilter {\n  loggingCount: Int\n  loggingCount_gt: Int\n  loggingCount_gte: Int\n  loggingCount_in: [Int!]\n  loggingCount_lt: Int\n  loggingCount_lte: Int\n  loggingCount_not: Int\n  loggingCount_not_gt: Int\n  loggingCount_not_gte: Int\n  loggingCount_not_in: [Int!]\n  loggingCount_not_lt: Int\n  loggingCount_not_lte: Int\n  name: String\n  name_contains: String\n  name_ends_with: String\n  name_in: [String]\n  name_not: String\n  name_not_contains: String\n  name_not_ends_with: String\n  name_not_in: [String]\n  name_not_starts_with: String\n  name_starts_with: String\n  AND: [UserFilter!]\n  OR: [UserFilter!]\n}`, `6757256712044147000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">input</span> UserFilter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">loggingCount</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_gt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_gte</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Int<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">loggingCount_lt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_lte</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not_gt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not_gte</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Int<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">loggingCount_not_lt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not_lte</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">name_not</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_not_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_not_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">name_not_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h5 id=\"change-the-name-of-an-operation\" style=\"position:relative;\"><a href=\"#change-the-name-of-an-operation\" aria-label=\"change the name of an operation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Change the name of an operation</h5>\n<p>To change the name of an operation you need to specify a delegate of the following type:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"84585799785951660000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public delegate NameString CreateFieldName(\n    FilterFieldDefintion definition,\n    FilterOperationKind kind);`, `84585799785951660000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">delegate</span> <span class=\"token return-type class-name\">NameString</span> <span class=\"token function\">CreateFieldName</span><span class=\"token punctuation\">(</span>\n    <span class=\"token class-name\">FilterFieldDefintion</span> definition<span class=\"token punctuation\">,</span>\n    <span class=\"token class-name\">FilterOperationKind</span> kind<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Configuration</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"55354741422960886000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(` // (A)\n // specifies that all not equals operations should be extended with _nada\n descriptor\n    .Operation(FilterOperationKind.NotEquals)\n        .Name((def, kind) => def.Name + &quot;_nada&quot; );\n // (B)\n // specifies that the not equals operations should be extended with _niente.\n // this overrides (A)\n descriptor\n    .Type(FilterKind.Comparable)\n        .Operation(FilterOperationKind.NotEquals)\n            .Name((def, kind) => def.Name + &quot;_niente&quot; )`, `55354741422960886000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"gatsby-highlight-code-line\"> <span class=\"token comment\">// (A)</span></span> <span class=\"token comment\">// specifies that all not equals operations should be extended with _nada</span>\n descriptor\n    <span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>FilterOperationKind<span class=\"token punctuation\">.</span>NotEquals<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>def<span class=\"token punctuation\">,</span> kind<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> def<span class=\"token punctuation\">.</span>Name <span class=\"token operator\">+</span> <span class=\"token string\">\"_nada\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"> <span class=\"token comment\">// (B)</span></span> <span class=\"token comment\">// specifies that the not equals operations should be extended with _niente.</span>\n <span class=\"token comment\">// this overrides (A)</span>\n descriptor\n    <span class=\"token punctuation\">.</span><span class=\"token function\">Type</span><span class=\"token punctuation\">(</span>FilterKind<span class=\"token punctuation\">.</span>Comparable<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>FilterOperationKind<span class=\"token punctuation\">.</span>NotEquals<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>def<span class=\"token punctuation\">,</span> kind<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> def<span class=\"token punctuation\">.</span>Name <span class=\"token operator\">+</span> <span class=\"token string\">\"_niente\"</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>result</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"46315373651755560000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`input UserFilter {\n  loggingCount: Int\n  loggingCount_gt: Int\n  loggingCount_gte: Int\n  loggingCount_in: [Int!]\n  loggingCount_lt: Int\n  loggingCount_lte: Int\n  loggingCount_niente: Int   <-- (B)\n  loggingCount_not_gt: Int\n  loggingCount_not_gte: Int\n  loggingCount_not_in: [Int!]\n  loggingCount_not_lt: Int\n  loggingCount_not_lte: Int\n  name: String\n  name_contains: String\n  name_ends_with: String\n  name_in: [String]\n  name_nada: String  <-- (A)\n  name_not_contains: String\n  name_not_ends_with: String\n  name_not_in: [String]\n  name_not_starts_with: String\n  name_starts_with: String\n  AND: [UserFilter!]\n  OR: [UserFilter!]\n}`, `46315373651755560000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">input</span> UserFilter <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">loggingCount</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_gt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_gte</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Int<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">loggingCount_lt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_lte</span><span class=\"token punctuation\">:</span> Int\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token attr-name\">loggingCount_niente</span><span class=\"token punctuation\">:</span> Int   &lt;-- <span class=\"token punctuation\">(</span><span class=\"token constant\">B</span><span class=\"token punctuation\">)</span></span>  <span class=\"token attr-name\">loggingCount_not_gt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not_gte</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Int<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">loggingCount_not_lt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not_lte</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token attr-name\">name_nada</span><span class=\"token punctuation\">:</span> String  &lt;-- <span class=\"token punctuation\">(</span><span class=\"token constant\">A</span><span class=\"token punctuation\">)</span></span>  <span class=\"token attr-name\">name_not_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_not_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">name_not_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h5 id=\"change-the-description-of-an-operation\" style=\"position:relative;\"><a href=\"#change-the-description-of-an-operation\" aria-label=\"change the description of an operation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Change the description of an operation</h5>\n<p>In the same way, you can configure names you can also configure the description of operations.\nYou can either set the description for all operations of this kind or only for a specific one in combination with a filter kind.</p>\n<p><strong>Configuration</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"42779750685469090000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(` descriptor\n    .Operation(FilterOperationKind.Equals)\n        .Description(&quot;has to be equal&quot;)\n        .And()\n    .Operation(FilterOperationKind.NotEquals)\n        .Description(&quot;has not to be equal&quot;)\n        .And()\n    .Type(FilterKind.Comparable)\n        .Operation(FilterOperationKind.NotEquals)\n            .Description(&quot;has to be comparable and not equal&quot;)`, `42779750685469090000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"> descriptor\n    <span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>FilterOperationKind<span class=\"token punctuation\">.</span>Equals<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">Description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"has to be equal\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>FilterOperationKind<span class=\"token punctuation\">.</span>NotEquals<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">Description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"has not to be equal\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">Type</span><span class=\"token punctuation\">(</span>FilterKind<span class=\"token punctuation\">.</span>Comparable<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>FilterOperationKind<span class=\"token punctuation\">.</span>NotEquals<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">Description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"has to be comparable and not equal\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>result</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"6043196675711337000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`input UserFilter {\n  &quot;&quot;&quot;\n  has to be equal\n  &quot;&quot;&quot;\n  loggingCount: Int\n  loggingCount_gt: Int\n  loggingCount_gte: Int\n  loggingCount_in: [Int!]\n  loggingCount_lt: Int\n  loggingCount_lte: Int\n  &quot;&quot;&quot;\n  has to be comparable and not equal\n  &quot;&quot;&quot;\n  loggingCount_not: Int\n  loggingCount_not_gt: Int\n  loggingCount_not_gte: Int\n  loggingCount_not_in: [Int!]\n  loggingCount_not_lt: Int\n  loggingCount_not_lte: Int\n  &quot;&quot;&quot;\n  has to be equal\n  &quot;&quot;&quot;\n  name: String\n  name_contains: String\n  name_ends_with: String\n  name_in: [String]\n  &quot;&quot;&quot;\n  has not to be equal\n  &quot;&quot;&quot;\n  name_not: String\n  name_not_contains: String\n  name_not_ends_with: String\n  name_not_in: [String]\n  name_not_starts_with: String\n  name_starts_with: String\n  AND: [UserFilter!]\n  OR: [UserFilter!]\n}`, `6043196675711337000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">input</span> UserFilter <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token string\">\"\"</span>\"</span><span class=\"gatsby-highlight-code-line\">  has to be equal</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token string\">\"\"</span>\"</span>  <span class=\"token attr-name\">loggingCount</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_gt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_gte</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Int<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">loggingCount_lt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_lte</span><span class=\"token punctuation\">:</span> Int\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token string\">\"\"</span>\"</span><span class=\"gatsby-highlight-code-line\">  has to be comparable and not equal</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token string\">\"\"</span>\"</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token attr-name\">loggingCount_not</span><span class=\"token punctuation\">:</span> Int</span>  <span class=\"token attr-name\">loggingCount_not_gt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not_gte</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Int<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">loggingCount_not_lt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not_lte</span><span class=\"token punctuation\">:</span> Int\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token string\">\"\"</span>\"</span><span class=\"gatsby-highlight-code-line\">  has to be equal</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token string\">\"\"</span>\"</span>  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token string\">\"\"</span>\"</span><span class=\"gatsby-highlight-code-line\">  has not to be equal</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token string\">\"\"</span>\"</span>  <span class=\"token attr-name\">name_not</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_not_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_not_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">name_not_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h5 id=\"hide-operations\" style=\"position:relative;\"><a href=\"#hide-operations\" aria-label=\"hide operations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hide Operations</h5>\n<p><em>Hot Chocolate</em> comes preconfigured with a set of operations. If you like to hide operations globally, you can use <code class=\"language-text\">Ignore</code> for it.\nIf your database provider does not support certain <code class=\"language-text\">IQueryable</code> methods you can just ignore the operation. Ignored operations do not generate filter input types.</p>\n<p>There are multiple ways to ignore an operation:</p>\n<p><strong>Configuration</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"55186819272661310000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(` descriptor\n    .Ignore(FilterOperationKind.Equals)\n    .Operation(FilterOperationKind.NotEquals)\n        .Ignore()\n        .And()\n    .Type(FilterKind.Comparable)\n          .Operation(FilterOperationKind.GreaterThanOrEqual)\n          .Ignore();`, `55186819272661310000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"> descriptor\n    <span class=\"token punctuation\">.</span><span class=\"token function\">Ignore</span><span class=\"token punctuation\">(</span>FilterOperationKind<span class=\"token punctuation\">.</span>Equals<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>FilterOperationKind<span class=\"token punctuation\">.</span>NotEquals<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">Ignore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">And</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">Type</span><span class=\"token punctuation\">(</span>FilterKind<span class=\"token punctuation\">.</span>Comparable<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>FilterOperationKind<span class=\"token punctuation\">.</span>GreaterThanOrEqual<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">Ignore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>result</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"56239593670429720000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`input UserFilter {\n  ↵\n  loggingCount_gt: Int\n  ↵\n  loggingCount_in: [Int!]\n  loggingCount_lt: Int\n  loggingCount_lte: Int\n  ↵\n  loggingCount_not_gt: Int\n  loggingCount_not_gte: Int\n  loggingCount_not_in: [Int!]\n  loggingCount_not_lt: Int\n  loggingCount_not_lte: Int\n  ↵\n  name_contains: String\n  name_ends_with: String\n  name_in: [String]\n  ↵\n  name_not_contains: String\n  name_not_ends_with: String\n  name_not_in: [String]\n  name_not_starts_with: String\n  name_starts_with: String\n  AND: [UserFilter!]\n  OR: [UserFilter!]\n}`, `56239593670429720000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">input</span> UserFilter <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  ↵</span>  <span class=\"token attr-name\">loggingCount_gt</span><span class=\"token punctuation\">:</span> Int\n<span class=\"gatsby-highlight-code-line\">  ↵</span>  <span class=\"token attr-name\">loggingCount_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Int<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">loggingCount_lt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_lte</span><span class=\"token punctuation\">:</span> Int\n<span class=\"gatsby-highlight-code-line\">  ↵</span>  <span class=\"token attr-name\">loggingCount_not_gt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not_gte</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Int<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">loggingCount_not_lt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">loggingCount_not_lte</span><span class=\"token punctuation\">:</span> Int\n<span class=\"gatsby-highlight-code-line\">  ↵</span>  <span class=\"token attr-name\">name_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n<span class=\"gatsby-highlight-code-line\">  ↵</span>  <span class=\"token attr-name\">name_not_contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_not_ends_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_not_in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">name_not_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">name_starts_with</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">AND</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">OR</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilter<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h5 id=\"configure-implicit-filter\" style=\"position:relative;\"><a href=\"#configure-implicit-filter\" aria-label=\"configure implicit filter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configure Implicit Filter</h5>\n<p>The default binding behavior of <em>Hot Chocolate</em> is implicit. Filter types are no exception.\nThis first may seem like magic, but unfortunately, there is none. It is just code. With <code class=\"language-text\">AddImplicitFilter</code> you can add this pinch of magic to your extension too.\nThe filters are created as the type is generated. For each property of a model, a list of factories is sequentially asked to create a definition. The first that can handle the property wins and creates a definition for the filter.</p>\n<p>To configure you have to use the following delegate:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"2013981696284394800\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`    public delegate bool TryCreateImplicitFilter(\n        IDescriptorContext context,\n        Type type,\n        PropertyInfo property,\n        IFilterConvention filterConventions,\n        [NotNullWhen(true)] out FilterFieldDefintion? definition);`, `2013981696284394800`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">delegate</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">TryCreateImplicitFilter</span><span class=\"token punctuation\">(</span>\n        <span class=\"token class-name\">IDescriptorContext</span> context<span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\">Type</span> type<span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\">PropertyInfo</span> property<span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\">IFilterConvention</span> filterConventions<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">NotNullWhen</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">out</span> <span class=\"token class-name\">FilterFieldDefintion<span class=\"token punctuation\">?</span></span> definition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<table>\n<thead>\n<tr>\n<th>parameter</th>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>context</em></td>\n<td><code class=\"language-text\">IDescriptorContext</code></td>\n<td>The context of the type descriptor</td>\n</tr>\n<tr>\n<td><em>type</em></td>\n<td><code class=\"language-text\">Type</code></td>\n<td>The type of the property. <code class=\"language-text\">Nullable&lt;T&gt;</code> is already unwrapped (typeof(T))</td>\n</tr>\n<tr>\n<td><em>property</em></td>\n<td><code class=\"language-text\">PropertyInfo</code></td>\n<td>The property</td>\n</tr>\n<tr>\n<td><em>filterConventions</em></td>\n<td><code class=\"language-text\">IFilterConvention</code></td>\n<td>The instance of the <code class=\"language-text\">IFilterContention</code>.</td>\n</tr>\n<tr>\n<td><em>definition</em></td>\n<td><code class=\"language-text\">out FilterFieldDefintion?</code></td>\n<td>The generated definition for the property. Return null if the current factory cannot handle the property.</td>\n</tr>\n</tbody>\n</table>\n<p>If you just want to build your extension for implicit bindings, you can just out a custom <code class=\"language-text\">FilterFieldDefinition</code>.\nIt makes sense to encapsulate that logic in a FilterFieldDescriptor though. This descriptor can the</p>","tableOfContents":"<ul>\n<li><a href=\"/hotchocolate/hotchocolate/fetching-data/filtering/#overview\">Overview</a></li>\n<li><a href=\"/hotchocolate/hotchocolate/fetching-data/filtering/#customizing-filters\">Customizing Filters</a></li>\n<li><a href=\"/hotchocolate/hotchocolate/fetching-data/filtering/#sorting\">Sorting</a></li>\n<li><a href=\"/hotchocolate/hotchocolate/fetching-data/filtering/#filter--operations-kinds\">Filter &#x26; Operations Kinds</a></li>\n<li><a href=\"/hotchocolate/hotchocolate/fetching-data/filtering/#naming-conventions\">Naming Conventions</a></li>\n<li><a href=\"/hotchocolate/hotchocolate/fetching-data/filtering/#customizing-filter\">Customizing Filter</a></li>\n<li><a href=\"/hotchocolate/hotchocolate/fetching-data/filtering/#custom-filterinputtype\">Custom FilterInputType</a></li>\n<li><a href=\"/hotchocolate/hotchocolate/fetching-data/filtering/#filter-conventions\">Filter Conventions</a></li>\n</ul>"}},"site":{"siteMetadata":{"siteUrl":"https://chillicream.com","repositoryUrl":"https://github.com/ChilliCream/hotchocolate","tools":{"slack":"https://join.slack.com/t/hotchocolategraphql/shared_invite/enQtNTA4NjA0ODYwOTQ0LTViMzA2MTM4OWYwYjIxYzViYmM0YmZhYjdiNzBjOTg2ZmU1YmMwNDZiYjUyZWZlMzNiMTk1OWUxNWZhMzQwY2Q"}}},"config":{"products":[{"path":"hotchocolate","title":"Hot Chocolate","description":"Configure a GraphQL server to fetch data from multiple data sources.","items":[{"path":"index","title":"Introduction","items":null},{"path":"getting-started","title":"Getting Started","items":null},{"path":"defining-a-schema","title":"Defining a schema","items":[{"path":"index","title":"Schema basics"},{"path":"versioning","title":"Versioning"},{"path":"unions-and-interfaces","title":"Unions and Interfaces"},{"path":"scalars","title":"Scalars"},{"path":"directives","title":"Directives"}]},{"path":"fetching-data","title":"Fetching data","items":[{"path":"index","title":"Resolver"},{"path":"fetching-from-databases","title":"Fetching from Databases"},{"path":"fetching-from-rest","title":"Fetching from REST"},{"path":"dataloader","title":"DataLoader"},{"path":"pagination","title":"Pagination"},{"path":"filtering","title":"Filtering"},{"path":"sorting","title":"Sorting"}]},{"path":"api-reference","title":"API Reference","items":[{"path":"index","title":"Overview"},{"path":"language","title":"Lanugage"},{"path":"visitors","title":"Visitors"}]}]},{"path":"bananacakepop","title":"Banana Cake Pop","description":"Use this GUI to get deep insights from any GraphQL endpoint.","items":[{"path":"index","title":"Introduction","items":null}]},{"path":"strawberryshake","title":"Strawberry Shake","description":"Configure a GraphQL client in .Net to fetch data from multiple GraphQL endpoints.","items":[{"path":"index","title":"Introduction","items":null}]},{"path":"marshmellowpie","title":"Marshmellow Pie","description":"Configure a GraphQL registry to keep track of any GraphQL server and client.","items":[{"path":"index","title":"Introduction","items":null}]},{"path":"greendonut","title":"Green Donut","description":"Configure data loaders and caching for GraphQL endpoints.","items":[{"path":"index","title":"Introduction","items":null}]}]}},"pageContext":{"originPath":"hotchocolate/fetching-data/filtering.md"}}}