{"componentChunkName":"component---src-templates-doc-page-template-tsx","path":"/docs/hotchocolate/fetching-data/filtering","result":{"data":{"file":{"childMarkdownRemark":{"fields":{"slug":"/hotchocolate/fetching-data/filtering/"},"frontmatter":{"title":"Filtering"},"html":"<h1 id=\"what-is-filtering\" style=\"position:relative;\"><a href=\"#what-is-filtering\" aria-label=\"what is filtering permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>What is filtering</h1>\n<p>With Hot Chocolate filters, you can expose complex filter objects through your GraphQL API that translates to native database queries. The default filter implementation translates filters to expression trees that are applied to <code class=\"language-text\">IQueryable</code>.\nHot Chocolate by default will inspect your .NET model and infer the possible filter operations from it.\nFilters use <code class=\"language-text\">IQueryable</code> (<code class=\"language-text\">IEnumerable</code>) by default, but you can also easily customize them to use other interfaces.</p>\n<p>The following type would yield the following filter operations:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"91033800641213660000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class Foo\n{\n    public string Bar { get; set; }\n}`, `91033800641213660000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Foo</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Bar <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"2176871433249672000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`input FooFilterInput {\n  and: [FooFilterInput!]\n  or: [FooFilterInput!]\n  name: StringOperationFilterInput\n}\n\ninput StringOperationFilterInput {\n  and: [StringOperationFilterInput!]\n  or: [StringOperationFilterInput!]\n  eq: String\n  neq: String\n  contains: String\n  ncontains: String\n  in: [String]\n  nin: [String]\n  startsWith: String\n  nstartsWith: String\n  endsWith: String\n  nendsWith: String\n}`, `2176871433249672000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">input</span> FooFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">and</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>FooFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">or</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>FooFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> StringOperationFilterInput\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> StringOperationFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">and</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>StringOperationFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">or</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>StringOperationFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">neq</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">ncontains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">nin</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">startsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">nstartsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">endsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">nendsWith</span><span class=\"token punctuation\">:</span> String\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"getting-started\" style=\"position:relative;\"><a href=\"#getting-started\" aria-label=\"getting started permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Getting started</h1>\n<p>Filtering is part of the <code class=\"language-text\">HotChocolate.Data</code> package. You can add the dependency with the <code class=\"language-text\">dotnet</code> cli</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"64177075439178500000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`  dotnet add package HotChocolate.Data`, `64177075439178500000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">  dotnet <span class=\"token function\">add</span> package HotChocolate.Data</code></pre></div>\n<p>To use filtering you need to register it on the schema:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"19699926102372766000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`services.AddGraphQLServer()\n  // Your schmea configuration\n  .AddFiltering();`, `19699926102372766000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">services<span class=\"token punctuation\">.</span><span class=\"token function\">AddGraphQLServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Your schmea configuration</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">AddFiltering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Hot Chocolate will infer the filters directly from your .Net Model and then use a Middleware to apply filters to <code class=\"language-text\">IQueryable&lt;T&gt;</code> or <code class=\"language-text\">IEnumerable&lt;T&gt;</code> on execution.</p>\n<blockquote>\n<p>⚠️ <strong>Note:</strong> If you use more than middleware, keep in mind that <strong>ORDER MATTERS</strong>. The correct order is UsePaging > UseProjections > UseFiltering > UseSorting</p>\n</blockquote>\n<p><strong>Code First</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"11754852915055180000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class QueryType\n    : ObjectType<Query>\n{\n    protected override void Configure(IObjectTypeDescriptor<Query> descriptor)\n    {\n        descriptor.Field(t => t.GetPersons(default))\n            .Type<ListType<NonNullType<PersonType>>>()\n            .UseFiltering();\n    }\n}\n\npublic class Query\n{\n    public IQueryable<Person> GetPersons([Service]IPersonRepository repository) =>\n        repository.GetPersons();\n}`, `11754852915055180000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">QueryType</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType<span class=\"token punctuation\">&lt;</span>Query<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObjectTypeDescriptor<span class=\"token punctuation\">&lt;</span>Query<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Field</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=></span> t<span class=\"token punctuation\">.</span><span class=\"token function\">GetPersons</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Type</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>ListType<span class=\"token punctuation\">&lt;</span>NonNullType<span class=\"token punctuation\">&lt;</span>PersonType<span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">UseFiltering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>Person<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetPersons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">IPersonRepository</span> repository<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n        repository<span class=\"token punctuation\">.</span><span class=\"token function\">GetPersons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Pure Code First</strong></p>\n<p>The field descriptor attribute <code class=\"language-text\">[UseFiltering]</code> does apply the extension method <code class=\"language-text\">UseFiltering()</code> on the field descriptor.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"41466251312231250000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class Query\n{\n    [UseFiltering]\n    public IQueryable<Person> GetPersons([Service]IPersonRepository repository)\n    {\n        repository.GetPersons();\n    }\n}`, `41466251312231250000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseFiltering</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>Person<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetPersons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">IPersonRepository</span> repository<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        repository<span class=\"token punctuation\">.</span><span class=\"token function\">GetPersons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"customization\" style=\"position:relative;\"><a href=\"#customization\" aria-label=\"customization permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Customization</h1>\n<p>Under the hood, filtering is based on top of normal Hot Chocolate input types. You can easily customize them with a very familiar fluent interface. The filter input types follow the same <code class=\"language-text\">descriptor</code> scheme as you are used to from the normal input types. Just extend the base class <code class=\"language-text\">FilterInputType&lt;T&gt;</code> and override the descriptor method.</p>\n<p><code class=\"language-text\">IFilterInputTypeDescriptor&lt;T&gt;</code> supports most of the methods of <code class=\"language-text\">IInputTypeDescriptor&lt;T&gt;</code>. By default filters for all fields of the type are generated.\nIf you do want to specify the filters by yourself you can change this behavior with <code class=\"language-text\">BindFields</code>, <code class=\"language-text\">BindFieldsExplicitly</code> or <code class=\"language-text\">BindFieldsImplicitly</code>.\nWhen fields are bound implicitly, meaning filters are added for all properties, you may want to hide a few fields. You can do this with <code class=\"language-text\">Ignore(x =&gt; Bar)</code>.\nIt is also possible to customize the GraphQL field of the operation further. You can change the name, add a description or directive.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"78902181880690750000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class PersonFilterType\n    : FilterInputType<Person>\n{\n    protected override void Configure(IFilterInputTypeDescriptor<Person> descriptor)\n    {\n        descriptor.BindFieldsExplicitly();\n        descriptor.Field(x => x.Name).Name(&quot;custom_name&quot;);\n    }\n}`, `78902181880690750000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PersonFilterType</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterInputType<span class=\"token punctuation\">&lt;</span>Person<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IFilterInputTypeDescriptor<span class=\"token punctuation\">&lt;</span>Person<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">BindFieldsExplicitly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Field</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"custom_name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If you want to limit the operations on a field, you need to declare you own operation type.\nGiven you want to only allow <code class=\"language-text\">eq</code> and <code class=\"language-text\">neq</code> on a string field, this could look like this</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"86204558585691030000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class PersonFilterType\n    : FilterInputType<Person>\n{\n    protected override void Configure(IFilterInputTypeDescriptor<Person> descriptor)\n    {\n        descriptor.BindFieldsExplicitly();\n        descriptor.Field(x => x.Name).Type<CustomStringFilterType>();\n    }\n}\n\npublic class CustomerOperationFilterInput : StringOperationFilterInput\n{\n    protected override void Configure(IFilterInputTypeDescriptor descriptor)\n    {\n        descriptor.Operation(DefaultFilterOperations.Equals);\n        descriptor.Operation(DefaultFilterOperations.NotEquals);\n    }\n}`, `86204558585691030000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PersonFilterType</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterInputType<span class=\"token punctuation\">&lt;</span>Person<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IFilterInputTypeDescriptor<span class=\"token punctuation\">&lt;</span>Person<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">BindFieldsExplicitly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Field</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Type</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>CustomStringFilterType<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomerOperationFilterInput</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">StringOperationFilterInput</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IFilterInputTypeDescriptor</span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>DefaultFilterOperations<span class=\"token punctuation\">.</span>Equals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>DefaultFilterOperations<span class=\"token punctuation\">.</span>NotEquals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"62656756732917840000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`input PersonFilterInput {\n  and: [PersonFilterInput!]\n  or: [PersonFilterInput!]\n  name: CustomerOperationFilterInput\n}\n\ninput CustomerOperationFilterInput {\n  and: [CustomerOperationFilterInput!]\n  or: [CustomerOperationFilterInput!]\n  eq: String\n  neq: String\n}`, `62656756732917840000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">input</span> PersonFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">and</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>PersonFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">or</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>PersonFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> CustomerOperationFilterInput\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> CustomerOperationFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">and</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>CustomerOperationFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">or</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>CustomerOperationFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">neq</span><span class=\"token punctuation\">:</span> String\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>To apply this filter type we just have to provide it to the <code class=\"language-text\">UseFiltering</code> extension method with as the generic type argument.</p>\n<p><strong>Code First</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"49519836998083980000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class QueryType\n    : ObjectType<Query>\n{\n    protected override void Configure(IObjectTypeDescriptor<Query> descriptor)\n    {\n        descriptor.Field(t => t.GetPerson(default))\n            .Type<ListType<NonNullType<PersonType>>>();\n            .UseFiltering<PersonFilterType>()\n    }\n}`, `49519836998083980000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">QueryType</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType<span class=\"token punctuation\">&lt;</span>Query<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObjectTypeDescriptor<span class=\"token punctuation\">&lt;</span>Query<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Field</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">=></span> t<span class=\"token punctuation\">.</span><span class=\"token function\">GetPerson</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Type</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>ListType<span class=\"token punctuation\">&lt;</span>NonNullType<span class=\"token punctuation\">&lt;</span>PersonType<span class=\"token punctuation\">></span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">UseFiltering</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>PersonFilterType<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Pure Code First</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"21889637720973033000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class Query\n{\n    [UseFiltering(typeof(PersonFilterType))]\n    public IQueryable<Person> GetPersons([Service]IPersonRepository repository)\n    {\n        repository.GetPersons();\n    }\n}`, `21889637720973033000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseFiltering</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">PersonFilterType</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>Person<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetPersons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">IPersonRepository</span> repository<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        repository<span class=\"token punctuation\">.</span><span class=\"token function\">GetPersons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"filter-types\" style=\"position:relative;\"><a href=\"#filter-types\" aria-label=\"filter types permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Filter Types</h1>\n<h2 id=\"boolean-filter\" style=\"position:relative;\"><a href=\"#boolean-filter\" aria-label=\"boolean filter permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Boolean Filter</h2>\n<p>Defined the filter operations of a <code class=\"language-text\">bool</code> field.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"33440006680001843000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class User\n{\n    public bool IsOnline {get;set;}\n}\n\npublic class Query : ObjectType\n{\n    [UseFiltering]\n    public IQueryable<User> GetUsers([Service]UserService users) =>\n      users.AsQueryable();\n}`, `33440006680001843000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> IsOnline <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseFiltering</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">UserService</span> users<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n      users<span class=\"token punctuation\">.</span><span class=\"token function\">AsQueryable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"35613229438947760000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Query {\n  users(where: UserFilterInput): [User]\n}\n\ninput BooleanOperationFilterInput {\n  eq: Boolean\n  neq: Boolean\n}\n\ninput UserFilterInput {\n  and: [UserFilterInput!]\n  or: [UserFilterInput!]\n  isOnline: BooleanOperationFilterInput\n}`, `35613229438947760000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">users</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">where</span><span class=\"token punctuation\">:</span> UserFilterInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> BooleanOperationFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">neq</span><span class=\"token punctuation\">:</span> Boolean\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> UserFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">and</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">or</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">isOnline</span><span class=\"token punctuation\">:</span> BooleanOperationFilterInput\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"comparable-filter\" style=\"position:relative;\"><a href=\"#comparable-filter\" aria-label=\"comparable filter permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Comparable Filter</h2>\n<p>Defines filters for <code class=\"language-text\">IComparables</code> like: <code class=\"language-text\">bool</code>, <code class=\"language-text\">byte</code>, <code class=\"language-text\">shot</code>, <code class=\"language-text\">int</code>, <code class=\"language-text\">long</code>, <code class=\"language-text\">float</code>, <code class=\"language-text\">double</code> <code class=\"language-text\">decimal</code>, <code class=\"language-text\">Guid</code>, <code class=\"language-text\">DateTime</code>, <code class=\"language-text\">DateTimeOffset</code> and <code class=\"language-text\">TimeSpan</code></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"1124668694925712300\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class User\n{\n    public int LoggingCount { get; set;}\n}\n\npublic class Query : ObjectType\n{\n    [UseFiltering]\n    public IQueryable<User> GetUsers([Service]UserService users) =>\n      users.AsQueryable();\n}`, `1124668694925712300`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> LoggingCount <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseFiltering</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">UserService</span> users<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n      users<span class=\"token punctuation\">.</span><span class=\"token function\">AsQueryable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"22978501166187690000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Query {\n  users(where: UserFilterInput): [User]\n}\n\ninput ComparableOperationInt32FilterInput {\n  eq: Int\n  neq: Int\n  in: [Int!]\n  nin: [Int!]\n  gt: Int\n  ngt: Int\n  gte: Int\n  ngte: Int\n  lt: Int\n  nlt: Int\n  lte: Int\n  nlte: Int\n}\n\ninput UserFilterInput {\n  and: [UserFilterInput!]\n  or: [UserFilterInput!]\n  loggingCount: ComparableOperationInt32FilterInput\n}`, `22978501166187690000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">users</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">where</span><span class=\"token punctuation\">:</span> UserFilterInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> ComparableOperationInt32FilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">neq</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Int<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">nin</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>Int<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">gt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">ngt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">gte</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">ngte</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">lt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">nlt</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">lte</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">nlte</span><span class=\"token punctuation\">:</span> Int\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> UserFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">and</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">or</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">loggingCount</span><span class=\"token punctuation\">:</span> ComparableOperationInt32FilterInput\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"string-filter\" style=\"position:relative;\"><a href=\"#string-filter\" aria-label=\"string filter permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>String Filter</h2>\n<p>Defines filters for <code class=\"language-text\">string</code></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"82187735025343820000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class User\n{\n    public string Name {get;set;}\n}\n\npublic class Query : ObjectType\n{\n    [UseFiltering]\n    public IQueryable<User> GetUsers([Service]UserService users) =>\n      users.AsQueryable();\n}`, `82187735025343820000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseFiltering</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">UserService</span> users<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n      users<span class=\"token punctuation\">.</span><span class=\"token function\">AsQueryable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"69793359661355070000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Query {\n  users(where: UserFilterInput): [User]\n}\n\ntype User {\n  name: String!\n}\n\ninput StringOperationFilterInput {\n  and: [StringOperationFilterInput!]\n  or: [StringOperationFilterInput!]\n  eq: String\n  neq: String\n  contains: String\n  ncontains: String\n  in: [String]\n  nin: [String]\n  startsWith: String\n  nstartsWith: String\n  endsWith: String\n  nendsWith: String\n}\n\ninput UserFilterInput {\n  and: [UserFilterInput!]\n  or: [UserFilterInput!]\n  name: StringOperationFilterInput\n}`, `69793359661355070000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">users</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">where</span><span class=\"token punctuation\">:</span> UserFilterInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> StringOperationFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">and</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>StringOperationFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">or</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>StringOperationFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">neq</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">ncontains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">nin</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">startsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">nstartsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">endsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">nendsWith</span><span class=\"token punctuation\">:</span> String\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> UserFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">and</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">or</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> StringOperationFilterInput\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"enum-filter\" style=\"position:relative;\"><a href=\"#enum-filter\" aria-label=\"enum filter permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Enum Filter</h2>\n<p>Defines filters for C# enums</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"64123866190002320000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public enum UserKind {\n  Admin,\n  Moderator,\n  NormalUser\n}\n\npublic class User\n{\n    public UserKind kind {get;set;}\n}\n\npublic class Query : ObjectType\n{\n    [UseFiltering]\n    public IQueryable<User> GetUsers([Service]UserService users) =>\n      users.AsQueryable();\n}`, `64123866190002320000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">UserKind</span> <span class=\"token punctuation\">{</span>\n  Admin<span class=\"token punctuation\">,</span>\n  Moderator<span class=\"token punctuation\">,</span>\n  NormalUser\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">UserKind</span> kind <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseFiltering</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">UserService</span> users<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n      users<span class=\"token punctuation\">.</span><span class=\"token function\">AsQueryable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"31791177758953525000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Query {\n  users(where: UserFilterInput): [User]\n}\n\ninput UserKindOperationFilterInput {\n  eq: UserKind\n  neq: UserKind\n  in: [UserKind!]\n  nin: [UserKind!]\n}\n\ninput UserFilterInput {\n  and: [UserFilterInput!]\n  or: [UserFilterInput!]\n  kind: UserKindOperationFilterInput\n}`, `31791177758953525000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">users</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">where</span><span class=\"token punctuation\">:</span> UserFilterInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> UserKindOperationFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> UserKind\n  <span class=\"token attr-name\">neq</span><span class=\"token punctuation\">:</span> UserKind\n  <span class=\"token attr-name\">in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserKind<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">nin</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserKind<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> UserFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">and</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">or</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">kind</span><span class=\"token punctuation\">:</span> UserKindOperationFilterInput\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"object-filter\" style=\"position:relative;\"><a href=\"#object-filter\" aria-label=\"object filter permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Object Filter</h2>\n<p>An object filter is generated for all nested objects. The object filter can also be used to filter over database relations.\nFor each nested object, filters are generated.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"36931630026337020000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class User\n{\n    public Address Address {get;set;}\n}\n\npublic class Address\n{\n    public string Street {get;set;}\n\n    public bool IsPrimary {get;set;}\n}\n\npublic class Query : ObjectType\n{\n    [UseFiltering]\n    public IQueryable<User> GetUsers([Service]UserService users) =>\n      users.AsQueryable();\n}`, `36931630026337020000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Address</span> Address <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Address</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Street <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> IsPrimary <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseFiltering</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">UserService</span> users<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n      users<span class=\"token punctuation\">.</span><span class=\"token function\">AsQueryable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"33069066482319820000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Query {\n  users(where: UserFilterInput): [User]\n}\n\ninput AddressFilterInput {\n  and: [AddressFilterInput!]\n  or: [AddressFilterInput!]\n  street: StringOperationFilterInput\n  isPrimary: BooleanOperationFilterInput\n}\n\ninput BooleanOperationFilterInput {\n  eq: Boolean\n  neq: Boolean\n}\n\ninput StringOperationFilterInput {\n  and: [StringOperationFilterInput!]\n  or: [StringOperationFilterInput!]\n  eq: String\n  neq: String\n  contains: String\n  ncontains: String\n  in: [String]\n  nin: [String]\n  startsWith: String\n  nstartsWith: String\n  endsWith: String\n  nendsWith: String\n}\n\ninput UserFilterInput {\n  and: [UserFilterInput!]\n  or: [UserFilterInput!]\n  address: AddressFilterInput\n}`, `33069066482319820000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">users</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">where</span><span class=\"token punctuation\">:</span> UserFilterInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> AddressFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">and</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>AddressFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">or</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>AddressFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">street</span><span class=\"token punctuation\">:</span> StringOperationFilterInput\n  <span class=\"token attr-name\">isPrimary</span><span class=\"token punctuation\">:</span> BooleanOperationFilterInput\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> BooleanOperationFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">neq</span><span class=\"token punctuation\">:</span> Boolean\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> StringOperationFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">and</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>StringOperationFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">or</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>StringOperationFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">neq</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">ncontains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">nin</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">startsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">nstartsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">endsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">nendsWith</span><span class=\"token punctuation\">:</span> String\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> UserFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">and</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">or</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">address</span><span class=\"token punctuation\">:</span> AddressFilterInput\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"list-filter\" style=\"position:relative;\"><a href=\"#list-filter\" aria-label=\"list filter permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>List Filter</h2>\n<p>List filters are generated for all nested enumerations.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"72817524536017330000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class User\n{\n    public string[] Roles {get;set;}\n\n    public IEnumerable<Address> Addresses {get;set;}\n}\n\npublic class Address\n{\n    public string Street {get;set;}\n\n    public bool IsPrimary {get;set;}\n}\n\npublic class Query : ObjectType\n{\n    [UseFiltering]\n    public IQueryable<User> GetUsers([Service]UserService users) =>\n      users.AsQueryable();\n}`, `72817524536017330000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> Roles <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IEnumerable<span class=\"token punctuation\">&lt;</span>Address<span class=\"token punctuation\">></span></span> Addresses <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Address</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Street <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> IsPrimary <span class=\"token punctuation\">{</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UseFiltering</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IQueryable<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetUsers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">UserService</span> users<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n      users<span class=\"token punctuation\">.</span><span class=\"token function\">AsQueryable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"24646637674875093000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Query {\n  users(where: UserFilterInput): [User]\n}\n\ninput AddressFilterInput {\n  and: [AddressFilterInput!]\n  or: [AddressFilterInput!]\n  street: StringOperationFilterInput\n  isPrimary: BooleanOperationFilterInput\n}\n\ninput BooleanOperationFilterInput {\n  eq: Boolean\n  neq: Boolean\n}\n\ninput ListAddressFilterInput {\n  all: AddressFilterInput\n  none: AddressFilterInput\n  some: AddressFilterInput\n  any: Boolean\n}\n\ninput ListStringOperationFilterInput {\n  all: StringOperationFilterInput\n  none: StringOperationFilterInput\n  some: StringOperationFilterInput\n  any: Boolean\n}\n\ninput StringOperationFilterInput {\n  and: [StringOperationFilterInput!]\n  or: [StringOperationFilterInput!]\n  eq: String\n  neq: String\n  contains: String\n  ncontains: String\n  in: [String]\n  nin: [String]\n  startsWith: String\n  nstartsWith: String\n  endsWith: String\n  nendsWith: String\n}\n\ninput UserFilterInput {\n  and: [UserFilterInput!]\n  or: [UserFilterInput!]\n  roles: ListStringOperationFilterInput\n  addresses: ListAddressFilterInput\n}`, `24646637674875093000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">users</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">where</span><span class=\"token punctuation\">:</span> UserFilterInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> AddressFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">and</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>AddressFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">or</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>AddressFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">street</span><span class=\"token punctuation\">:</span> StringOperationFilterInput\n  <span class=\"token attr-name\">isPrimary</span><span class=\"token punctuation\">:</span> BooleanOperationFilterInput\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> BooleanOperationFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> Boolean\n  <span class=\"token attr-name\">neq</span><span class=\"token punctuation\">:</span> Boolean\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> ListAddressFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">all</span><span class=\"token punctuation\">:</span> AddressFilterInput\n  <span class=\"token attr-name\">none</span><span class=\"token punctuation\">:</span> AddressFilterInput\n  <span class=\"token attr-name\">some</span><span class=\"token punctuation\">:</span> AddressFilterInput\n  <span class=\"token attr-name\">any</span><span class=\"token punctuation\">:</span> Boolean\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> ListStringOperationFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">all</span><span class=\"token punctuation\">:</span> StringOperationFilterInput\n  <span class=\"token attr-name\">none</span><span class=\"token punctuation\">:</span> StringOperationFilterInput\n  <span class=\"token attr-name\">some</span><span class=\"token punctuation\">:</span> StringOperationFilterInput\n  <span class=\"token attr-name\">any</span><span class=\"token punctuation\">:</span> Boolean\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> StringOperationFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">and</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>StringOperationFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">or</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>StringOperationFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">neq</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">ncontains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">nin</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">startsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">nstartsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">endsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">nendsWith</span><span class=\"token punctuation\">:</span> String\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> UserFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">and</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">or</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">roles</span><span class=\"token punctuation\">:</span> ListStringOperationFilterInput\n  <span class=\"token attr-name\">addresses</span><span class=\"token punctuation\">:</span> ListAddressFilterInput\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"filter-conventions\" style=\"position:relative;\"><a href=\"#filter-conventions\" aria-label=\"filter conventions permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Filter Conventions</h1>\n<p>If you want to change the behavior filtering globally, you want to create a convention for your filters. The filter convention comes with a fluent interface that is close to a type descriptor.</p>\n<h2 id=\"get-started\" style=\"position:relative;\"><a href=\"#get-started\" aria-label=\"get started permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Get Started</h2>\n<p>To use a filter convention you can extend <code class=\"language-text\">FilterConvention</code> and override the <code class=\"language-text\">Configure</code> method. Alternatively, you can directly configure the convention over the constructor argument.\nYou then have to register your custom convention on the schema builder with <code class=\"language-text\">AddConvention</code>.\nBy default a new convention is empty. To add the default behaviour you have to add <code class=\"language-text\">AddDefaults</code>.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"87375370919433760000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class CustomConvention\n    : FilterConvention\n{\n    protected override void Configure(IFilterConventionDescriptor descriptor)\n    {\n        descriptor.AddDefaults();\n    }\n}\n\nservices.AddGraphQLServer()\n  .AddConvention<IFilterConvention, CustomConvention>();\n// or\nservices.AddGraphQLServer()\n  .AddConvention<IFilterConvention>(new FilterConvention(x => x.AddDefaults()))`, `87375370919433760000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomConvention</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterConvention</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IFilterConventionDescriptor</span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">AddDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nservices<span class=\"token punctuation\">.</span><span class=\"token function\">AddGraphQLServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddConvention</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>IFilterConvention<span class=\"token punctuation\">,</span> CustomConvention<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// or</span>\nservices<span class=\"token punctuation\">.</span><span class=\"token function\">AddGraphQLServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddConvention</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>IFilterConvention<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FilterConvention</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span><span class=\"token function\">AddDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Often you just want to extend the default behaviour of filtering. If this is the case, you can also use <code class=\"language-text\">FilterConventionExtension</code></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"82751264580581880000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class CustomConventionExtension\n    : FilterConventionExtension\n{\n    protected override void Configure(IFilterConventionDescriptor descriptor)\n    {\n      // config\n    }\n}\n\nservices.AddGraphQLServer()\n  .AddConvention<IFilterConvention, CustomConventionExtension>();\n// or\nservices.AddGraphQLServer()\n  .AddConvention<IFilterConvention>(new FilterConventionExtension(x => /*config*/))`, `82751264580581880000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomConventionExtension</span>\n    <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterConventionExtension</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IFilterConventionDescriptor</span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// config</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nservices<span class=\"token punctuation\">.</span><span class=\"token function\">AddGraphQLServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddConvention</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>IFilterConvention<span class=\"token punctuation\">,</span> CustomConventionExtension<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// or</span>\nservices<span class=\"token punctuation\">.</span><span class=\"token function\">AddGraphQLServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddConvention</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>IFilterConvention<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FilterConventionExtension</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> <span class=\"token comment\">/*config*/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"argument-name\" style=\"position:relative;\"><a href=\"#argument-name\" aria-label=\"argument name permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Argument Name</h2>\n<p>With the convention descriptor, you can easily change the argument name of the <code class=\"language-text\">FilterInputType</code>.</p>\n<p><strong>Configuration</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"388491737078844350\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`descriptor.ArgumentName(&quot;example_argument_name&quot;);`, `388491737078844350`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">ArgumentName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"example_argument_name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Result</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"1808188461324000800\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Query {\n  users(example_argument_name: UserFilter): [User]\n}`, `1808188461324000800`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">users</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">example_argument_name</span><span class=\"token punctuation\">:</span> UserFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"binding-of-filtertypes\" style=\"position:relative;\"><a href=\"#binding-of-filtertypes\" aria-label=\"binding of filtertypes permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Binding of FilterTypes</h2>\n<p><code class=\"language-text\">FilterInputType</code>'s <strong>cannot</strong> just be registered on the schema. You have to bind them to the runtime type on the convention.</p>\n<p><strong>Configuration</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"68247052045257410000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class UserFilterInput : FilterInputType<User>\n{\n    protected override void Configure(IFilterInputTypeDescriptor<User> descriptor)\n    {\n        descriptor.Field(x => x.Name).Description(&quot;This is the name&quot;);\n    }\n}\n\npublic class CustomStringOperationFilterInput : StringOperationFilterInput\n{\n    protected override void Configure(IFilterInputTypeDescriptor descriptor)\n    {\n        descriptor.Operation(DefaultFilterOperations.Equals).Type<StringType>();\n        descriptor.Operation(DefaultFilterOperations.NotEquals).Type<StringType>();\n    }\n}\n\ndescriptor.BindRuntimeType<string, CustomStringOperationFilterInput >();\ndescriptor.BindRuntimeType<User, UserFilterInput>();`, `68247052045257410000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserFilterInput</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">FilterInputType<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IFilterInputTypeDescriptor<span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Field</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This is the name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomStringOperationFilterInput</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">StringOperationFilterInput</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IFilterInputTypeDescriptor</span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>DefaultFilterOperations<span class=\"token punctuation\">.</span>Equals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Type</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>StringType<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>DefaultFilterOperations<span class=\"token punctuation\">.</span>NotEquals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Type</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>StringType<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\ndescriptor<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">BindRuntimeType</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> CustomStringOperationFilterInput <span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndescriptor<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">BindRuntimeType</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">,</span> UserFilterInput<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Result</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"40633162952585410000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Query {\n  users(where: UserFilterInput): [User]\n}\n\ntype User {\n  name: String!\n}\n\ninput CustomStringOperationFilterInput {\n  and: [CustomStringOperationFilterInput!]\n  or: [CustomStringOperationFilterInput!]\n  eq: String\n  neq: String\n}\n\ninput UserFilterInput {\n  and: [UserFilterInput!]\n  or: [UserFilterInput!]\n  &quot;This is the name&quot;\n  name: CustomStringOperationFilterInput\n}`, `40633162952585410000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">users</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">where</span><span class=\"token punctuation\">:</span> UserFilterInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> CustomStringOperationFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">and</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>CustomStringOperationFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">or</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>CustomStringOperationFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">neq</span><span class=\"token punctuation\">:</span> String\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">input</span> UserFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">and</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">or</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>UserFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">This is the name</span>\"</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> CustomStringOperationFilterInput\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"extend-filtertypes\" style=\"position:relative;\"><a href=\"#extend-filtertypes\" aria-label=\"extend filtertypes permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Extend FilterTypes</h2>\n<p>Instead of defining your own operation type, you can also just change the configuration of the built\nin ones.\nYou can use <code class=\"language-text\">Configure&lt;TFilterType&gt;()</code> to alter the configuration of a type.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"58383957472298100000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`  descriptor.Configure<StringOperationFilterInput>(\n    x => x.Operation(DefaultFilterOperations.Equals).Description(&quot;Equals&quot;))`, `58383957472298100000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">  descriptor<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Configure</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>StringOperationFilterInput<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>\n    x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span><span class=\"token function\">Operation</span><span class=\"token punctuation\">(</span>DefaultFilterOperations<span class=\"token punctuation\">.</span>Equals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Equals\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"34804804828679135000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`input StringOperationFilterInput {\n  and: [StringOperationFilterInput!]\n  or: [StringOperationFilterInput!]\n  &quot;Equals&quot;\n  eq: String\n  neq: String\n  contains: String\n  ncontains: String\n  in: [String]\n  nin: [String]\n  startsWith: String\n  nstartsWith: String\n  endsWith: String\n  nendsWith: String\n}`, `34804804828679135000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">input</span> StringOperationFilterInput <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">and</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>StringOperationFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">or</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>StringOperationFilterInput<span class=\"token operator\">!</span><span class=\"token punctuation\">]</span>\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">Equals</span>\"</span>\n  <span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">neq</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">contains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">ncontains</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">nin</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">startsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">nstartsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">endsWith</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">nendsWith</span><span class=\"token punctuation\">:</span> String\n<span class=\"token punctuation\">}</span></code></pre></div>","tableOfContents":"<ul>\n<li><a href=\"/hotchocolate/fetching-data/filtering/#what-is-filtering\">What is filtering</a></li>\n<li><a href=\"/hotchocolate/fetching-data/filtering/#getting-started\">Getting started</a></li>\n<li><a href=\"/hotchocolate/fetching-data/filtering/#customization\">Customization</a></li>\n<li>\n<p><a href=\"/hotchocolate/fetching-data/filtering/#filter-types\">Filter Types</a></p>\n<ul>\n<li><a href=\"/hotchocolate/fetching-data/filtering/#boolean-filter\">Boolean Filter</a></li>\n<li><a href=\"/hotchocolate/fetching-data/filtering/#comparable-filter\">Comparable Filter</a></li>\n<li><a href=\"/hotchocolate/fetching-data/filtering/#string-filter\">String Filter</a></li>\n<li><a href=\"/hotchocolate/fetching-data/filtering/#enum-filter\">Enum Filter</a></li>\n<li><a href=\"/hotchocolate/fetching-data/filtering/#object-filter\">Object Filter</a></li>\n<li><a href=\"/hotchocolate/fetching-data/filtering/#list-filter\">List Filter</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/hotchocolate/fetching-data/filtering/#filter-conventions\">Filter Conventions</a></p>\n<ul>\n<li><a href=\"/hotchocolate/fetching-data/filtering/#get-started\">Get Started</a></li>\n<li><a href=\"/hotchocolate/fetching-data/filtering/#argument-name\">Argument Name</a></li>\n<li><a href=\"/hotchocolate/fetching-data/filtering/#binding-of-filtertypes\">Binding of FilterTypes</a></li>\n<li><a href=\"/hotchocolate/fetching-data/filtering/#extend-filtertypes\">Extend FilterTypes</a></li>\n</ul>\n</li>\n</ul>"}},"site":{"siteMetadata":{"siteUrl":"https://chillicream.com","repositoryUrl":"https://github.com/ChilliCream/hotchocolate","tools":{"slack":"https://join.slack.com/t/hotchocolategraphql/shared_invite/enQtNTA4NjA0ODYwOTQ0LTViMzA2MTM4OWYwYjIxYzViYmM0YmZhYjdiNzBjOTg2ZmU1YmMwNDZiYjUyZWZlMzNiMTk1OWUxNWZhMzQwY2Q"}}},"config":{"products":[{"path":"hotchocolate","title":"Hot Chocolate","description":"Build your own thin GraphQL API layer on top of any resource.","versions":[{"path":"","title":"v11 (latest)","items":[{"path":"index","title":"Introduction","items":null},{"path":"get-started","title":"Get Started","items":null},{"path":"defining-a-schema","title":"Defining a schema","items":[{"path":"index","title":"Schema basics"},{"path":"versioning","title":"Versioning"},{"path":"unions-and-interfaces","title":"Unions and Interfaces"},{"path":"scalars","title":"Scalars"},{"path":"directives","title":"Directives"}]},{"path":"fetching-data","title":"Fetching data","items":[{"path":"index","title":"Resolver"},{"path":"fetching-from-databases","title":"Fetching from Databases"},{"path":"fetching-from-rest","title":"Fetching from REST"},{"path":"dataloader","title":"DataLoader"},{"path":"pagination","title":"Pagination"},{"path":"filtering","title":"Filtering"},{"path":"sorting","title":"Sorting"},{"path":"projections","title":"Projections"}]},{"path":"integrations","title":"Integrations","items":[{"path":"index","title":"Overview"},{"path":"entity-framework","title":"Entity Framework"},{"path":"spatial-data","title":"Spatial Data"}]},{"path":"api-reference","title":"API Reference","items":[{"path":"index","title":"Overview"},{"path":"object-type","title":"Object Type"},{"path":"language","title":"Language"},{"path":"extending-filtering","title":"Extending Filtering"},{"path":"visitors","title":"Visitors"},{"path":"aspnetcore","title":"ASP.NET Core"},{"path":"executable","title":"Executable"},{"path":"migrate-from-10-to-11","title":"Migrate from 10.5 to 11.0"}]}]},{"path":"v10","title":"v10 (previous)","items":[{"path":"index","title":"Introduction","items":null},{"path":"code-first","title":"Code-First","items":null},{"path":"schema-first","title":"Schema-First","items":null},{"path":"schema","title":"Schema","items":[{"path":"index","title":"Schema"},{"path":"object-type","title":"Object Type"},{"path":"interface-type","title":"Interface Type"},{"path":"union-type","title":"Union Type"},{"path":"input-object-type","title":"Input Object Type"},{"path":"enum-type","title":"Enum Type"},{"path":"descriptions","title":"Schema Descriptions"},{"path":"custom-scalar-types","title":"Scalar Type Support"},{"path":"descriptor-attributes","title":"Descriptor Attributes"},{"path":"extending-types","title":"Custom Base Classes"},{"path":"directives","title":"Directives"},{"path":"resolvers","title":"Resolvers"},{"path":"relay","title":"Relay"},{"path":"conventions","title":"Conventions"},{"path":"options","title":"Schema Options"}]},{"path":"data-fetching","title":"Data Fetching","items":[{"path":"index","title":"Data Loaders"},{"path":"pagination","title":"Pagination"},{"path":"filters","title":"Filters"}]},{"path":"security","title":"Security","items":[{"path":"index","title":"Authorization"},{"path":"security","title":"Security"}]},{"path":"execution-engine","title":"Execution Engine","items":[{"path":"index","title":"Middleware"},{"path":"validation-rules","title":"Validation Rules"},{"path":"instrumentation","title":"Instrumentation"},{"path":"apollo-tracing","title":"Apollo Tracing"},{"path":"batching","title":"Batching"},{"path":"persisted-queries","title":"Persisted Queries"},{"path":"custom-context-data","title":"Custom Context Data"},{"path":"subscriptions","title":"Subscriptions"},{"path":"type-conversion","title":"Type Conversion"},{"path":"error-filter","title":"Error Filter"},{"path":"execution-options","title":"Execution Options"}]},{"path":"server","title":"Server","items":[{"path":"index","title":"ASP.Net"},{"path":"dependency-injection","title":"Dependency Injection"}]},{"path":"stitching","title":"Schema Stitching","items":null},{"path":"tooling","title":"Tooling","items":null},{"path":"advanced","title":"Advanced","items":[{"path":"index","title":"Parser"},{"path":"dotnet-cli","title":".Net CLI"}]},{"path":"tutorials","title":"Tutorials","items":[{"path":"index","title":"Entity Framework"}]},{"path":"examples","title":"Examples","items":[{"path":"index","title":"Star Wars"},{"path":"slack-clone","title":"Slack Clone"},{"path":"other-examples","title":"Other Examples"}]}]}]},{"path":"bananacakepop","title":"Banana Cake Pop","description":"Use this GUI to get deep insights from any GraphQL API.","versions":[{"path":"","title":"v1 (preview)","items":[{"path":"index","title":"Introduction","items":null}]}]},{"path":"greendonut","title":"Green Donut","description":"Configure data loaders and caching for GraphQL endpoints.","versions":[{"path":"","title":"v11 (latest)","items":[{"path":"index","title":"Introduction","items":null}]},{"path":"v10","title":"v10 (previous)","items":[{"path":"index","title":"Introduction","items":null},{"path":"installation","title":"Installation","items":null},{"path":"usage","title":"Usage","items":null},{"path":"api","title":"API","items":null},{"path":"advanced-concepts","title":"Advanced Concepts","items":[{"path":"index","title":"Custom DataLoader"},{"path":"diagnostics","title":"Diagnostic Events"}]}]}]}]}},"pageContext":{"originPath":"hotchocolate/fetching-data/filtering.md"}},"staticQueryHashes":["1014893094","2890364758","4218812017"]}