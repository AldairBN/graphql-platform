{"componentChunkName":"component---src-templates-doc-page-template-tsx","path":"/docs/hotchocolate/api-reference/visitors","result":{"data":{"file":{"childMdx":{"fields":{"slug":"/hotchocolate/api-reference/visitors/"},"frontmatter":{"title":"Visitors"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Visitors\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hot Chocolate creates an abstract syntax tree for every incoming request. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://TODOADDLINK\"\n  }), \"Here you find more information about the Abstract Syntax Tree (AST)\"), \". The execution engine evaluates this syntax tree in many different ways. Validation is a good example. Every incoming request has to be validated. The execution engine has to be sure that the semantic of the requested document is correct. A set of rules is applied to the syntax tree, to find potential semantic flaws.\"), mdx(\"p\", null, \"Usually, you do not have to access the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"AST\"), \" directly. The AST only becomes significant, when you want to change execution behavior based on the structure of the query. For example features like \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Fitlering\"), \", \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Sorting\"), \", or \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Selection\"), \", analyze the incoming query and generate expressions based on it.\"), mdx(\"p\", null, \"Hot Chocolate provides you with different APIs that support you to traverse these trees. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SyntaxWalker\"), \" is a visitor that has built-in all the logic to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"walk down a syntax tree\"), \".\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SyntaxWalker\"), \" is completely stateless. All the state is on a context object that is passed along. The generic argument \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TContext\"), \" of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SyntaxWalker<TContext>\"), \" denotes the type of the context.\"), mdx(\"p\", null, \"To start the visitation of a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"GraphQL\"), \" syntax tree, you have to pass the node and the context the visitation should start from to the visitors \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Visit\"), \" method.\"), mdx(\"hr\", null), mdx(\"h1\", null, \"Visitation\"), mdx(\"p\", null, \"To start the visitation of a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"GraphQL\"), \" syntax tree, you have to pass the node and the context the visitation should start from to the visitors \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Visit\"), \" method. On its way down the syntax tree, the visitor \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"enters\"), \" a node. The visitor then gets the children of the current node and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"enters\"), \" its children. Once the visitor reached a leaf node, it starts walking back up the tree and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"leaves\"), \" all the nodes. The visitor provides a virtual \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Enter\"), \" and a virtual \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Leave\"), \" method for all \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"GraphQL\"), \" AST nodes. These methods are called from the visitor as it \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"enters\"), \" or \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"leaves\"), \" a node.\"), mdx(\"p\", null, \"The syntax walker provides a few methods in addition to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Enter\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Leave\"), \" methods. For these two methods, there are also convenience methods that are called right \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"before\"), \" and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"after\"), \" the method call. Namely, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OnBeforeEnter\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OnAfterEnter\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OnBeforeLeave\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OnAfterLeave\"), \".\\nThese methods can modify the current \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TContext\"), \". These \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"before\"), \" and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"after\"), \" methods are good places to initialize state that is used in the main \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"enter\"), \" or \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"leave\"), \" method. e.g. before entering a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"FieldNode\"), \", you may want to peek the latest type from the context and get the instance of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ObjectField\"), \" corresponding to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"FieldNode\"), \" of this type. You may also want to push this type onto the context to then use it in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Enter\"), \" method.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u26A0\\uFE0F NOTE:\"), \" In the following sequence diagram the participants do \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NOT\"), \" represent any object instances. Furthermore, many steps are hidden in this example. The visualization below should just give you provide you visual insight on the order of the methods being called.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"query GetFoos {\\n  foo {\\n    bar\\n  }\\n}\\n\")), mdx(\"div\", {\n    \"className\": \"mermaid\",\n    \"data-processed\": \"true\"\n  }, mdx(\"svg\", _extends({\n    parentName: \"div\"\n  }, {\n    \"id\": \"mermaid-1613733835913\",\n    \"width\": \"100%\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"height\": \"1271\",\n    \"style\": {\n      \"maxWidth\": \"789px\"\n    },\n    \"viewBox\": \"-89 -10 789 1271\"\n  }), mdx(\"style\", {\n    parentName: \"svg\"\n  }, \"#mermaid-1613733835913{font-family:sans-serif;font-size:16px;fill:#333;}#mermaid-1613733835913 .error-icon{fill:#552222;}#mermaid-1613733835913 .error-text{fill:#552222;stroke:#552222;}#mermaid-1613733835913 .edge-thickness-normal{stroke-width:2px;}#mermaid-1613733835913 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-1613733835913 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-1613733835913 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-1613733835913 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-1613733835913 .marker{fill:#333333;}#mermaid-1613733835913 .marker.cross{stroke:#333333;}#mermaid-1613733835913 svg{font-family:sans-serif;font-size:16px;}#mermaid-1613733835913 .actor{stroke:hsl(259.6261682243,59.7765363128%,87.9019607843%);fill:#ECECFF;}#mermaid-1613733835913 text.actor > tspan{fill:black;stroke:none;}#mermaid-1613733835913 .actor-line{stroke:grey;}#mermaid-1613733835913 .messageLine0{stroke-width:1.5;stroke-dasharray:none;stroke:#333;}#mermaid-1613733835913 .messageLine1{stroke-width:1.5;stroke-dasharray:2,2;stroke:#333;}#mermaid-1613733835913 #arrowhead path{fill:#333;stroke:#333;}#mermaid-1613733835913 .sequenceNumber{fill:white;}#mermaid-1613733835913 #sequencenumber{fill:#333;}#mermaid-1613733835913 #crosshead path{fill:#333;stroke:#333;}#mermaid-1613733835913 .messageText{fill:#333;stroke:#333;}#mermaid-1613733835913 .labelBox{stroke:hsl(259.6261682243,59.7765363128%,87.9019607843%);fill:#ECECFF;}#mermaid-1613733835913 .labelText,#mermaid-1613733835913 .labelText > tspan{fill:black;stroke:none;}#mermaid-1613733835913 .loopText,#mermaid-1613733835913 .loopText > tspan{fill:black;stroke:none;}#mermaid-1613733835913 .loopLine{stroke-width:2px;stroke-dasharray:2,2;stroke:hsl(259.6261682243,59.7765363128%,87.9019607843%);fill:hsl(259.6261682243,59.7765363128%,87.9019607843%);}#mermaid-1613733835913 .note{stroke:#aaaa33;fill:#fff5ad;}#mermaid-1613733835913 .noteText,#mermaid-1613733835913 .noteText > tspan{fill:black;stroke:none;}#mermaid-1613733835913 .activation0{fill:#f4f4f4;stroke:#666;}#mermaid-1613733835913 .activation1{fill:#f4f4f4;stroke:#666;}#mermaid-1613733835913 .activation2{fill:#f4f4f4;stroke:#666;}#mermaid-1613733835913:root{--mermaid-font-family:sans-serif;}#mermaid-1613733835913 sequence{fill:apa;}\"), mdx(\"g\", {\n    parentName: \"svg\"\n  }), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"line\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"actor0\",\n    \"x1\": \"75\",\n    \"y1\": \"5\",\n    \"x2\": \"75\",\n    \"y2\": \"1260\",\n    \"className\": \"actor-line\",\n    \"strokeWidth\": \"0.5px\",\n    \"stroke\": \"#999\"\n  })), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"0\",\n    \"y\": \"0\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"32.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"75\",\n    \"dy\": \"0\"\n  }), \"Root\"))), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"line\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"actor1\",\n    \"x1\": \"275\",\n    \"y1\": \"5\",\n    \"x2\": \"275\",\n    \"y2\": \"1260\",\n    \"className\": \"actor-line\",\n    \"strokeWidth\": \"0.5px\",\n    \"stroke\": \"#999\"\n  })), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"200\",\n    \"y\": \"0\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"275\",\n    \"y\": \"32.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"275\",\n    \"dy\": \"0\"\n  }), \"Foo\"))), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"line\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"actor2\",\n    \"x1\": \"475\",\n    \"y1\": \"5\",\n    \"x2\": \"475\",\n    \"y2\": \"1260\",\n    \"className\": \"actor-line\",\n    \"strokeWidth\": \"0.5px\",\n    \"stroke\": \"#999\"\n  })), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"400\",\n    \"y\": \"0\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"475\",\n    \"y\": \"32.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"475\",\n    \"dy\": \"0\"\n  }), \"Bar\"))), mdx(\"defs\", {\n    parentName: \"svg\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"arrowhead\",\n    \"refX\": \"5\",\n    \"refY\": \"2\",\n    \"markerWidth\": \"6\",\n    \"markerHeight\": \"4\",\n    \"orient\": \"auto\"\n  }), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"d\": \"M 0,0 V 4 L6,2 Z\"\n  })))), mdx(\"defs\", {\n    parentName: \"svg\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"crosshead\",\n    \"markerWidth\": \"15\",\n    \"markerHeight\": \"8\",\n    \"orient\": \"auto\",\n    \"refX\": \"16\",\n    \"refY\": \"4\"\n  }), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"fill\": \"black\",\n    \"stroke\": \"#000000\",\n    \"strokeWidth\": \"1px\",\n    \"d\": \"M 9,2 V 6 L16,4 Z\",\n    \"style\": {\n      \"strokeDasharray\": \"0, 0\"\n    }\n  })), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"strokeWidth\": \"1px\",\n    \"d\": \"M 0,1 L 6,7 M 6,1 L 0,7\",\n    \"style\": {\n      \"strokeDasharray\": \"0, 0\"\n    }\n  })))), mdx(\"defs\", {\n    parentName: \"svg\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"sequencenumber\",\n    \"refX\": \"15\",\n    \"refY\": \"15\",\n    \"markerWidth\": \"60\",\n    \"markerHeight\": \"40\",\n    \"orient\": \"auto\"\n  }), mdx(\"circle\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"cx\": \"15\",\n    \"cy\": \"15\",\n    \"r\": \"6\"\n  })))), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"80\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"OnBeforeEnter `query GetFoos`\"), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M 75,109 C 135,99 135,139 75,129\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"markerStart\": \"url(#sequencenumber)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"113\",\n    \"fontFamily\": \"sans-serif\",\n    \"fontSize\": \"12px\",\n    \"textAnchor\": \"middle\",\n    \"textLength\": \"16px\",\n    \"className\": \"sequenceNumber\"\n  }), \"1\"), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"154\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"Enter `query GetFoos`\"), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M 75,183 C 135,173 135,213 75,203\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"markerStart\": \"url(#sequencenumber)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"187\",\n    \"fontFamily\": \"sans-serif\",\n    \"fontSize\": \"12px\",\n    \"textAnchor\": \"middle\",\n    \"textLength\": \"16px\",\n    \"className\": \"sequenceNumber\"\n  }), \"2\"), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"228\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"OnAfterEnter `query GetFoos`\"), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M 75,257 C 135,247 135,287 75,277\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"markerStart\": \"url(#sequencenumber)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"261\",\n    \"fontFamily\": \"sans-serif\",\n    \"fontSize\": \"12px\",\n    \"textAnchor\": \"middle\",\n    \"textLength\": \"16px\",\n    \"className\": \"sequenceNumber\"\n  }), \"3\"), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"175\",\n    \"y\": \"302\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"VisitChildren\"), mdx(\"line\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x1\": \"75\",\n    \"y1\": \"331\",\n    \"x2\": \"275\",\n    \"y2\": \"331\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"markerStart\": \"url(#sequencenumber)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"335\",\n    \"fontFamily\": \"sans-serif\",\n    \"fontSize\": \"12px\",\n    \"textAnchor\": \"middle\",\n    \"textLength\": \"16px\",\n    \"className\": \"sequenceNumber\"\n  }), \"4\"), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"275\",\n    \"y\": \"346\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"OnBeforeEnter foo\"), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M 275,375 C 335,365 335,405 275,395\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"markerStart\": \"url(#sequencenumber)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"275\",\n    \"y\": \"379\",\n    \"fontFamily\": \"sans-serif\",\n    \"fontSize\": \"12px\",\n    \"textAnchor\": \"middle\",\n    \"textLength\": \"16px\",\n    \"className\": \"sequenceNumber\"\n  }), \"5\"), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"275\",\n    \"y\": \"420\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"Enter foo\"), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M 275,449 C 335,439 335,479 275,469\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"markerStart\": \"url(#sequencenumber)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"275\",\n    \"y\": \"453\",\n    \"fontFamily\": \"sans-serif\",\n    \"fontSize\": \"12px\",\n    \"textAnchor\": \"middle\",\n    \"textLength\": \"16px\",\n    \"className\": \"sequenceNumber\"\n  }), \"6\"), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"275\",\n    \"y\": \"494\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"OnAfterEnter foo\"), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M 275,523 C 335,513 335,553 275,543\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"markerStart\": \"url(#sequencenumber)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"275\",\n    \"y\": \"527\",\n    \"fontFamily\": \"sans-serif\",\n    \"fontSize\": \"12px\",\n    \"textAnchor\": \"middle\",\n    \"textLength\": \"16px\",\n    \"className\": \"sequenceNumber\"\n  }), \"7\"), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"375\",\n    \"y\": \"568\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"VisitChildren\"), mdx(\"line\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x1\": \"275\",\n    \"y1\": \"597\",\n    \"x2\": \"475\",\n    \"y2\": \"597\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"markerStart\": \"url(#sequencenumber)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"275\",\n    \"y\": \"601\",\n    \"fontFamily\": \"sans-serif\",\n    \"fontSize\": \"12px\",\n    \"textAnchor\": \"middle\",\n    \"textLength\": \"16px\",\n    \"className\": \"sequenceNumber\"\n  }), \"8\"), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"500\",\n    \"y\": \"607\",\n    \"fill\": \"#EDF2AE\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"36\",\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"className\": \"note\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"575\",\n    \"y\": \"612\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"noteText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"575\"\n  }), \"...\"))), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"375\",\n    \"y\": \"658\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"-\"), mdx(\"line\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x1\": \"475\",\n    \"y1\": \"687\",\n    \"x2\": \"275\",\n    \"y2\": \"687\",\n    \"className\": \"messageLine1\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerStart\": \"url(#sequencenumber)\",\n    \"style\": {\n      \"strokeDasharray\": \"3, 3\",\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"475\",\n    \"y\": \"691\",\n    \"fontFamily\": \"sans-serif\",\n    \"fontSize\": \"12px\",\n    \"textAnchor\": \"middle\",\n    \"textLength\": \"16px\",\n    \"className\": \"sequenceNumber\"\n  }), \"9\"), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"275\",\n    \"y\": \"702\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"OnBeforeLeave foo\"), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M 275,731 C 335,721 335,761 275,751\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"markerStart\": \"url(#sequencenumber)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"275\",\n    \"y\": \"735\",\n    \"fontFamily\": \"sans-serif\",\n    \"fontSize\": \"12px\",\n    \"textAnchor\": \"middle\",\n    \"textLength\": \"16px\",\n    \"className\": \"sequenceNumber\"\n  }), \"10\"), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"275\",\n    \"y\": \"776\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"Leave foo\"), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M 275,805 C 335,795 335,835 275,825\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"markerStart\": \"url(#sequencenumber)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"275\",\n    \"y\": \"809\",\n    \"fontFamily\": \"sans-serif\",\n    \"fontSize\": \"12px\",\n    \"textAnchor\": \"middle\",\n    \"textLength\": \"16px\",\n    \"className\": \"sequenceNumber\"\n  }), \"11\"), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"275\",\n    \"y\": \"850\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"OnAfterEnter foo\"), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M 275,879 C 335,869 335,909 275,899\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"markerStart\": \"url(#sequencenumber)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"275\",\n    \"y\": \"883\",\n    \"fontFamily\": \"sans-serif\",\n    \"fontSize\": \"12px\",\n    \"textAnchor\": \"middle\",\n    \"textLength\": \"16px\",\n    \"className\": \"sequenceNumber\"\n  }), \"12\"), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"175\",\n    \"y\": \"924\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"-\"), mdx(\"line\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x1\": \"275\",\n    \"y1\": \"953\",\n    \"x2\": \"75\",\n    \"y2\": \"953\",\n    \"className\": \"messageLine1\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerStart\": \"url(#sequencenumber)\",\n    \"style\": {\n      \"strokeDasharray\": \"3, 3\",\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"275\",\n    \"y\": \"957\",\n    \"fontFamily\": \"sans-serif\",\n    \"fontSize\": \"12px\",\n    \"textAnchor\": \"middle\",\n    \"textLength\": \"16px\",\n    \"className\": \"sequenceNumber\"\n  }), \"13\"), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"968\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"OnBeforeLeave  query GetFoos\"), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M 75,997 C 135,987 135,1027 75,1017\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"markerStart\": \"url(#sequencenumber)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"1001\",\n    \"fontFamily\": \"sans-serif\",\n    \"fontSize\": \"12px\",\n    \"textAnchor\": \"middle\",\n    \"textLength\": \"16px\",\n    \"className\": \"sequenceNumber\"\n  }), \"14\"), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"1042\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"Leave  query GetFoos\"), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M 75,1071 C 135,1061 135,1101 75,1091\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"markerStart\": \"url(#sequencenumber)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"1075\",\n    \"fontFamily\": \"sans-serif\",\n    \"fontSize\": \"12px\",\n    \"textAnchor\": \"middle\",\n    \"textLength\": \"16px\",\n    \"className\": \"sequenceNumber\"\n  }), \"15\"), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"1116\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"OnAfterEnter  query GetFoos\"), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"d\": \"M 75,1145 C 135,1135 135,1175 75,1165\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"markerStart\": \"url(#sequencenumber)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"1149\",\n    \"fontFamily\": \"sans-serif\",\n    \"fontSize\": \"12px\",\n    \"textAnchor\": \"middle\",\n    \"textLength\": \"16px\",\n    \"className\": \"sequenceNumber\"\n  }), \"16\"), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"0\",\n    \"y\": \"1195\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"1227.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"75\",\n    \"dy\": \"0\"\n  }), \"Root\"))), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"200\",\n    \"y\": \"1195\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"275\",\n    \"y\": \"1227.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"275\",\n    \"dy\": \"0\"\n  }), \"Foo\"))), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"400\",\n    \"y\": \"1195\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"475\",\n    \"y\": \"1227.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"475\",\n    \"dy\": \"0\"\n  }), \"Bar\"))))), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"We start walking down the tree and \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"enter\"), \". \", mdx(\"br\", null), \" Call the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"csharp\\xB1OnBeforeEnter(OperationDefinitionNode node, TContext context)\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Call the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"csharp\\xB1Enter(OperationDefinitionNode node, TContext context)\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Call the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"csharp\\xB1OnAfterEnter(OperationDefinitionNode node, TContext context)\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Call the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"csharp\\xB1VisitChildren(OperationDefinitionNode node, TContext context)\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Call the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"csharp\\xB1OnBeforeEnter(ObjectFieldNode node, TContext context)\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Call the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"csharp\\xB1Enter(ObjectFieldNode node, TContext context)\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Call the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"csharp\\xB1OnAfterEnter(ObjectFieldNode node, TContext context)\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Call the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"csharp\\xB1VisitChildren(ObjectFieldNode node, TContext context)\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"We walk back up the tree and \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"leave\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Call the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"csharp\\xB1OnBeforeLeave(ObjectFieldNode node, TContext context)\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Call the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"csharp\\xB1Leave(ObjectFieldNode node, TContext context)\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Call the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"csharp\\xB1OnAfterLeave(ObjectFieldNode node, TContext context)\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"We walk back up the tree and \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"leave\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Call the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"csharp\\xB1OnBeforeLeave(OperationDefinitionNode node, TContext context)\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Call the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"csharp\\xB1Leave(OperationDefinitionNode node, TContext context)\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Call the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"csharp\\xB1OnAfterLeave(OperationDefinitionNode node, TContext context)\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"Visitor Actions\"), mdx(\"p\", null, \"The \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Enter\"), \" and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Leave\"), \" methods return visitor actions. These methods control the visitors' next step in the visitation. Visitoractions can be used to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"skip\"), \" further visitation and step back up, or to \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"continue\"), \" and walk the current branch of the tree further down.\"), mdx(\"h2\", null, \"Continue\"), mdx(\"p\", null, \"If \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Continue\"), \" is returned from the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Enter\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Leave\"), \" method visitation on the current branch continues.\"), mdx(\"p\", null, \"In the following example \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Continue\"), \" is returned from the onEnter method. The visitor calls \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"VisitChildren\"), \" and continues to by \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"entering\"), \" the selection set.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\",\n    \"metastring\": \"{4}\",\n    \"{4}\": true\n  }), \"query {\\n  foo {\\n    bar\\n    baz @onEnter(return: SKIP) {\\n      quux\\n    }\\n    qux\\n  }\\n}\\n\")), mdx(\"h2\", null, \"Skip\"), mdx(\"p\", null, \"If \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Skip\"), \" is returned from the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Enter\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Leave\"), \" method, further visitation on this node stops.\"), mdx(\"p\", null, \"In the following example \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Skip\"), \" is returned from the onEnter method. The visitor skips the field \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"baz\"), \". It continues visitation by \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"entering\"), \" the field \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"qux\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\",\n    \"metastring\": \"{4}\",\n    \"{4}\": true\n  }), \"query {\\n  foo {\\n    bar\\n    baz @onEnter(return: SKIP) {\\n      quux\\n    }\\n    qux\\n  }\\n}\\n\")), mdx(\"h2\", null, \"SkipAndLeave\"), mdx(\"p\", null, \"If \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SkipAndLeave\"), \" is returned from the Enter method, further visitation on this node stops. Instead of directly calling the next \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Enter\"), \" method. The visitor calls the Leave method of the current node first.\"), mdx(\"p\", null, \"In the following example \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SkipAndLeave\"), \" is returned from the onEnter method. The visitor skips the field \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"baz\"), \". Before it continues visitation with the field \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"qux\"), \" it calls the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"leaves\"), \" the field \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"baz\"), \" by calling \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Leave\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\",\n    \"metastring\": \"{4}\",\n    \"{4}\": true\n  }), \"query {\\n  foo {\\n    bar\\n    baz @onEnter(return: SKIPANDLEAVE) {\\n      quux\\n    }\\n    qux\\n  }\\n}\\n\")), mdx(\"h2\", null, \"Break\"), mdx(\"p\", null, \"If \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Break\"), \" is returned from the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Enter\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Leave\"), \" method, further visitation on this branch stops.\"), mdx(\"p\", null, \"In the following example \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Break\"), \" is returned from the onEnter method. The visitor immediately starts walking back up. The visitor calls the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Leave\"), \" on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"foo\"), \" instead of visiting the selections set of \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"baz\"), \" it skips \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"baz\"), \" and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"qux\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\",\n    \"metastring\": \"{4}\",\n    \"{4}\": true\n  }), \"query {\\n  foo {\\n    bar\\n    baz @onEnter(return: BREAK) {\\n      quux\\n    }\\n    qux\\n  }\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#visitation","title":"Visitation"},{"url":"#visitor-actions","title":"Visitor Actions","items":[{"url":"#continue","title":"Continue"},{"url":"#skip","title":"Skip"},{"url":"#skipandleave","title":"SkipAndLeave"},{"url":"#break","title":"Break"}]}]}}},"site":{"siteMetadata":{"siteUrl":"https://chillicream.com","repositoryUrl":"https://github.com/ChilliCream/hotchocolate","tools":{"slack":"http://bit.ly/joinchilli"}}},"config":{"products":[{"path":"hotchocolate","title":"Hot Chocolate","description":"Build your own thin GraphQL API layer on top of any resource.","versions":[{"path":"","title":"v11 (latest)","items":[{"path":"index","title":"Introduction","items":null},{"path":"get-started","title":"Get Started","items":null},{"path":"defining-a-schema","title":"Defining a schema","items":[{"path":"index","title":"Schema basics"},{"path":"versioning","title":"Versioning"},{"path":"unions-and-interfaces","title":"Unions and Interfaces"},{"path":"scalars","title":"Scalars"},{"path":"directives","title":"Directives"}]},{"path":"fetching-data","title":"Fetching data","items":[{"path":"index","title":"Resolver"},{"path":"fetching-from-databases","title":"Fetching from Databases"},{"path":"fetching-from-rest","title":"Fetching from REST"},{"path":"dataloader","title":"DataLoader"},{"path":"pagination","title":"Pagination"},{"path":"filtering","title":"Filtering"},{"path":"sorting","title":"Sorting"},{"path":"projections","title":"Projections"}]},{"path":"integrations","title":"Integrations","items":[{"path":"index","title":"Overview"},{"path":"entity-framework","title":"Entity Framework"},{"path":"spatial-data","title":"Spatial Data"}]},{"path":"performance","title":"Performance","items":[{"path":"index","title":"Overview"},{"path":"persisted-queries","title":"Persisted queries"},{"path":"automatic-persisted-queries","title":"Automatic persisted queries"}]},{"path":"api-reference","title":"API Reference","items":[{"path":"index","title":"Overview"},{"path":"object-type","title":"Object Type"},{"path":"language","title":"Language"},{"path":"extending-filtering","title":"Extending Filtering"},{"path":"visitors","title":"Visitors"},{"path":"aspnetcore","title":"ASP.NET Core"},{"path":"executable","title":"Executable"},{"path":"migrate-from-10-to-11","title":"Migrate from 10.5 to 11.0"}]}]},{"path":"v10","title":"v10 (previous)","items":[{"path":"index","title":"Introduction","items":null},{"path":"code-first","title":"Code-First","items":null},{"path":"schema-first","title":"Schema-First","items":null},{"path":"schema","title":"Schema","items":[{"path":"index","title":"Schema"},{"path":"object-type","title":"Object Type"},{"path":"interface-type","title":"Interface Type"},{"path":"union-type","title":"Union Type"},{"path":"input-object-type","title":"Input Object Type"},{"path":"enum-type","title":"Enum Type"},{"path":"descriptions","title":"Schema Descriptions"},{"path":"custom-scalar-types","title":"Scalar Type Support"},{"path":"descriptor-attributes","title":"Descriptor Attributes"},{"path":"extending-types","title":"Custom Base Classes"},{"path":"directives","title":"Directives"},{"path":"resolvers","title":"Resolvers"},{"path":"relay","title":"Relay"},{"path":"conventions","title":"Conventions"},{"path":"options","title":"Schema Options"}]},{"path":"data-fetching","title":"Data Fetching","items":[{"path":"index","title":"Data Loaders"},{"path":"pagination","title":"Pagination"},{"path":"filters","title":"Filters"}]},{"path":"security","title":"Security","items":[{"path":"index","title":"Authorization"},{"path":"security","title":"Security"}]},{"path":"execution-engine","title":"Execution Engine","items":[{"path":"index","title":"Middleware"},{"path":"validation-rules","title":"Validation Rules"},{"path":"instrumentation","title":"Instrumentation"},{"path":"apollo-tracing","title":"Apollo Tracing"},{"path":"batching","title":"Batching"},{"path":"persisted-queries","title":"Persisted Queries"},{"path":"custom-context-data","title":"Custom Context Data"},{"path":"subscriptions","title":"Subscriptions"},{"path":"type-conversion","title":"Type Conversion"},{"path":"error-filter","title":"Error Filter"},{"path":"execution-options","title":"Execution Options"}]},{"path":"server","title":"Server","items":[{"path":"index","title":"ASP.Net"},{"path":"dependency-injection","title":"Dependency Injection"}]},{"path":"stitching","title":"Schema Stitching","items":null},{"path":"tooling","title":"Tooling","items":null},{"path":"advanced","title":"Advanced","items":[{"path":"index","title":"Parser"},{"path":"dotnet-cli","title":".Net CLI"}]},{"path":"tutorials","title":"Tutorials","items":[{"path":"index","title":"Entity Framework"}]},{"path":"examples","title":"Examples","items":[{"path":"index","title":"Star Wars"},{"path":"slack-clone","title":"Slack Clone"},{"path":"other-examples","title":"Other Examples"}]}]}]},{"path":"bananacakepop","title":"Banana Cake Pop","description":"Use this GUI to get deep insights from any GraphQL API.","versions":[{"path":"","title":"v1 (preview)","items":[{"path":"index","title":"Introduction","items":null}]}]},{"path":"greendonut","title":"Green Donut","description":"Configure data loaders and caching for GraphQL endpoints.","versions":[{"path":"","title":"v11 (latest)","items":[{"path":"index","title":"Introduction","items":null}]},{"path":"v10","title":"v10 (previous)","items":[{"path":"index","title":"Introduction","items":null},{"path":"installation","title":"Installation","items":null},{"path":"usage","title":"Usage","items":null},{"path":"api","title":"API","items":null},{"path":"advanced-concepts","title":"Advanced Concepts","items":[{"path":"index","title":"Custom DataLoader"},{"path":"diagnostics","title":"Diagnostic Events"}]}]}]}]}},"pageContext":{"originPath":"hotchocolate/api-reference/visitors.md"}},"staticQueryHashes":["1014893094","2890364758","4218812017"]}