{"componentChunkName":"component---src-templates-doc-page-template-tsx","path":"/docs/hotchocolate/v10/schema/descriptions","result":{"data":{"file":{"childMarkdownRemark":{"fields":{"slug":"/hotchocolate/v10/schema/descriptions/"},"frontmatter":{"title":"Schema Descriptions"},"html":"<p>As with any API, documentation is an important of describing the data and queries available to a consumer. Hot Chocolate offers multiple ways to document your GraphQL application.</p>\n<h1 id=\"schema-first\" style=\"position:relative;\"><a href=\"#schema-first\" aria-label=\"schema first permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Schema-first</h1>\n<p>In schema-first scenarios the schema parser supports the inclusion of description strings. When a schema string includes such descriptions, they will be available through your typically introspection queries.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"84551962763252380000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`SchemaBuilder.New()\n    .AddDocumentFromString(@&quot;\n        &quot;&quot;&quot;&quot;&quot;&quot;\n        A droid in the Star Wars universe.\n        &quot;&quot;&quot;&quot;&quot;&quot;\n        type Droid {\n            &quot;&quot;The Id of the droid.&quot;&quot;\n            id: String\n\n            &quot;&quot;The name of the droid.&quot;&quot;\n            name: String\n        }\n\n        &quot;&quot;&quot;&quot;&quot;&quot;\n        An episode in the Star Wars series.\n        &quot;&quot;&quot;&quot;&quot;&quot;\n        enum Episode {\n            &quot;&quot;Star Wars Episode IV: A New Hope&quot;&quot;\n            NEWHOPE\n\n            &quot;&quot;Star Wars Episode V: Empire Strikes Back&quot;&quot;\n            EMPIRE\n\n            &quot;&quot;Star Wars Episode VI: Return of the Jedi&quot;&quot;\n            JEDI\n        }\n\n        type Query {\n            &quot;&quot;&quot;&quot;&quot;&quot;\n            Get a droid by Id.\n            &quot;&quot;&quot;&quot;&quot;&quot;\n            droid(\n                &quot;&quot;The Id of the droid.&quot;&quot;\n                id: String\n            ): Droid\n        }&quot;)\n    .AddResolver(&quot;Query&quot;, &quot;droid&quot;, () => null)\n    .AddResolver(&quot;Droid&quot;, &quot;id&quot;, () => &quot;1234&quot;)\n    .AddResolver(&quot;Droid&quot;, &quot;name&quot;, () => &quot;R2D2&quot;)\n    .Create();`, `84551962763252380000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">SchemaBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">AddDocumentFromString</span><span class=\"token punctuation\">(</span><span class=\"token string\">@\"\n        \"\"\"\"\"\"\n        A droid in the Star Wars universe.\n        \"\"\"\"\"\"\n        type Droid {\n            \"\"The Id of the droid.\"\"\n            id: String\n\n            \"\"The name of the droid.\"\"\n            name: String\n        }\n\n        \"\"\"\"\"\"\n        An episode in the Star Wars series.\n        \"\"\"\"\"\"\n        enum Episode {\n            \"\"Star Wars Episode IV: A New Hope\"\"\n            NEWHOPE\n\n            \"\"Star Wars Episode V: Empire Strikes Back\"\"\n            EMPIRE\n\n            \"\"Star Wars Episode VI: Return of the Jedi\"\"\n            JEDI\n        }\n\n        type Query {\n            \"\"\"\"\"\"\n            Get a droid by Id.\n            \"\"\"\"\"\"\n            droid(\n                \"\"The Id of the droid.\"\"\n                id: String\n            ): Droid\n        }\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">AddResolver</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Query\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"droid\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">AddResolver</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Droid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">\"1234\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">AddResolver</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Droid\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">\"R2D2\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>SDL</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"42203578925606355000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`&quot;&quot;&quot;\nA droid in the Star Wars universe.\n&quot;&quot;&quot;\ntype Droid {\n  &quot;The Id of the droid.&quot;\n  id: String\n\n  &quot;The name of the droid.&quot;\n  name: String\n}\n\n&quot;&quot;&quot;\nAn episode in the Star Wars series.\n&quot;&quot;&quot;\nenum Episode {\n  &quot;Star Wars Episode IV: A New Hope&quot;\n  NEWHOPE\n\n  &quot;Star Wars Episode V: Empire Strikes Back&quot;\n  EMPIRE\n\n  &quot;Star Wars Episode VI: Return of the Jedi&quot;\n  JEDI\n}\n\ntype Query {\n  &quot;&quot;&quot;\n  Get a particular droid by Id.\n  &quot;&quot;&quot;\n  droid(&quot;The Id of the droid.&quot; id: String): Droid\n}`, `42203578925606355000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token description string\">\"\"\"<span class=\"token language-markdown\">\nA droid in the Star Wars universe.\n</span>\"\"\"</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Droid</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">The Id of the droid.</span>\"</span>\n  <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> String\n\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">The name of the droid.</span>\"</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> String\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token description string\">\"\"\"<span class=\"token language-markdown\">\nAn episode in the Star Wars series.\n</span>\"\"\"</span>\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">Episode</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">Star Wars Episode IV: A New Hope</span>\"</span>\n  <span class=\"token constant\">NEWHOPE</span>\n\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">Star Wars Episode V: Empire Strikes Back</span>\"</span>\n  <span class=\"token constant\">EMPIRE</span>\n\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">Star Wars Episode VI: Return of the Jedi</span>\"</span>\n  <span class=\"token constant\">JEDI</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token description string\">\"\"\"<span class=\"token language-markdown\">\n  Get a particular droid by Id.\n  </span>\"\"\"</span>\n  <span class=\"token attr-name\">droid</span><span class=\"token punctuation\">(</span><span class=\"token description string\">\"<span class=\"token language-markdown\">The Id of the droid.</span>\"</span> <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Droid\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"code-first\" style=\"position:relative;\"><a href=\"#code-first\" aria-label=\"code first permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Code-First</h1>\n<p>In code-first schemas there are multiple ways to describe the types and queries available in your API. The documentation options listed below are listed in order of specificity, meaning that options listed at the top will be overridden by options listed after it.</p>\n<h2 id=\"xml-documentation\" style=\"position:relative;\"><a href=\"#xml-documentation\" aria-label=\"xml documentation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>XML Documentation</h2>\n<p>Out of the box, Hot Chocolate has the ability to automatically generate API documentation from your existing <a href=\"https://docs.microsoft.com/en-us/dotnet/csharp/codedoc\">XML documentation comments</a>. For example, given the following C# code with XML documentation strings you will have the following GraphQL schema.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"52103795907820460000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`/// <summary>\n/// A droid in the Star Wars universe.\n/// </summary>\npublic class Droid\n{\n    /// <summary>\n    /// The Id of the droid.\n    /// </summary>\n    public string Id { get; set; }\n\n    /// <summary>\n    /// The name of the droid.\n    /// </summary>\n    public string Name { get; set; }\n}\n\n/// <summary>\n/// An episode in the Star Wars series.\n/// </summary>\npublic enum Episode\n{\n    /// <summary>\n    /// Star Wars Episode IV: A New Hope\n    /// </summary>\n    NEWHOPE,\n    /// <summary>\n    /// Star Wars Episode V: Empire Strikes Back\n    /// </summary>\n    EMPIRE,\n    /// <summary>\n    /// Star Wars Episode VI: Return of the Jedi\n    /// </summary>\n    JEDI\n}\n\npublic class Query {\n    /// <summary>\n    /// Get a particular droid by Id.\n    /// </summary>\n    /// <param name=&quot;id&quot;>The Id of the droid.</param>\n    /// <returns>The droid.</returns>\n    public Droid GetDroid(string id)\n    {\n        /* Removed for brevity */\n    }\n}`, `52103795907820460000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token comment\">/// &lt;summary></span>\n<span class=\"token comment\">/// A droid in the Star Wars universe.</span>\n<span class=\"token comment\">/// &lt;/summary></span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Droid</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/// &lt;summary></span>\n    <span class=\"token comment\">/// The Id of the droid.</span>\n    <span class=\"token comment\">/// &lt;/summary></span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Id <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/// &lt;summary></span>\n    <span class=\"token comment\">/// The name of the droid.</span>\n    <span class=\"token comment\">/// &lt;/summary></span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/// &lt;summary></span>\n<span class=\"token comment\">/// An episode in the Star Wars series.</span>\n<span class=\"token comment\">/// &lt;/summary></span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Episode</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/// &lt;summary></span>\n    <span class=\"token comment\">/// Star Wars Episode IV: A New Hope</span>\n    <span class=\"token comment\">/// &lt;/summary></span>\n    NEWHOPE<span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">/// &lt;summary></span>\n    <span class=\"token comment\">/// Star Wars Episode V: Empire Strikes Back</span>\n    <span class=\"token comment\">/// &lt;/summary></span>\n    EMPIRE<span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">/// &lt;summary></span>\n    <span class=\"token comment\">/// Star Wars Episode VI: Return of the Jedi</span>\n    <span class=\"token comment\">/// &lt;/summary></span>\n    JEDI\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/// &lt;summary></span>\n    <span class=\"token comment\">/// Get a particular droid by Id.</span>\n    <span class=\"token comment\">/// &lt;/summary></span>\n    <span class=\"token comment\">/// &lt;param name=\"id\">The Id of the droid.&lt;/param></span>\n    <span class=\"token comment\">/// &lt;returns>The droid.&lt;/returns></span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Droid</span> <span class=\"token function\">GetDroid</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> id<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">/* Removed for brevity */</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>SDL</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"42807096475425776000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`&quot;&quot;&quot;\nA droid in the Star Wars universe.\n&quot;&quot;&quot;\ntype Droid {\n  &quot;The Id of the droid.&quot;\n  id: String\n\n  &quot;The name of the droid.&quot;\n  name: String\n}\n\n&quot;&quot;&quot;\nAn episode in the Star Wars series.\n&quot;&quot;&quot;\nenum Episode {\n  &quot;Star Wars Episode IV: A New Hope&quot;\n  NEWHOPE\n\n  &quot;Star Wars Episode V: Empire Strikes Back&quot;\n  EMPIRE\n\n  &quot;Star Wars Episode VI: Return of the Jedi&quot;\n  JEDI\n}\n\ntype Query {\n  &quot;&quot;&quot;\n  Get a particular droid by Id.\n  &quot;&quot;&quot;\n  droid(&quot;The Id of the droid.&quot; id: String): Droid\n}`, `42807096475425776000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token description string\">\"\"\"<span class=\"token language-markdown\">\nA droid in the Star Wars universe.\n</span>\"\"\"</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Droid</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">The Id of the droid.</span>\"</span>\n  <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> String\n\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">The name of the droid.</span>\"</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> String\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token description string\">\"\"\"<span class=\"token language-markdown\">\nAn episode in the Star Wars series.\n</span>\"\"\"</span>\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">Episode</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">Star Wars Episode IV: A New Hope</span>\"</span>\n  <span class=\"token constant\">NEWHOPE</span>\n\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">Star Wars Episode V: Empire Strikes Back</span>\"</span>\n  <span class=\"token constant\">EMPIRE</span>\n\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">Star Wars Episode VI: Return of the Jedi</span>\"</span>\n  <span class=\"token constant\">JEDI</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token description string\">\"\"\"<span class=\"token language-markdown\">\n  Get a particular droid by Id.\n  </span>\"\"\"</span>\n  <span class=\"token attr-name\">droid</span><span class=\"token punctuation\">(</span><span class=\"token description string\">\"<span class=\"token language-markdown\">The Id of the droid.</span>\"</span> <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Droid\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Once you've written your documentation, you will need to enable documentation file generation for your <code class=\"language-text\">.csproj</code>. One of the easiest ways to accomplish this is to add the <code class=\"language-text\">&lt;GenerateDocumentationFile&gt;</code> element to a <code class=\"language-text\">&lt;PropertyGroup&gt;</code> element in your project file. When your project is built this will automatically generate an XML documentation file for the specified framework and runtime.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"68539229384824906000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`<PropertyGroup>\n    <GenerateDocumentationFile>true</GenerateDocumentationFile>\n    <NoWarn>\\$(NoWarn);1591</NoWarn>\n</PropertyGroup>`, `68539229384824906000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PropertyGroup</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>GenerateDocumentationFile</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>GenerateDocumentationFile</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>NoWarn</span><span class=\"token punctuation\">></span></span>$(NoWarn);1591<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>NoWarn</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>PropertyGroup</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<blockquote>\n<p>The <code class=\"language-text\">&lt;NoWarn&gt;</code> element is optional. Including this element prevents the compiler for emitting warnings for any classes, properties, or methods that are missing documentation strings.</p>\n</blockquote>\n<p>Should you decide you do not want to use the XML documentation, you have the ability to turn it off by setting the <code class=\"language-text\">UseXmlDocumentation</code> property on the schema's <code class=\"language-text\">ISchemaOptions</code>.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"16764711217793882000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`SchemaBuilder.New()\n  .ModifyOptions(opt => opt.UseXmlDocumentation = false)\n  ...\n  .Create()`, `16764711217793882000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">SchemaBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">ModifyOptions</span><span class=\"token punctuation\">(</span>opt <span class=\"token operator\">=></span> opt<span class=\"token punctuation\">.</span>UseXmlDocumentation <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n  <span class=\"token range operator\">..</span><span class=\"token punctuation\">.</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"attributes\" style=\"position:relative;\"><a href=\"#attributes\" aria-label=\"attributes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Attributes</h2>\n<p>Hot Chocolate also provides a <code class=\"language-text\">GraphQLDescriptionAttribute</code> that can be used to provide descriptions for classes, properties, methods, and method parameters. For example, given the following C# code you will have the following GraphQL schema.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"95012741845308880000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`[GraphQLDescription(&quot;I am a droid in the Star Wars universe.&quot;)]\npublic class Droid\n{\n    [GraphQLDescription(&quot;The Id of the droid.&quot;)]\n    public string Id { get; set; }\n\n    [GraphQLDescription(&quot;The name of the droid.&quot;)]\n    public string Name { get; set; }\n}\n\npublic class Query\n{\n    [GraphQLDescription(&quot;Get a particular droid by Id.&quot;)]\n    public Droid GetDroid(\n        [GraphQLDescription(&quot;The Id of the droid.&quot;)] string id)\n    {\n        /* Removed for brevity */\n    }\n}`, `95012741845308880000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">GraphQLDescription</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"I am a droid in the Star Wars universe.\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Droid</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">GraphQLDescription</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"The Id of the droid.\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Id <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">GraphQLDescription</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"The name of the droid.\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">GraphQLDescription</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Get a particular droid by Id.\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Droid</span> <span class=\"token function\">GetDroid</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">GraphQLDescription</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"The Id of the droid.\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> id<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">/* Removed for brevity */</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>SDL</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"98583795389080550000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`&quot;&quot;&quot;\nA droid in the Star Wars universe.\n&quot;&quot;&quot;\ntype Droid {\n  &quot;The Id of the droid.&quot;\n  id: String\n\n  &quot;The name of the droid.&quot;\n  name: String\n}\n\ntype Query {\n  &quot;&quot;&quot;\n  Get a particular droid by Id.\n  &quot;&quot;&quot;\n  droid(&quot;The Id of the droid.&quot; id: String): Droid\n}`, `98583795389080550000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token description string\">\"\"\"<span class=\"token language-markdown\">\nA droid in the Star Wars universe.\n</span>\"\"\"</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Droid</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">The Id of the droid.</span>\"</span>\n  <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> String\n\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">The name of the droid.</span>\"</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> String\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token description string\">\"\"\"<span class=\"token language-markdown\">\n  Get a particular droid by Id.\n  </span>\"\"\"</span>\n  <span class=\"token attr-name\">droid</span><span class=\"token punctuation\">(</span><span class=\"token description string\">\"<span class=\"token language-markdown\">The Id of the droid.</span>\"</span> <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Droid\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>If the description provided to the <code class=\"language-text\">GraphQLDescriptionAttribute</code> is <code class=\"language-text\">null</code> or made up of only white space Hot Chocolate will use XML documentation strings as a fallback (assuming you have the feature enabled).</p>\n</blockquote>\n<h2 id=\"fluent-apis\" style=\"position:relative;\"><a href=\"#fluent-apis\" aria-label=\"fluent apis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fluent APIs</h2>\n<p>The <code class=\"language-text\">IObjecTypeDescriptor&lt;T&gt;</code> includes fluent APIs that enable setting descriptions through a declarative syntax. You can easily access these fluent APIs by creating a class that inherits from the <code class=\"language-text\">ObjectType&lt;T&gt;</code> class and overriding the <code class=\"language-text\">Configure(IObjectTypeDescriptor&lt;T&gt;)</code> method. For example, given the following C# code you would have the following GraphQL schema.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"60177309318105190000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class Droid\n{\n    public string Id { get; set; }\n\n    public string Name { get; set; }\n}\n\npublic class DroidType : ObjectType<Droid>\n{\n    protected override void Configure(IObjectTypeDescriptor<Droid> descriptor)\n    {\n        descriptor.Description(&quot;A droid in the Star Wars Universe&quot;);\n\n        descriptor.Field(f => f.Id)\n            .Description(&quot;The Id of the droid.&quot;);\n\n        descriptor.Field(f => f.Name)\n            .Description(&quot;The name of the droid.&quot;);\n    }\n}`, `60177309318105190000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Droid</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Id <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DroidType</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType<span class=\"token punctuation\">&lt;</span>Droid<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObjectTypeDescriptor<span class=\"token punctuation\">&lt;</span>Droid<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A droid in the Star Wars Universe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Field</span><span class=\"token punctuation\">(</span>f <span class=\"token operator\">=></span> f<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">Description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The Id of the droid.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Field</span><span class=\"token punctuation\">(</span>f <span class=\"token operator\">=></span> f<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">Description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The name of the droid.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>SDL</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"60281288438261220000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`&quot;&quot;&quot;\nA droid in the Star Wars Universe.\n&quot;&quot;&quot;\ntype Droid {\n  &quot;The Id of the droid.&quot;\n  id: String\n\n  &quot;The name of the droid.&quot;\n  name: String\n}`, `60281288438261220000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token description string\">\"\"\"<span class=\"token language-markdown\">\nA droid in the Star Wars Universe.\n</span>\"\"\"</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Droid</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">The Id of the droid.</span>\"</span>\n  <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> String\n\n  <span class=\"token description string\">\"<span class=\"token language-markdown\">The name of the droid.</span>\"</span>\n  <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> String\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Similar to the previous options, the fluent APIs also provide the ability to generate descriptions for the queries and their arguments.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"94853960841875010000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class Query\n{\n    public Droid GetDroid(string id)\n    {\n        /* Removed for brevity */\n    }\n}\n\npublic class QueryType : ObjectType<Query>\n{\n    protected override void Configure(IObjectTypeDescriptor<Query> descriptor)\n    {\n        descriptor.Field(f => f.GetDroid(default))\n            .Type<DroidType>()\n            .Description(&quot;Search for droids.&quot;)\n            .Argument(\n                &quot;id&quot;,\n                argDescriptor => argDescriptor\n                    .Description(&quot;The text to search on.&quot;)\n            );\n    }\n}`, `94853960841875010000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Droid</span> <span class=\"token function\">GetDroid</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> id<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">/* Removed for brevity */</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">QueryType</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType<span class=\"token punctuation\">&lt;</span>Query<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObjectTypeDescriptor<span class=\"token punctuation\">&lt;</span>Query<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Field</span><span class=\"token punctuation\">(</span>f <span class=\"token operator\">=></span> f<span class=\"token punctuation\">.</span><span class=\"token function\">GetDroid</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Type</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>DroidType<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">Description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Search for droids.\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">Argument</span><span class=\"token punctuation\">(</span>\n                <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span>\n                argDescriptor <span class=\"token operator\">=></span> argDescriptor\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">Description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The text to search on.\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>SDL</strong></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"79735382116241150000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Query {\n    &quot;&quot;&quot;\n    Search for droids.\n    &quot;&quot;&quot;\n    search(\n        &quot;The Id of the droid.&quot;\n        text: String\n    ): Droid[]!\n}`, `79735382116241150000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token description string\">\"\"\"<span class=\"token language-markdown\">\n    Search for droids.\n    </span>\"\"\"</span>\n    <span class=\"token attr-name\">search</span><span class=\"token punctuation\">(</span>\n        <span class=\"token description string\">\"<span class=\"token language-markdown\">The Id of the droid.</span>\"</span>\n        <span class=\"token attr-name\">text</span><span class=\"token punctuation\">:</span> String\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Droid<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>If the <code class=\"language-text\">Description()</code> methods are used they will <strong>always</strong> override any descriptions provided from the previous options, regardless of being <code class=\"language-text\">null</code> or white space values.</p>\n</blockquote>","tableOfContents":"<ul>\n<li><a href=\"/hotchocolate/v10/schema/descriptions/#schema-first\">Schema-first</a></li>\n<li>\n<p><a href=\"/hotchocolate/v10/schema/descriptions/#code-first\">Code-First</a></p>\n<ul>\n<li><a href=\"/hotchocolate/v10/schema/descriptions/#xml-documentation\">XML Documentation</a></li>\n<li><a href=\"/hotchocolate/v10/schema/descriptions/#attributes\">Attributes</a></li>\n<li><a href=\"/hotchocolate/v10/schema/descriptions/#fluent-apis\">Fluent APIs</a></li>\n</ul>\n</li>\n</ul>"}},"site":{"siteMetadata":{"siteUrl":"https://chillicream.com","repositoryUrl":"https://github.com/ChilliCream/hotchocolate","tools":{"slack":"https://join.slack.com/t/hotchocolategraphql/shared_invite/enQtNTA4NjA0ODYwOTQ0LTViMzA2MTM4OWYwYjIxYzViYmM0YmZhYjdiNzBjOTg2ZmU1YmMwNDZiYjUyZWZlMzNiMTk1OWUxNWZhMzQwY2Q"}}},"config":{"products":[{"path":"hotchocolate","title":"Hot Chocolate","description":"Build your own thin GraphQL API layer on top of any resource.","versions":[{"path":"v10","title":"v10 (stable)","items":[{"path":"index","title":"Introduction","items":null},{"path":"code-first","title":"Code-First","items":null},{"path":"schema-first","title":"Schema-First","items":null},{"path":"schema","title":"Schema","items":[{"path":"index","title":"Schema"},{"path":"object-type","title":"Object Type"},{"path":"interface-type","title":"Interface Type"},{"path":"union-type","title":"Union Type"},{"path":"input-object-type","title":"Input Object Type"},{"path":"enum-type","title":"Enum Type"},{"path":"descriptions","title":"Schema Descriptions"},{"path":"custom-scalar-types","title":"Scalar Type Support"},{"path":"descriptor-attributes","title":"Descriptor Attributes"},{"path":"extending-types","title":"Custom Base Classes"},{"path":"directives","title":"Directives"},{"path":"resolvers","title":"Resolvers"},{"path":"relay","title":"Relay"},{"path":"conventions","title":"Conventions"},{"path":"options","title":"Schema Options"}]},{"path":"data-fetching","title":"Data Fetching","items":[{"path":"index","title":"Data Loaders"},{"path":"pagination","title":"Pagination"},{"path":"filters","title":"Filters"}]},{"path":"security","title":"Security","items":[{"path":"index","title":"Authorization"},{"path":"security","title":"Security"}]},{"path":"execution-engine","title":"Execution Engine","items":[{"path":"index","title":"Middleware"},{"path":"validation-rules","title":"Validation Rules"},{"path":"instrumentation","title":"Instrumentation"},{"path":"apollo-tracing","title":"Apollo Tracing"},{"path":"batching","title":"Batching"},{"path":"persisted-queries","title":"Persisted Queries"},{"path":"custom-context-data","title":"Custom Context Data"},{"path":"subscriptions","title":"Subscriptions"},{"path":"type-conversion","title":"Type Conversion"},{"path":"error-filter","title":"Error Filter"},{"path":"execution-options","title":"Execution Options"}]},{"path":"server","title":"Server","items":[{"path":"index","title":"ASP.Net"},{"path":"dependency-injection","title":"Dependency Injection"}]},{"path":"stitching","title":"Schema Stitching","items":null},{"path":"tooling","title":"Tooling","items":null},{"path":"advanced","title":"Advanced","items":[{"path":"index","title":"Parser"},{"path":"dotnet-cli","title":".Net CLI"}]},{"path":"tutorials","title":"Tutorials","items":[{"path":"index","title":"Entity Framework"}]},{"path":"examples","title":"Examples","items":[{"path":"index","title":"Star Wars"},{"path":"slack-clone","title":"Slack Clone"},{"path":"other-examples","title":"Other Examples"}]}]},{"path":"","title":"v11 (preview)","items":[{"path":"index","title":"Introduction","items":null},{"path":"getting-started","title":"Getting Started","items":null},{"path":"defining-a-schema","title":"Defining a schema","items":[{"path":"index","title":"Schema basics"},{"path":"versioning","title":"Versioning"},{"path":"unions-and-interfaces","title":"Unions and Interfaces"},{"path":"scalars","title":"Scalars"},{"path":"directives","title":"Directives"}]},{"path":"fetching-data","title":"Fetching data","items":[{"path":"index","title":"Resolver"},{"path":"fetching-from-databases","title":"Fetching from Databases"},{"path":"fetching-from-rest","title":"Fetching from REST"},{"path":"dataloader","title":"DataLoader"},{"path":"pagination","title":"Pagination"},{"path":"filtering","title":"Filtering"},{"path":"sorting","title":"Sorting"}]},{"path":"api-reference","title":"API Reference","items":[{"path":"index","title":"Overview"},{"path":"language","title":"Lanugage"},{"path":"visitors","title":"Visitors"}]}]}]},{"path":"bananacakepop","title":"Banana Cake Pop","description":"Use this GUI to get deep insights from any GraphQL API.","versions":[{"path":"","title":"v1 (preview)","items":[{"path":"index","title":"Introduction","items":null}]}]},{"path":"strawberryshake","title":"Strawberry Shake","description":"Generate a unique GraphQL client for .Net to fetch data from any GraphQL API.","versions":[{"path":"","title":"v11 (preview)","items":[{"path":"index","title":"Introduction","items":null}]}]},{"path":"marshmallowpie","title":"Marshmallow Pie","description":"Configure a GraphQL registry to keep track of any GraphQL server and client.","versions":[{"path":"","title":"v11 (preview)","items":[{"path":"index","title":"Introduction","items":null}]}]},{"path":"greendonut","title":"Green Donut","description":"Configure data loaders and caching for GraphQL endpoints.","versions":[{"path":"v10","title":"v10 (stable)","items":[{"path":"index","title":"Introduction","items":null},{"path":"installation","title":"Installation","items":null},{"path":"usage","title":"Usage","items":null},{"path":"api","title":"API","items":null},{"path":"advanced-concepts","title":"Advanced Concepts","items":[{"path":"index","title":"Custom DataLoader"},{"path":"diagnostics","title":"Diagnostic Events"}]}]},{"path":"","title":"v11 (preview)","items":[{"path":"index","title":"Introduction","items":null}]}]}]}},"pageContext":{"originPath":"hotchocolate/v10/schema/descriptions.md"}},"staticQueryHashes":["2890364758","4218812017","63159454"]}