{"componentChunkName":"component---src-templates-doc-page-template-tsx","path":"/docs/hotchocolate/security/authorization","result":{"data":{"file":{"childMdx":{"fields":{"slug":"/docs/hotchocolate/security/authorization","lastUpdated":"2021-07-06","lastAuthorName":"Tobias Tengler"},"frontmatter":{"title":"Authorization"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Authorization\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Authorization allows us to determine a user's permissions within our system. We can for example limit access to resources or only allow certain users to execute specific mutations.\"), mdx(\"p\", null, \"Authentication is a prerequisite of Authorization, as we first need to validate a user's \\\"authenticity\\\" before we can evaluate his authorization claims.\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/docs/hotchocolate/security/authentication\"\n  }, \"Learn how to setup authentication\")), mdx(\"h1\", {\n    \"id\": \"setup\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#setup\",\n    \"aria-label\": \"setup permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"viewBox\": \"0 0 512 512\",\n    \"width\": \"16\",\n    \"height\": \"16\",\n    \"fill\": \"var(--heading-text-color)\"\n  }, \"\\n                        \", mdx(\"path\", {\n    parentName: \"svg\",\n    \"d\": \"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"\n  }), \"\\n                      \")), \"Setup\"), mdx(\"p\", null, \"After we have successfully setup authentication, there are only a few things left to do.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Register the necessary ASP.NET Core services\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"public class Startup\\n{\\n    public void ConfigureServices(IServiceCollection services)\\n    {\\n        services.AddAuthorization();\\n\\n        // Omitted code for brevity\\n\\n        services\\n            .AddGraphQLServer()\\n            .AddAuthorization()\\n            .AddQueryType<Query>();\\n    }\\n}\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u26A0\\uFE0F Note: We need to call \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AddAuthorization()\"), \" on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IServiceCollection\"), \", to register the services needed by ASP.NET Core, and on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IRequestExecutorBuilder\"), \" to register the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@authorize\"), \" directive and middleware.\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Register the ASP.NET Core authorization middleware with the request pipeline by calling \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"UseAuthorization\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"public class Startup\\n{\\n    public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\\n    {\\n        app.UseRouting();\\n\\n        app.UseAuthentication();\\n        app.UseAuthorization();\\n\\n        app.UseEndpoints(endpoints =>\\n        {\\n            endpoints.MapGraphQL();\\n        });\\n    }\\n}\\n\")), mdx(\"h1\", {\n    \"id\": \"usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#usage\",\n    \"aria-label\": \"usage permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"viewBox\": \"0 0 512 512\",\n    \"width\": \"16\",\n    \"height\": \"16\",\n    \"fill\": \"var(--heading-text-color)\"\n  }, \"\\n                        \", mdx(\"path\", {\n    parentName: \"svg\",\n    \"d\": \"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"\n  }), \"\\n                      \")), \"Usage\"), mdx(\"p\", null, \"At the core of authorization with Hot Chocolate is the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@authorize\"), \" directive. It can be applied to fields and types to denote that they require authorization.\"), mdx(ExampleTabs, {\n    mdxType: \"ExampleTabs\"\n  }, mdx(ExampleTabs.Annotation, null, mdx(\"p\", null, \"In the Annotation-based approach we can use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[Authorize]\"), \" attribute to add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@authorize\"), \" directive.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"[Authorize]\\npublic class User\\n{\\n    public string Name { get; set; }\\n\\n    [Authorize]\\n    public Address Address { get; set; }\\n}\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u26A0\\uFE0F Note: We need to use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HotChocolate.AspNetCore.AuthorizationAttribute\"), \" instead of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Microsoft.AspNetCore.AuthorizationAttribute\"), \".\"))), mdx(ExampleTabs.Code, null, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"public class UserType : ObjectType<User>\\n{\\n    protected override void Configure(IObjectTypeDescriptor<User> descriptor)\\n    {\\n        descriptor.Authorize();\\n\\n        descriptor.Field(f => f.Address).Authorize();\\n    }\\n}\\n\"))), mdx(ExampleTabs.Schema, null, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sdl\"\n  }, \"type User @authorize {\\n  name: String!\\n  address: Address! @authorize\\n}\\n\")))), mdx(\"p\", null, \"Specified on a type the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@authorize\"), \" directive will be applied to each field of that type. Its authorization logic is executed once for each individual field, depending on whether it was selected by the requestor or not. If the directive is placed on an individual field, it overrules the one on the type.\"), mdx(\"p\", null, \"If we do not specify any arguments to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@authorize\"), \" directive, it will only enforce that the requestor is authenticated, nothing more. If he is not and tries to access an authorized field, a GraphQL error will be raised and the field result set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"null\"), \".\"), mdx(\"h2\", {\n    \"id\": \"roles\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#roles\",\n    \"aria-label\": \"roles permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"viewBox\": \"0 0 512 512\",\n    \"width\": \"16\",\n    \"height\": \"16\",\n    \"fill\": \"var(--heading-text-color)\"\n  }, \"\\n                        \", mdx(\"path\", {\n    parentName: \"svg\",\n    \"d\": \"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"\n  }), \"\\n                      \")), \"Roles\"), mdx(\"p\", null, \"Roles provide a very intuitive way of dividing our users into groups with different access rights.\"), mdx(\"p\", null, \"When building our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ClaimsPrincipal\"), \", we just have to add one or more role claims.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"claims.Add(new Claim(ClaimTypes.Role, \\\"Administrator\\\"));\\n\")), mdx(\"p\", null, \"We can then check whether an authenticated user has these role claims.\"), mdx(ExampleTabs, {\n    mdxType: \"ExampleTabs\"\n  }, mdx(ExampleTabs.Annotation, null, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"[Authorize(Roles = new [] { \\\"Guest\\\", \\\"Administrator\\\" })]\\npublic class User\\n{\\n    public string Name { get; set; }\\n\\n    [Authorize(Roles = new[] { \\\"Administrator\\\" })]\\n    public Address Address { get; set; }\\n}\\n\"))), mdx(ExampleTabs.Code, null, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"public class UserType : ObjectType<User>\\n{\\n    protected override Configure(IObjectTypeDescriptor<User> descriptor)\\n    {\\n        descriptor.Authorize(new[] { \\\"Guest\\\", \\\"Administrator\\\" });\\n\\n        descriptor.Field(t => t.Address).Authorize(new[] { \\\"Administrator\\\" });\\n    }\\n}\\n\"))), mdx(ExampleTabs.Schema, null, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sdl\"\n  }, \"type User @authorize(roles: [ \\\"Guest\\\", \\\"Administrator\\\" ]) {\\n  name: String!\\n  address: Address! @authorize(roles: \\\"Administrator\\\")\\n}\\n\")))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u26A0\\uFE0F Note: If multiple roles are specified, a user only has to match one of the specified roles, in order to be able to execute the resolver.\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.microsoft.com/aspnet/core/security/authorization/roles\"\n  }, \"Learn more about role-based authorization in ASP.NET Core\")), mdx(\"h2\", {\n    \"id\": \"policies\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#policies\",\n    \"aria-label\": \"policies permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"viewBox\": \"0 0 512 512\",\n    \"width\": \"16\",\n    \"height\": \"16\",\n    \"fill\": \"var(--heading-text-color)\"\n  }, \"\\n                        \", mdx(\"path\", {\n    parentName: \"svg\",\n    \"d\": \"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"\n  }), \"\\n                      \")), \"Policies\"), mdx(\"p\", null, \"Policies allow us to create richer validation logic and decouple the authorization rules from our GraphQL resolvers.\"), mdx(\"p\", null, \"A policy consists of an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.microsoft.com/aspnet/core/security/authorization/policies#requirements\"\n  }, \"IAuthorizationRequirement\"), \" and an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.microsoft.com/aspnet/core/security/authorization/policies#authorization-handlers\"\n  }, \"AuthorizationHandler\", \"<\", \"T\", \">\"), \".\"), mdx(\"p\", null, \"Once defined, we can register our policies like the following.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"public class Startup\\n{\\n    public void ConfigureServices(IServiceCollection services)\\n    {\\n        services.AddAuthorization(options =>\\n        {\\n            options.AddPolicy(\\\"AtLeast21\\\", policy =>\\n                policy.Requirements.Add(new MinimumAgeRequirement(21)));\\n\\n            options.AddPolicy(\\\"HasCountry\\\", policy =>\\n                policy.RequireAssertion(context =>\\n                    context.User.HasClaim(c => c.Type == ClaimTypes.Country)));\\n        });\\n\\n        services.AddSingleton<IAuthorizationHandler, MinimumAgeHandler>();\\n\\n        // Omitted code for brevity\\n\\n        services\\n            .AddGraphQLServer()\\n            .AddAuthorization()\\n            .AddQueryType<Query>();\\n    }\\n}\\n\")), mdx(\"p\", null, \"We can then use these policies to restrict access to our fields.\"), mdx(ExampleTabs, {\n    mdxType: \"ExampleTabs\"\n  }, mdx(ExampleTabs.Annotation, null, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"[Authorize(Policy = \\\"AllEmployees\\\")]\\npublic class User\\n{\\n    public string Name { get; }\\n\\n    [Authorize(Policy = \\\"SalesDepartment\\\")]\\n    public Address Address { get; }\\n}\\n\"))), mdx(ExampleTabs.Code, null, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"public class UserType : ObjectType<User>\\n{\\n    protected override Configure(IObjectTypeDescriptor<User> descriptor)\\n    {\\n        descriptor.Authorize(\\\"AllEmployees\\\");\\n\\n        descriptor.Field(t => t.Address).Authorize(\\\"SalesDepartment\\\");\\n    }\\n}\\n\"))), mdx(ExampleTabs.Schema, null, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sdl\"\n  }, \"type User @authorize(policy: \\\"AllEmployees\\\") {\\n  name: String!\\n  address: Address! @authorize(policy: \\\"SalesDepartment\\\")\\n}\\n\")))), mdx(\"p\", null, \"This essentially uses the provided policy and runs it against the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ClaimsPrinciple\"), \" that is associated with the current request.\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@authorize\"), \" directive is also repeatable, which means that we are able to chain the directive and a user is only allowed to access the field if they meet all of the specified conditions.\"), mdx(ExampleTabs, {\n    mdxType: \"ExampleTabs\"\n  }, mdx(ExampleTabs.Annotation, null, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"[Authorize(Policy = \\\"AtLeast21\\\")]\\n[Authorize(Policy = \\\"HasCountry\\\")]\\npublic class User\\n{\\n    public string Name { get; set; }\\n}\\n\"))), mdx(ExampleTabs.Code, null, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"public class UserType : ObjectType<User>\\n{\\n    protected override Configure(IObjectTypeDescriptor<User> descriptor)\\n    {\\n        descriptor\\n            .Authorize(\\\"AtLeast21\\\")\\n            .Authorize(\\\"HasCountry\\\");\\n    }\\n}\\n\"))), mdx(ExampleTabs.Schema, null, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sdl\"\n  }, \"type User\\n    @authorize(policy: \\\"AtLeast21\\\")\\n    @authorize(policy: \\\"HasCountry\\\") {\\n    name: String!\\n}\\n\")))), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.microsoft.com/aspnet/core/security/authorization/policies\"\n  }, \"Learn more about policy-based authorization in ASP.NET Core\")), mdx(\"h3\", {\n    \"id\": \"iresolvercontext-within-an-authorizationhandler\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#iresolvercontext-within-an-authorizationhandler\",\n    \"aria-label\": \"iresolvercontext within an authorizationhandler permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"viewBox\": \"0 0 512 512\",\n    \"width\": \"16\",\n    \"height\": \"16\",\n    \"fill\": \"var(--heading-text-color)\"\n  }, \"\\n                        \", mdx(\"path\", {\n    parentName: \"svg\",\n    \"d\": \"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"\n  }), \"\\n                      \")), \"IResolverContext within an AuthorizationHandler\"), mdx(\"p\", null, \"If we need to, we can also access the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IResolverContext\"), \" in our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AuthorizationHandler\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"public class MinimumAgeHandler\\n    : AuthorizationHandler<MinimumAgeRequirement, IResolverContext>\\n{\\n    protected override Task HandleRequirementAsync(\\n        AuthorizationHandlerContext context,\\n        MinimumAgeRequirement requirement,\\n        IResolverContext resolverContext)\\n    {\\n        // Omitted code for brevity\\n    }\\n}\\n\")), mdx(\"h1\", {\n    \"id\": \"global-authorization\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#global-authorization\",\n    \"aria-label\": \"global authorization permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"viewBox\": \"0 0 512 512\",\n    \"width\": \"16\",\n    \"height\": \"16\",\n    \"fill\": \"var(--heading-text-color)\"\n  }, \"\\n                        \", mdx(\"path\", {\n    parentName: \"svg\",\n    \"d\": \"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"\n  }), \"\\n                      \")), \"Global authorization\"), mdx(\"p\", null, \"We can also apply authorization to our entire GraphQL endpoint. To do this, simply call \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RequireAuthorization()\"), \" on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GraphQLEndpointConventionBuilder\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"public class Startup\\n{\\n    public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\\n    {\\n        app.UseRouting();\\n\\n        app.UseAuthentication();\\n        app.UseAuthorization();\\n\\n        app.UseEndpoints(endpoints =>\\n        {\\n            endpoints.MapGraphQL().RequireAuthorization();\\n        });\\n    }\\n}\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u26A0\\uFE0F Note: This will also block unauthenticated access to GraphQL IDEs hosted on that endpoint, like Banana Cake Pop.\")), mdx(\"p\", null, \"This method also accepts \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#roles\"\n  }, \"roles\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#policies\"\n  }, \"policies\"), \" as arguments, similiar to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Authorize\"), \" attribute / methods.\"), mdx(\"h1\", {\n    \"id\": \"modifying-the-claimsprincipal\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h1\",\n    \"href\": \"#modifying-the-claimsprincipal\",\n    \"aria-label\": \"modifying the claimsprincipal permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"viewBox\": \"0 0 512 512\",\n    \"width\": \"16\",\n    \"height\": \"16\",\n    \"fill\": \"var(--heading-text-color)\"\n  }, \"\\n                        \", mdx(\"path\", {\n    parentName: \"svg\",\n    \"d\": \"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"\n  }), \"\\n                      \")), \"Modifying the ClaimsPrincipal\"), mdx(\"p\", null, \"Sometimes we might want to add additional \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.microsoft.com/dotnet/api/system.security.claims.claimsidentity\"\n  }, \"ClaimsIdentity\"), \" to our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ClaimsPrincipal\"), \" or modify the default identity.\"), mdx(\"p\", null, \"Hot Chocolate provides the ability to register an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IHttpRequestInterceptor\"), \", allowing us to modify the incoming HTTP request, before it is passed along to the execution engine.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"public class HttpRequestInterceptor : DefaultHttpRequestInterceptor\\n{\\n    public override ValueTask OnCreateAsync(HttpContext context,\\n        IRequestExecutor requestExecutor, IQueryRequestBuilder requestBuilder,\\n        CancellationToken cancellationToken)\\n    {\\n        var identity = new ClaimsIdentity();\\n        identity.AddClaim(new Claim(ClaimTypes.Country, \\\"us\\\"));\\n\\n        context.User.AddIdentity(identity);\\n\\n        return base.OnCreateAsync(context, requestExecutor, requestBuilder,\\n            cancellationToken);\\n    }\\n}\\n\\npublic class Startup\\n{\\n    public void ConfigureServices(IServiceCollection services)\\n    {\\n        services\\n            .AddGraphQLServer()\\n            .AddHttpRequestInterceptor<HttpRequestInterceptor>();\\n\\n        // Omitted code for brevity\\n    }\\n}\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IHttpRequestInterceptor\"), \" can be used for many other things as well, not just for modifying the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ClaimsPrincipal\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":1,"value":"Setup"},{"depth":1,"value":"Usage"},{"depth":2,"value":"Roles"},{"depth":2,"value":"Policies"},{"depth":3,"value":"IResolverContext within an AuthorizationHandler"},{"depth":1,"value":"Global authorization"},{"depth":1,"value":"Modifying the ClaimsPrincipal"}]}},"site":{"siteMetadata":{"siteUrl":"https://chillicream.com","repositoryUrl":"https://github.com/ChilliCream/hotchocolate","tools":{"slack":"https://bit.ly/joinchilli"}}},"config":{"products":[{"path":"hotchocolate","title":"Hot Chocolate","description":"Build your own thin GraphQL API layer on top of any resource.","versions":[{"path":"","title":"v11 (latest)","items":[{"path":"index","title":"Introduction","items":null},{"path":"get-started","title":"Get Started","items":null},{"path":"defining-a-schema","title":"Defining a schema","items":[{"path":"index","title":"Overview"},{"path":"queries","title":"Queries"},{"path":"mutations","title":"Mutations"},{"path":"subscriptions","title":"Subscriptions"},{"path":"object-types","title":"Object Types"},{"path":"scalars","title":"Scalars"},{"path":"arguments","title":"Arguments"},{"path":"input-object-types","title":"Input Object Types"},{"path":"lists","title":"Lists"},{"path":"non-null","title":"Non-Null"},{"path":"enums","title":"Enums"},{"path":"interfaces","title":"Interfaces"},{"path":"unions","title":"Unions"},{"path":"extending-types","title":"Extending Types"},{"path":"directives","title":"Directives"},{"path":"documentation","title":"Documentation"},{"path":"versioning","title":"Versioning"}]},{"path":"fetching-data","title":"Fetching data","items":[{"path":"index","title":"Resolver"},{"path":"fetching-from-databases","title":"Fetching from Databases"},{"path":"fetching-from-rest","title":"Fetching from REST"},{"path":"dataloader","title":"DataLoader"},{"path":"pagination","title":"Pagination"},{"path":"filtering","title":"Filtering"},{"path":"sorting","title":"Sorting"},{"path":"projections","title":"Projections"}]},{"path":"distributed-schema","title":"Distributed Schemas","items":[{"path":"index","title":"Overview"},{"path":"schema-stitching","title":"Schema Stitching"},{"path":"schema-federations","title":"Schema Federations"},{"path":"schema-configuration","title":"Schema Configuration"}]},{"path":"integrations","title":"Integrations","items":[{"path":"index","title":"Overview"},{"path":"entity-framework","title":"Entity Framework"},{"path":"spatial-data","title":"Spatial Data"},{"path":"mongodb","title":"MongoDB"}]},{"path":"performance","title":"Performance","items":[{"path":"index","title":"Overview"},{"path":"persisted-queries","title":"Persisted queries"},{"path":"automatic-persisted-queries","title":"Automatic persisted queries"}]},{"path":"security","title":"Security","items":[{"path":"index","title":"Overview"},{"path":"authentication","title":"Authentication"},{"path":"authorization","title":"Authorization"}]},{"path":"api-reference","title":"API Reference","items":[{"path":"index","title":"Overview"},{"path":"custom-attributes","title":"Custom Attributes"},{"path":"language","title":"Language"},{"path":"extending-filtering","title":"Extending Filtering"},{"path":"visitors","title":"Visitors"},{"path":"aspnetcore","title":"ASP.NET Core"},{"path":"dependency-injection","title":"Dependency Injection"},{"path":"executable","title":"Executable"},{"path":"apollo-tracing","title":"Apollo Tracing"},{"path":"migrate-from-10-to-11","title":"Migrate from 10.5 to 11.0"}]}]},{"path":"v10","title":"v10 (previous)","items":[{"path":"index","title":"Introduction","items":null},{"path":"code-first","title":"Code-First","items":null},{"path":"schema-first","title":"Schema-First","items":null},{"path":"schema","title":"Schema","items":[{"path":"index","title":"Schema"},{"path":"object-type","title":"Object Type"},{"path":"interface-type","title":"Interface Type"},{"path":"union-type","title":"Union Type"},{"path":"input-object-type","title":"Input Object Type"},{"path":"enum-type","title":"Enum Type"},{"path":"descriptions","title":"Schema Descriptions"},{"path":"custom-scalar-types","title":"Scalar Type Support"},{"path":"descriptor-attributes","title":"Descriptor Attributes"},{"path":"extending-types","title":"Custom Base Classes"},{"path":"directives","title":"Directives"},{"path":"resolvers","title":"Resolvers"},{"path":"relay","title":"Relay"},{"path":"conventions","title":"Conventions"},{"path":"options","title":"Schema Options"}]},{"path":"data-fetching","title":"Data Fetching","items":[{"path":"index","title":"Data Loaders"},{"path":"pagination","title":"Pagination"},{"path":"filters","title":"Filters"}]},{"path":"security","title":"Security","items":[{"path":"index","title":"Authorization"},{"path":"security","title":"Security"}]},{"path":"execution-engine","title":"Execution Engine","items":[{"path":"index","title":"Middleware"},{"path":"validation-rules","title":"Validation Rules"},{"path":"instrumentation","title":"Instrumentation"},{"path":"apollo-tracing","title":"Apollo Tracing"},{"path":"batching","title":"Batching"},{"path":"persisted-queries","title":"Persisted Queries"},{"path":"custom-context-data","title":"Custom Context Data"},{"path":"subscriptions","title":"Subscriptions"},{"path":"type-conversion","title":"Type Conversion"},{"path":"error-filter","title":"Error Filter"},{"path":"execution-options","title":"Execution Options"}]},{"path":"server","title":"Server","items":[{"path":"index","title":"ASP.NET"},{"path":"dependency-injection","title":"Dependency Injection"}]},{"path":"stitching","title":"Schema Stitching","items":null},{"path":"tooling","title":"Tooling","items":null},{"path":"advanced","title":"Advanced","items":[{"path":"index","title":"Parser"},{"path":"dotnet-cli","title":".NET CLI"}]},{"path":"tutorials","title":"Tutorials","items":[{"path":"index","title":"Entity Framework"}]},{"path":"examples","title":"Examples","items":[{"path":"index","title":"Star Wars"},{"path":"slack-clone","title":"Slack Clone"},{"path":"other-examples","title":"Other Examples"}]}]}]},{"path":"bananacakepop","title":"Banana Cake Pop","description":"Use this GUI to get deep insights from any GraphQL API.","versions":[{"path":"","title":"v1 (preview)","items":[{"path":"index","title":"Introduction","items":null}]}]},{"path":"strawberryshake","title":"Strawberry Shake","description":"The only GraphQL client you will every need in the .NET ecosystem.","versions":[{"path":"","title":"v11 (preview)","items":[{"path":"index","title":"Introduction","items":null},{"path":"get-started","title":"Get Started","items":[{"path":"index","title":"Blazor"},{"path":"xamarin","title":"Xamarin"},{"path":"console","title":"Console"}]},{"path":"subscriptions","title":"Subscriptions","items":null},{"path":"tooling","title":"Tooling / CLI","items":null},{"path":"caching","title":"Caching","items":[{"path":"index","title":"Overview"},{"path":"entities","title":"Entities"},{"path":"invalidation","title":"Invalidation"}]},{"path":"performance","title":"Performance","items":[{"path":"index","title":"Overview"},{"path":"persisted-queries","title":"Persisted Queries"},{"path":"persisted-state","title":"Persisted State"}]},{"path":"networking","title":"Networking","items":[{"path":"index","title":"Protocols"},{"path":"authentication","title":"Authentication"}]},{"path":"scalars","title":"Scalars","items":null}]}]},{"path":"greendonut","title":"Green Donut","description":"Configure data loaders and caching for GraphQL endpoints.","versions":[{"path":"","title":"v11 (latest)","items":[{"path":"index","title":"Introduction","items":null}]},{"path":"v10","title":"v10 (previous)","items":[{"path":"index","title":"Introduction","items":null},{"path":"installation","title":"Installation","items":null},{"path":"usage","title":"Usage","items":null},{"path":"api","title":"API","items":null},{"path":"advanced-concepts","title":"Advanced Concepts","items":[{"path":"index","title":"Custom DataLoader"},{"path":"diagnostics","title":"Diagnostic Events"}]}]}]}]}},"pageContext":{"originPath":"hotchocolate/security/authorization.md"}},"staticQueryHashes":["2890364758","3416206942","4218812017"]}