{"componentChunkName":"component---src-templates-doc-page-template-tsx","path":"/docs/hotchocolate/distributed-schema","result":{"data":{"file":{"childMdx":{"fields":{"slug":"/hotchocolate/distributed-schema/"},"frontmatter":{"title":"Distributed Schemas"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Distributed Schemas\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The strongly typed nature of a GraphQL schema makes it ideal for distribution.\\nIt is possible to have specialized services that expose a GraphQL schema and bundle them together on a gateway.\\nThere are two common approaches to schema distribution: schema stitching and federated schemas.\"), mdx(\"p\", null, \"Both approaches allow us to integrate services into one schema by folding types into one another and even renaming or removing parts.\\nYou can also extend types and delegate resolvers to a specific backend service.\"), mdx(\"p\", null, \"With this, we can create a consistent GraphQL schema that hides the implementation details of our backend services and provides the consumer of our endpoint with the capability to fetch the data they need with one call, no under- or over-fetching and most importantly no repeated fetching\"), mdx(\"p\", null, \"Every HotChocolate GraphQL server can be used for schema stitching or federations.\\nYou can also use both approaches on the same gateway.\\nYou can for example stitch third-party services and use federations for domain services.\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Schema of the Person Service\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sdl\"\n  }), \"type Query {\\n  persons: Person\\n}\\n\\ntype Person {\\n  id: ID!\\n  name: String!\\n}\\n\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Schema of the Address Service\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sdl\"\n  }), \"type Query {\\n  addressOfPerson(persondId: ID!): Address\\n}\\n\\ntype Address {\\n  street: String!\\n  city: String!\\n}\\n\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Gateway Service\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sdl\"\n  }), \"type Query {\\n  persons: Person\\n}\\n\\ntype Person {\\n  id: ID!\\n  name: String!\\n  address: Address\\n}\\n\\ntype Address {\\n  street: String!\\n  city: String!\\n}\\n\")), mdx(\"h1\", null, \"Schema Stitching\"), mdx(\"p\", null, \"In the scenario of schema stitching, the configuration of the gateway schema is on the gateway itself.\\nThe gateway pulls the schema from the downstream services and can be extended with SDL.\\nThe benefit of this approach is that no configuration on the downstream services is needed.\\nWith this approach, it is possible to also stitch thrid party GraphQL services.\"), mdx(\"p\", null, \"Gateway:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sdl\"\n  }), \"extend type Person {\\n  address: Address @delegate(schema: \\\"Address\\\", path:\\\"addressOfPerson(personId: $fields:Id\\\"))\\n}\\n\")), mdx(\"div\", {\n    \"className\": \"mermaid\",\n    \"data-processed\": \"true\"\n  }, mdx(\"svg\", _extends({\n    parentName: \"div\"\n  }, {\n    \"id\": \"mermaid-1616539609880\",\n    \"width\": \"100%\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"xmlnsXLink\": \"http://www.w3.org/1999/xlink\",\n    \"height\": \"142\",\n    \"style\": {\n      \"maxWidth\": \"215.40625px\"\n    },\n    \"viewBox\": \"0 0 215.40625 142\"\n  }), mdx(\"style\", {\n    parentName: \"svg\"\n  }, \"#mermaid-1616539609880{font-family:sans-serif;font-size:16px;fill:#333;}#mermaid-1616539609880 .error-icon{fill:#552222;}#mermaid-1616539609880 .error-text{fill:#552222;stroke:#552222;}#mermaid-1616539609880 .edge-thickness-normal{stroke-width:2px;}#mermaid-1616539609880 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-1616539609880 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-1616539609880 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-1616539609880 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-1616539609880 .marker{fill:#333333;}#mermaid-1616539609880 .marker.cross{stroke:#333333;}#mermaid-1616539609880 svg{font-family:sans-serif;font-size:16px;}#mermaid-1616539609880 .label{font-family:sans-serif;color:#333;}#mermaid-1616539609880 .label text{fill:#333;}#mermaid-1616539609880 .node rect,#mermaid-1616539609880 .node circle,#mermaid-1616539609880 .node ellipse,#mermaid-1616539609880 .node polygon,#mermaid-1616539609880 .node path{fill:#ECECFF;stroke:#9370DB;stroke-width:1px;}#mermaid-1616539609880 .node .label{text-align:center;}#mermaid-1616539609880 .node.clickable{cursor:pointer;}#mermaid-1616539609880 .arrowheadPath{fill:#333333;}#mermaid-1616539609880 .edgePath .path{stroke:#333333;stroke-width:1.5px;}#mermaid-1616539609880 .flowchart-link{stroke:#333333;fill:none;}#mermaid-1616539609880 .edgeLabel{background-color:#e8e8e8;text-align:center;}#mermaid-1616539609880 .edgeLabel rect{opacity:0.5;background-color:#e8e8e8;fill:#e8e8e8;}#mermaid-1616539609880 .cluster rect{fill:#ffffde;stroke:#aaaa33;stroke-width:1px;}#mermaid-1616539609880 .cluster text{fill:#333;}#mermaid-1616539609880 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:sans-serif;font-size:12px;background:hsl(80,100%,96.2745098039%);border:1px solid #aaaa33;border-radius:2px;pointer-events:none;z-index:100;}#mermaid-1616539609880:root{--mermaid-font-family:sans-serif;}#mermaid-1616539609880 flowchart{fill:apa;}\"), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"output\"\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"clusters\"\n  })), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"edgePaths\"\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"edgePath LS-Gateway LE-Address\",\n    \"id\": \"L-Gateway-Address\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"path\",\n    \"d\": \"M82.77858664772728,46L47.3515625,71L47.3515625,96\",\n    \"markerEnd\": \"url(#arrowhead8)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"defs\", {\n    parentName: \"g\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"arrowhead8\",\n    \"viewBox\": \"0 0 10 10\",\n    \"refX\": \"9\",\n    \"refY\": \"5\",\n    \"markerUnits\": \"strokeWidth\",\n    \"markerWidth\": \"8\",\n    \"markerHeight\": \"6\",\n    \"orient\": \"auto\"\n  }), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"d\": \"M 0 0 L 10 5 L 0 10 z\",\n    \"className\": \"arrowheadPath\",\n    \"style\": {\n      \"strokeWidth\": \"1\",\n      \"strokeDasharray\": \"1, 0\"\n    }\n  }))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"edgePath LS-Gateway LE-Person\",\n    \"id\": \"L-Gateway-Person\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"path\",\n    \"d\": \"M136.62766335227272,46L172.0546875,71L172.0546875,96\",\n    \"markerEnd\": \"url(#arrowhead9)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"defs\", {\n    parentName: \"g\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"arrowhead9\",\n    \"viewBox\": \"0 0 10 10\",\n    \"refX\": \"9\",\n    \"refY\": \"5\",\n    \"markerUnits\": \"strokeWidth\",\n    \"markerWidth\": \"8\",\n    \"markerHeight\": \"6\",\n    \"orient\": \"auto\"\n  }), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"d\": \"M 0 0 L 10 5 L 0 10 z\",\n    \"className\": \"arrowheadPath\",\n    \"style\": {\n      \"strokeWidth\": \"1\",\n      \"strokeDasharray\": \"1, 0\"\n    }\n  })))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"edgeLabels\"\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"edgeLabel\",\n    \"transform\": \"\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"transform\": \"translate(0,0)\",\n    \"className\": \"label\"\n  }), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"width\": \"0\",\n    \"height\": \"0\"\n  })), mdx(\"foreignObject\", _extends({\n    parentName: \"g\"\n  }, {\n    \"width\": \"0\",\n    \"height\": \"0\"\n  }), mdx(\"div\", _extends({\n    parentName: \"foreignObject\"\n  }, {\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"div\"\n  }, {\n    \"id\": \"L-L-Gateway-Address\",\n    \"className\": \"edgeLabel L-LS-Gateway' L-LE-Address\"\n  })))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"edgeLabel\",\n    \"transform\": \"\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"transform\": \"translate(0,0)\",\n    \"className\": \"label\"\n  }), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"width\": \"0\",\n    \"height\": \"0\"\n  })), mdx(\"foreignObject\", _extends({\n    parentName: \"g\"\n  }, {\n    \"width\": \"0\",\n    \"height\": \"0\"\n  }), mdx(\"div\", _extends({\n    parentName: \"foreignObject\"\n  }, {\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"div\"\n  }, {\n    \"id\": \"L-L-Gateway-Person\",\n    \"className\": \"edgeLabel L-LS-Gateway' L-LE-Person\"\n  }))))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"nodes\"\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"node default\",\n    \"id\": \"flowchart-Gateway-4\",\n    \"transform\": \"translate(109.703125,27)\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"x\": \"-41.5703125\",\n    \"y\": \"-19\",\n    \"width\": \"83.140625\",\n    \"height\": \"38\",\n    \"className\": \"label-container\"\n  })), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"label\",\n    \"transform\": \"translate(0,0)\"\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"transform\": \"translate(-31.5703125,-9)\"\n  }), mdx(\"foreignObject\", _extends({\n    parentName: \"g\"\n  }, {\n    \"width\": \"63.140625\",\n    \"height\": \"18\"\n  }), mdx(\"div\", _extends({\n    parentName: \"foreignObject\"\n  }, {\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }), \"Gateway\"))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"node default\",\n    \"id\": \"flowchart-Address-5\",\n    \"transform\": \"translate(47.3515625,115)\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"x\": \"-39.3515625\",\n    \"y\": \"-19\",\n    \"width\": \"78.703125\",\n    \"height\": \"38\",\n    \"className\": \"label-container\"\n  })), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"label\",\n    \"transform\": \"translate(0,0)\"\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"transform\": \"translate(-29.3515625,-9)\"\n  }), mdx(\"foreignObject\", _extends({\n    parentName: \"g\"\n  }, {\n    \"width\": \"58.703125\",\n    \"height\": \"18\"\n  }), mdx(\"div\", _extends({\n    parentName: \"foreignObject\"\n  }, {\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }), \"Address\"))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"node default\",\n    \"id\": \"flowchart-Person-7\",\n    \"transform\": \"translate(172.0546875,115)\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"x\": \"-35.3515625\",\n    \"y\": \"-19\",\n    \"width\": \"70.703125\",\n    \"height\": \"38\",\n    \"className\": \"label-container\"\n  })), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"label\",\n    \"transform\": \"translate(0,0)\"\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"transform\": \"translate(-25.3515625,-9)\"\n  }), mdx(\"foreignObject\", _extends({\n    parentName: \"g\"\n  }, {\n    \"width\": \"50.703125\",\n    \"height\": \"18\"\n  }), mdx(\"div\", _extends({\n    parentName: \"foreignObject\"\n  }, {\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }), \"Person\")))))))))), mdx(\"h1\", null, \"Federated Schema\"), mdx(\"p\", null, \"The major difference between schema federation and schema stitching is where the extensions are stored.\\nIn the federated approach, the schema extensions are defined on the federated service.\\nThe domain services push the schema on a cache (like Redis).\\nThe gateway is subscribed to changed from this cache and can hot reload the schema if the configuration of a domain service changes.\\nIt is also possible to set up federations in a pull setup.\\nIn this setup, the downstream services expose a field on their schema to fetch the stitching information.\\nThe gateway then fetches the federation information from the downstream service on startup.\\nWith this setup, you do not need a Redis instance, but lose the ability to hot-reload the schema on a change of the downstream service.\"), mdx(\"p\", null, \"The benefit of this approach is that the domain services define where they extend the Gateway schema.\\nThis might first seem odd and you could argue that the domain service should not have any knowledge of the gateway schema.\\nThough in practice many companies see this as a feature rather than a limitation.\\nAs the gateway schema grows, the configuration of the schema on the gateway with schema stitching will become more and more complex.\\nA change to a downstream service requires also a change to the gateway. This makes development and also deployment a lot more complex.\\nIf teams have sovereignty over different domain services, these teams can work completely independently when you use federations.\"), mdx(\"p\", null, \"Address Service:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sdl\"\n  }), \"extend type Person {\\n  address: Address @delegate(schema: \\\"Address\\\", path:\\\"addressOfPerson(personId: $fields:Id\\\"))\\n}\\n\")), mdx(\"div\", {\n    \"className\": \"mermaid\",\n    \"data-processed\": \"true\"\n  }, mdx(\"svg\", _extends({\n    parentName: \"div\"\n  }, {\n    \"id\": \"mermaid-1616539609892\",\n    \"width\": \"100%\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"xmlnsXLink\": \"http://www.w3.org/1999/xlink\",\n    \"height\": \"230\",\n    \"style\": {\n      \"maxWidth\": \"250.40625px\"\n    },\n    \"viewBox\": \"0 0 250.40625 230\"\n  }), mdx(\"style\", {\n    parentName: \"svg\"\n  }, \"#mermaid-1616539609892{font-family:sans-serif;font-size:16px;fill:#333;}#mermaid-1616539609892 .error-icon{fill:#552222;}#mermaid-1616539609892 .error-text{fill:#552222;stroke:#552222;}#mermaid-1616539609892 .edge-thickness-normal{stroke-width:2px;}#mermaid-1616539609892 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-1616539609892 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-1616539609892 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-1616539609892 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-1616539609892 .marker{fill:#333333;}#mermaid-1616539609892 .marker.cross{stroke:#333333;}#mermaid-1616539609892 svg{font-family:sans-serif;font-size:16px;}#mermaid-1616539609892 .label{font-family:sans-serif;color:#333;}#mermaid-1616539609892 .label text{fill:#333;}#mermaid-1616539609892 .node rect,#mermaid-1616539609892 .node circle,#mermaid-1616539609892 .node ellipse,#mermaid-1616539609892 .node polygon,#mermaid-1616539609892 .node path{fill:#ECECFF;stroke:#9370DB;stroke-width:1px;}#mermaid-1616539609892 .node .label{text-align:center;}#mermaid-1616539609892 .node.clickable{cursor:pointer;}#mermaid-1616539609892 .arrowheadPath{fill:#333333;}#mermaid-1616539609892 .edgePath .path{stroke:#333333;stroke-width:1.5px;}#mermaid-1616539609892 .flowchart-link{stroke:#333333;fill:none;}#mermaid-1616539609892 .edgeLabel{background-color:#e8e8e8;text-align:center;}#mermaid-1616539609892 .edgeLabel rect{opacity:0.5;background-color:#e8e8e8;fill:#e8e8e8;}#mermaid-1616539609892 .cluster rect{fill:#ffffde;stroke:#aaaa33;stroke-width:1px;}#mermaid-1616539609892 .cluster text{fill:#333;}#mermaid-1616539609892 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:sans-serif;font-size:12px;background:hsl(80,100%,96.2745098039%);border:1px solid #aaaa33;border-radius:2px;pointer-events:none;z-index:100;}#mermaid-1616539609892:root{--mermaid-font-family:sans-serif;}#mermaid-1616539609892 flowchart{fill:apa;}\"), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"output\"\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"clusters\"\n  })), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"edgePaths\"\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"edgePath LS-Gateway LE-Address\",\n    \"id\": \"L-Gateway-Address\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"path\",\n    \"d\": \"M130.484375,41.66758551559955L47.3515625,71L47.3515625,96\",\n    \"markerEnd\": \"url(#arrowhead18)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"defs\", {\n    parentName: \"g\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"arrowhead18\",\n    \"viewBox\": \"0 0 10 10\",\n    \"refX\": \"9\",\n    \"refY\": \"5\",\n    \"markerUnits\": \"strokeWidth\",\n    \"markerWidth\": \"8\",\n    \"markerHeight\": \"6\",\n    \"orient\": \"auto\"\n  }), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"d\": \"M 0 0 L 10 5 L 0 10 z\",\n    \"className\": \"arrowheadPath\",\n    \"style\": {\n      \"strokeWidth\": \"1\",\n      \"strokeDasharray\": \"1, 0\"\n    }\n  }))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"edgePath LS-Gateway LE-Person\",\n    \"id\": \"L-Gateway-Person\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"path\",\n    \"d\": \"M172.0546875,46L172.0546875,71L172.0546875,96\",\n    \"markerEnd\": \"url(#arrowhead19)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"defs\", {\n    parentName: \"g\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"arrowhead19\",\n    \"viewBox\": \"0 0 10 10\",\n    \"refX\": \"9\",\n    \"refY\": \"5\",\n    \"markerUnits\": \"strokeWidth\",\n    \"markerWidth\": \"8\",\n    \"markerHeight\": \"6\",\n    \"orient\": \"auto\"\n  }), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"d\": \"M 0 0 L 10 5 L 0 10 z\",\n    \"className\": \"arrowheadPath\",\n    \"style\": {\n      \"strokeWidth\": \"1\",\n      \"strokeDasharray\": \"1, 0\"\n    }\n  }))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"edgePath LS-Address LE-Redis\",\n    \"id\": \"L-Address-Redis\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"path\",\n    \"d\": \"M47.3515625,134L47.3515625,159L141.6015625,192.25498057887484\",\n    \"markerEnd\": \"url(#arrowhead20)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"defs\", {\n    parentName: \"g\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"arrowhead20\",\n    \"viewBox\": \"0 0 10 10\",\n    \"refX\": \"9\",\n    \"refY\": \"5\",\n    \"markerUnits\": \"strokeWidth\",\n    \"markerWidth\": \"8\",\n    \"markerHeight\": \"6\",\n    \"orient\": \"auto\"\n  }), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"d\": \"M 0 0 L 10 5 L 0 10 z\",\n    \"className\": \"arrowheadPath\",\n    \"style\": {\n      \"strokeWidth\": \"1\",\n      \"strokeDasharray\": \"1, 0\"\n    }\n  }))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"edgePath LS-Person LE-Redis\",\n    \"id\": \"L-Person-Redis\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"path\",\n    \"d\": \"M172.0546875,134L172.0546875,159L172.0546875,184\",\n    \"markerEnd\": \"url(#arrowhead21)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"defs\", {\n    parentName: \"g\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"arrowhead21\",\n    \"viewBox\": \"0 0 10 10\",\n    \"refX\": \"9\",\n    \"refY\": \"5\",\n    \"markerUnits\": \"strokeWidth\",\n    \"markerWidth\": \"8\",\n    \"markerHeight\": \"6\",\n    \"orient\": \"auto\"\n  }), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"d\": \"M 0 0 L 10 5 L 0 10 z\",\n    \"className\": \"arrowheadPath\",\n    \"style\": {\n      \"strokeWidth\": \"1\",\n      \"strokeDasharray\": \"1, 0\"\n    }\n  }))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"edgePath LS-Redis LE-Gateway\",\n    \"id\": \"L-Redis-Gateway\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"path\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"path\",\n    \"d\": \"M202.4337713068182,184L242.40625,159L242.40625,115L242.40625,71L202.4337713068182,46\",\n    \"markerEnd\": \"url(#arrowhead22)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"defs\", {\n    parentName: \"g\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"arrowhead22\",\n    \"viewBox\": \"0 0 10 10\",\n    \"refX\": \"9\",\n    \"refY\": \"5\",\n    \"markerUnits\": \"strokeWidth\",\n    \"markerWidth\": \"8\",\n    \"markerHeight\": \"6\",\n    \"orient\": \"auto\"\n  }), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"d\": \"M 0 0 L 10 5 L 0 10 z\",\n    \"className\": \"arrowheadPath\",\n    \"style\": {\n      \"strokeWidth\": \"1\",\n      \"strokeDasharray\": \"1, 0\"\n    }\n  })))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"edgeLabels\"\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"edgeLabel\",\n    \"transform\": \"\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"transform\": \"translate(0,0)\",\n    \"className\": \"label\"\n  }), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"width\": \"0\",\n    \"height\": \"0\"\n  })), mdx(\"foreignObject\", _extends({\n    parentName: \"g\"\n  }, {\n    \"width\": \"0\",\n    \"height\": \"0\"\n  }), mdx(\"div\", _extends({\n    parentName: \"foreignObject\"\n  }, {\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"div\"\n  }, {\n    \"id\": \"L-L-Gateway-Address\",\n    \"className\": \"edgeLabel L-LS-Gateway' L-LE-Address\"\n  })))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"edgeLabel\",\n    \"transform\": \"\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"transform\": \"translate(0,0)\",\n    \"className\": \"label\"\n  }), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"width\": \"0\",\n    \"height\": \"0\"\n  })), mdx(\"foreignObject\", _extends({\n    parentName: \"g\"\n  }, {\n    \"width\": \"0\",\n    \"height\": \"0\"\n  }), mdx(\"div\", _extends({\n    parentName: \"foreignObject\"\n  }, {\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"div\"\n  }, {\n    \"id\": \"L-L-Gateway-Person\",\n    \"className\": \"edgeLabel L-LS-Gateway' L-LE-Person\"\n  })))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"edgeLabel\",\n    \"transform\": \"\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"transform\": \"translate(0,0)\",\n    \"className\": \"label\"\n  }), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"width\": \"0\",\n    \"height\": \"0\"\n  })), mdx(\"foreignObject\", _extends({\n    parentName: \"g\"\n  }, {\n    \"width\": \"0\",\n    \"height\": \"0\"\n  }), mdx(\"div\", _extends({\n    parentName: \"foreignObject\"\n  }, {\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"div\"\n  }, {\n    \"id\": \"L-L-Address-Redis\",\n    \"className\": \"edgeLabel L-LS-Address' L-LE-Redis\"\n  })))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"edgeLabel\",\n    \"transform\": \"\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"transform\": \"translate(0,0)\",\n    \"className\": \"label\"\n  }), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"width\": \"0\",\n    \"height\": \"0\"\n  })), mdx(\"foreignObject\", _extends({\n    parentName: \"g\"\n  }, {\n    \"width\": \"0\",\n    \"height\": \"0\"\n  }), mdx(\"div\", _extends({\n    parentName: \"foreignObject\"\n  }, {\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"div\"\n  }, {\n    \"id\": \"L-L-Person-Redis\",\n    \"className\": \"edgeLabel L-LS-Person' L-LE-Redis\"\n  })))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"edgeLabel\",\n    \"transform\": \"\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"transform\": \"translate(0,0)\",\n    \"className\": \"label\"\n  }), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"width\": \"0\",\n    \"height\": \"0\"\n  })), mdx(\"foreignObject\", _extends({\n    parentName: \"g\"\n  }, {\n    \"width\": \"0\",\n    \"height\": \"0\"\n  }), mdx(\"div\", _extends({\n    parentName: \"foreignObject\"\n  }, {\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"div\"\n  }, {\n    \"id\": \"L-L-Redis-Gateway\",\n    \"className\": \"edgeLabel L-LS-Redis' L-LE-Gateway\"\n  }))))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"nodes\"\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"node default\",\n    \"id\": \"flowchart-Gateway-10\",\n    \"transform\": \"translate(172.0546875,27)\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"x\": \"-41.5703125\",\n    \"y\": \"-19\",\n    \"width\": \"83.140625\",\n    \"height\": \"38\",\n    \"className\": \"label-container\"\n  })), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"label\",\n    \"transform\": \"translate(0,0)\"\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"transform\": \"translate(-31.5703125,-9)\"\n  }), mdx(\"foreignObject\", _extends({\n    parentName: \"g\"\n  }, {\n    \"width\": \"63.140625\",\n    \"height\": \"18\"\n  }), mdx(\"div\", _extends({\n    parentName: \"foreignObject\"\n  }, {\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }), \"Gateway\"))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"node default\",\n    \"id\": \"flowchart-Address-11\",\n    \"transform\": \"translate(47.3515625,115)\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"x\": \"-39.3515625\",\n    \"y\": \"-19\",\n    \"width\": \"78.703125\",\n    \"height\": \"38\",\n    \"className\": \"label-container\"\n  })), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"label\",\n    \"transform\": \"translate(0,0)\"\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"transform\": \"translate(-29.3515625,-9)\"\n  }), mdx(\"foreignObject\", _extends({\n    parentName: \"g\"\n  }, {\n    \"width\": \"58.703125\",\n    \"height\": \"18\"\n  }), mdx(\"div\", _extends({\n    parentName: \"foreignObject\"\n  }, {\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }), \"Address\"))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"node default\",\n    \"id\": \"flowchart-Person-13\",\n    \"transform\": \"translate(172.0546875,115)\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"x\": \"-35.3515625\",\n    \"y\": \"-19\",\n    \"width\": \"70.703125\",\n    \"height\": \"38\",\n    \"className\": \"label-container\"\n  })), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"label\",\n    \"transform\": \"translate(0,0)\"\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"transform\": \"translate(-25.3515625,-9)\"\n  }), mdx(\"foreignObject\", _extends({\n    parentName: \"g\"\n  }, {\n    \"width\": \"50.703125\",\n    \"height\": \"18\"\n  }), mdx(\"div\", _extends({\n    parentName: \"foreignObject\"\n  }, {\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }), \"Person\"))))), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"node default\",\n    \"id\": \"flowchart-Redis-15\",\n    \"transform\": \"translate(172.0546875,203)\",\n    \"style\": {\n      \"opacity\": \"1\"\n    }\n  }), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"x\": \"-30.453125\",\n    \"y\": \"-19\",\n    \"width\": \"60.90625\",\n    \"height\": \"38\",\n    \"className\": \"label-container\"\n  })), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"className\": \"label\",\n    \"transform\": \"translate(0,0)\"\n  }), mdx(\"g\", _extends({\n    parentName: \"g\"\n  }, {\n    \"transform\": \"translate(-20.453125,-9)\"\n  }), mdx(\"foreignObject\", _extends({\n    parentName: \"g\"\n  }, {\n    \"width\": \"40.90625\",\n    \"height\": \"18\"\n  }), mdx(\"div\", _extends({\n    parentName: \"foreignObject\"\n  }, {\n    \"xmlns\": \"http://www.w3.org/1999/xhtml\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"whiteSpace\": \"nowrap\"\n    }\n  }), \"Redis\")))))))))), mdx(\"h1\", null, \"A real world example\"), mdx(\"p\", null, \"To showcase how schema stitching works and what the problems are let us assume we have a service like Twitter, where a user can post messages.\"), mdx(\"p\", null, \"Moreover, let us assume we have three teams working on internal micro-/domain-services that handle certain aspects of that service.\"), mdx(\"p\", null, \"The first service is handling the message stream and has the following schema:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sdl\"\n  }), \"type Query {\\n  messages(userId: ID!): [Message!]\\n  message(messageId: ID!): Message\\n}\\n\\ntype Mutation {\\n  newMessage(input: NewMessageInput!): NewMessagePayload!\\n}\\n\\ntype Message {\\n  id: ID!\\n  text: String!\\n  createdBy: ID!\\n  createdAt: DateTime!\\n  tags: [String!]\\n}\\n\\ntype NewMessageInput {\\n  text: String!\\n  tags: [String!]\\n}\\n\\ntype NewMessagePayload {\\n  message: Message\\n}\\n\")), mdx(\"p\", null, \"The second service is handling the users of the services and has the following schema:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sdl\"\n  }), \"type Query {\\n  user(userId: ID!): User!\\n  users: [User!]\\n}\\n\\ntype Mutation {\\n  newUser(input: NewUserInput!): NewUserPayload!\\n  resetPassword(input: ResetPasswordInput!): ResetPasswordPayload!\\n}\\n\\ntype NewUserInput {\\n  username: String!\\n  password: String!\\n}\\n\\ntype ResetPasswordInput {\\n  username: String!\\n  password: String!\\n}\\n\\ntype NewUserPayload {\\n  user: User\\n}\\n\\ntype ResetPasswordPayload {\\n  user: User\\n}\\n\\ntype User {\\n  id: ID!\\n  username: String!\\n}\\n\")), mdx(\"p\", null, \"Last but not least we have a third service handling the message analytics. In our example case we keep it simple and our analytics service just tracks three different counters per message. The schema for this service looks like the following:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sdl\"\n  }), \"type Query {\\n  analytics(messageId: ID!, type: CounterType!): MessageAnalytics\\n}\\n\\ntype MessageAnalytics {\\n  id: ID!\\n  messageId: ID!\\n  count: Int!\\n  type: CounterType!\\n}\\n\\nenum CounterType {\\n  VIEWS\\n  LIKES\\n  REPLIES\\n}\\n\")), mdx(\"p\", null, \"With those three separate schemas our UI team would have to fetch from multiple endpoints.\"), mdx(\"p\", null, \"Even worse for our UI team, in order to build a stream view that shows the message text and the name of the user who posted the message, they would have to first fetch all the messages and could only then fetch the names of the users.\"), mdx(\"p\", null, \"This is actually one of the very things GraphQL tries to solve.\"), mdx(\"p\", null, \"With schema stitching or federations the services can be bundled together into one schema:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sdl\"\n  }), \"type Query {\\n  me: User!\\n  messages(userId: ID!): [Message!]\\n  message(messageId: ID!): Message\\n  user(userId: ID!): User!\\n  users: [User!]\\n}\\n\\ntype Mutation {\\n  newMessage(input: NewMessageInput!): NewMessagePayload!\\n  newUser(input: NewUserInput!): NewUserPayload!\\n  resetPassword(input: ResetPasswordInput!): ResetPasswordPayload!\\n}\\n\\ntype Message {\\n  id: ID!\\n  text: String!\\n  createdBy: User\\n  createdById: ID!\\n  createdAt: DateTime!\\n  tags: [String!]\\n  views: Int!\\n  likes: Int!\\n  replies: Int!\\n}\\n\\ntype NewMessageInput {\\n  text: String!\\n  tags: [String!]\\n}\\n\\ntype NewMessagePayload {\\n  message: Message\\n}\\n\\ntype NewUserInput {\\n  username: String!\\n  password: String!\\n}\\n\\ntype ResetPasswordInput {\\n  username: String!\\n  password: String!\\n}\\n\\ntype NewUserPayload {\\n  user: User\\n}\\n\\ntype ResetPasswordPayload {\\n  user: User\\n}\\n\\ntype User {\\n  id: ID!\\n  username: String!\\n  messages: [Message!]\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#schema-stitching","title":"Schema Stitching"},{"url":"#federated-schema","title":"Federated Schema"},{"url":"#a-real-world-example","title":"A real world example"}]}}},"site":{"siteMetadata":{"siteUrl":"https://chillicream.com","repositoryUrl":"https://github.com/ChilliCream/hotchocolate","tools":{"slack":"http://bit.ly/joinchilli"}}},"config":{"products":[{"path":"hotchocolate","title":"Hot Chocolate","description":"Build your own thin GraphQL API layer on top of any resource.","versions":[{"path":"","title":"v11.1 (latest)","items":[{"path":"index","title":"Introduction","items":null},{"path":"get-started","title":"Get Started","items":null},{"path":"defining-a-schema","title":"Defining a schema","items":[{"path":"index","title":"Schema basics"},{"path":"descriptions","title":"Schema Documentation"},{"path":"operations","title":"Operations"},{"path":"versioning","title":"Versioning"},{"path":"unions-and-interfaces","title":"Unions and Interfaces"},{"path":"extending-types","title":"Extending types"},{"path":"scalars","title":"Scalars"},{"path":"directives","title":"Directives"}]},{"path":"fetching-data","title":"Fetching data","items":[{"path":"index","title":"Resolver"},{"path":"fetching-from-databases","title":"Fetching from Databases"},{"path":"fetching-from-rest","title":"Fetching from REST"},{"path":"dataloader","title":"DataLoader"},{"path":"pagination","title":"Pagination"},{"path":"filtering","title":"Filtering"},{"path":"sorting","title":"Sorting"},{"path":"projections","title":"Projections"}]},{"path":"distributed-schema","title":"Distributed Schemas","items":[{"path":"index","title":"Overview"},{"path":"schema-stitching","title":"Schema Stitching"},{"path":"schema-federations","title":"Schema Federations"},{"path":"schema-configuration","title":"Schema Configuration"}]},{"path":"integrations","title":"Integrations","items":[{"path":"index","title":"Overview"},{"path":"entity-framework","title":"Entity Framework"},{"path":"spatial-data","title":"Spatial Data"}]},{"path":"performance","title":"Performance","items":[{"path":"index","title":"Overview"},{"path":"persisted-queries","title":"Persisted queries"},{"path":"automatic-persisted-queries","title":"Automatic persisted queries"}]},{"path":"api-reference","title":"API Reference","items":[{"path":"index","title":"Overview"},{"path":"object-type","title":"Object Type"},{"path":"custom-attributes","title":"Custom Attributes"},{"path":"language","title":"Language"},{"path":"extending-filtering","title":"Extending Filtering"},{"path":"visitors","title":"Visitors"},{"path":"aspnetcore","title":"ASP.NET Core"},{"path":"executable","title":"Executable"},{"path":"apollo-tracing","title":"Apollo Tracing"},{"path":"migrate-from-10-to-11","title":"Migrate from 10.5 to 11.0"}]}]},{"path":"v10","title":"v10 (previous)","items":[{"path":"index","title":"Introduction","items":null},{"path":"code-first","title":"Code-First","items":null},{"path":"schema-first","title":"Schema-First","items":null},{"path":"schema","title":"Schema","items":[{"path":"index","title":"Schema"},{"path":"object-type","title":"Object Type"},{"path":"interface-type","title":"Interface Type"},{"path":"union-type","title":"Union Type"},{"path":"input-object-type","title":"Input Object Type"},{"path":"enum-type","title":"Enum Type"},{"path":"descriptions","title":"Schema Descriptions"},{"path":"custom-scalar-types","title":"Scalar Type Support"},{"path":"descriptor-attributes","title":"Descriptor Attributes"},{"path":"extending-types","title":"Custom Base Classes"},{"path":"directives","title":"Directives"},{"path":"resolvers","title":"Resolvers"},{"path":"relay","title":"Relay"},{"path":"conventions","title":"Conventions"},{"path":"options","title":"Schema Options"}]},{"path":"data-fetching","title":"Data Fetching","items":[{"path":"index","title":"Data Loaders"},{"path":"pagination","title":"Pagination"},{"path":"filters","title":"Filters"}]},{"path":"security","title":"Security","items":[{"path":"index","title":"Authorization"},{"path":"security","title":"Security"}]},{"path":"execution-engine","title":"Execution Engine","items":[{"path":"index","title":"Middleware"},{"path":"validation-rules","title":"Validation Rules"},{"path":"instrumentation","title":"Instrumentation"},{"path":"apollo-tracing","title":"Apollo Tracing"},{"path":"batching","title":"Batching"},{"path":"persisted-queries","title":"Persisted Queries"},{"path":"custom-context-data","title":"Custom Context Data"},{"path":"subscriptions","title":"Subscriptions"},{"path":"type-conversion","title":"Type Conversion"},{"path":"error-filter","title":"Error Filter"},{"path":"execution-options","title":"Execution Options"}]},{"path":"server","title":"Server","items":[{"path":"index","title":"ASP.Net"},{"path":"dependency-injection","title":"Dependency Injection"}]},{"path":"stitching","title":"Schema Stitching","items":null},{"path":"tooling","title":"Tooling","items":null},{"path":"advanced","title":"Advanced","items":[{"path":"index","title":"Parser"},{"path":"dotnet-cli","title":".Net CLI"}]},{"path":"tutorials","title":"Tutorials","items":[{"path":"index","title":"Entity Framework"}]},{"path":"examples","title":"Examples","items":[{"path":"index","title":"Star Wars"},{"path":"slack-clone","title":"Slack Clone"},{"path":"other-examples","title":"Other Examples"}]}]}]},{"path":"bananacakepop","title":"Banana Cake Pop","description":"Use this GUI to get deep insights from any GraphQL API.","versions":[{"path":"","title":"v1 (preview)","items":[{"path":"index","title":"Introduction","items":null}]}]},{"path":"strawberryshake","title":"Strawberry Shake","description":"The only GraphQL client you will every need in the .NET ecosystem.","versions":[{"path":"","title":"v11 (preview)","items":[{"path":"index","title":"Introduction","items":null},{"path":"get-started","title":"Get Started","items":[{"path":"index","title":"Blazor"},{"path":"xamarin","title":"Xamarin"},{"path":"console","title":"Console"}]},{"path":"subscriptions","title":"Subscriptions","items":null},{"path":"tooling","title":"Tooling / CLI","items":null},{"path":"caching","title":"Caching","items":[{"path":"index","title":"Overview"},{"path":"entities","title":"Entities"},{"path":"invalidation","title":"Invalidation"}]},{"path":"performance","title":"Performance","items":[{"path":"index","title":"Overview"},{"path":"persisted-queries","title":"Persisted Queries"},{"path":"persisted-state","title":"Persisted State"}]},{"path":"networking","title":"Networking","items":[{"path":"index","title":"Protocols"},{"path":"authentication","title":"Authentication"}]},{"path":"scalars","title":"Scalars","items":null}]}]},{"path":"greendonut","title":"Green Donut","description":"Configure data loaders and caching for GraphQL endpoints.","versions":[{"path":"","title":"v11 (latest)","items":[{"path":"index","title":"Introduction","items":null}]},{"path":"v10","title":"v10 (previous)","items":[{"path":"index","title":"Introduction","items":null},{"path":"installation","title":"Installation","items":null},{"path":"usage","title":"Usage","items":null},{"path":"api","title":"API","items":null},{"path":"advanced-concepts","title":"Advanced Concepts","items":[{"path":"index","title":"Custom DataLoader"},{"path":"diagnostics","title":"Diagnostic Events"}]}]}]}]}},"pageContext":{"originPath":"hotchocolate/distributed-schema/index.md"}},"staticQueryHashes":["1014893094","2890364758","4218812017"]}