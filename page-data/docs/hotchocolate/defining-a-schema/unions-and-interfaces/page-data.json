{"componentChunkName":"component---src-templates-doc-page-template-tsx","path":"/docs/hotchocolate/defining-a-schema/unions-and-interfaces","result":{"data":{"file":{"childMarkdownRemark":{"fields":{"slug":"/hotchocolate/defining-a-schema/unions-and-interfaces/"},"frontmatter":{"title":"Unions and Interfaces"},"html":"<p>Similar to most type systems, GraphQL knows abstract types. There are two kinds of abstract types:\n<a href=\"https://graphql.org/learn/schema/#interfaces\">Interfaces</a> and <a href=\"https://graphql.org/learn/schema/#unions\">Unions</a></p>\n<h1 id=\"interfaces\" style=\"position:relative;\"><a href=\"#interfaces\" aria-label=\"interfaces permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Interfaces</h1>\n<p>An interface type can be used for abstract types that share fields.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"87863877580802600000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`interface Message {\n  sendBy: User!\n  createdAt: DateTime!\n}`, `87863877580802600000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Message</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">sendBy</span><span class=\"token punctuation\">:</span> User<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">createdAt</span><span class=\"token punctuation\">:</span> DateTime<span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>An object type or interface type that <em>implements</em> an interface, does have to declare all the fields that are declared on the interface.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"43646381636838190000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type TextMessage implements Message {\n  sendBy: User!\n  createdAt: DateTime!\n  content: String!\n}\n\ninterface MediaMessage implements Message {\n  sendBy: User!\n  createdAt: DateTime!\n  mediaType: MediaType!\n}\n\ntype VideoMessage implements MediaMessage {\n  sendBy: User!\n  createdAt: DateTime!\n  mediaType: MediaType!\n  videoUrl: String!\n}`, `43646381636838190000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">TextMessage</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Message</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">sendBy</span><span class=\"token punctuation\">:</span> User<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">createdAt</span><span class=\"token punctuation\">:</span> DateTime<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">content</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MediaMessage</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Message</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">sendBy</span><span class=\"token punctuation\">:</span> User<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">createdAt</span><span class=\"token punctuation\">:</span> DateTime<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">mediaType</span><span class=\"token punctuation\">:</span> MediaType<span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">VideoMessage</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MediaMessage</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">sendBy</span><span class=\"token punctuation\">:</span> User<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">createdAt</span><span class=\"token punctuation\">:</span> DateTime<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">mediaType</span><span class=\"token punctuation\">:</span> MediaType<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">videoUrl</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>A type can also implement multiple interfaces.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">type VideoMessage implements Message &amp; HasMediaType {\n  sendBy: User!\n  createdAt: DateTime!\n  mediaType: MediaType!\n  videoUrl: String!\n}</code></pre></div>\n<h2 id=\"querying-interfaces\" style=\"position:relative;\"><a href=\"#querying-interfaces\" aria-label=\"querying interfaces permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Querying Interfaces</h2>\n<p>All fields declared on the interface type are available to query directly.\n<a href=\"https://spec.graphql.org/June2018/#sec-Inline-Fragments\">Inline Fragments ðŸ“„</a> allow to query for fields of a specific implementation.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"38893031178082050000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`{\n  messages {\n    __typename\n    sendBy {\n      userName\n    }\n    createdAt\n    ... on TextMessage {\n      content\n    }\n    ... on VideoMessage {\n      videoUrl\n    }\n    ... on MediaMessage {\n      mediaType\n    }\n  }\n}`, `38893031178082050000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  messages <span class=\"token punctuation\">{</span>\n    __typename\n    sendBy <span class=\"token punctuation\">{</span>\n      userName\n    <span class=\"token punctuation\">}</span>\n    createdAt\n    <span class=\"token operator\">...</span> <span class=\"token keyword\">on</span> <span class=\"token class-name\">TextMessage</span> <span class=\"token punctuation\">{</span>\n      content\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">...</span> <span class=\"token keyword\">on</span> <span class=\"token class-name\">VideoMessage</span> <span class=\"token punctuation\">{</span>\n      videoUrl\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">...</span> <span class=\"token keyword\">on</span> <span class=\"token class-name\">MediaMessage</span> <span class=\"token punctuation\">{</span>\n      mediaType\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"24121453702674977000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`{\n  &quot;messages&quot;: [\n    {\n      &quot;__typename&quot;: &quot;TextMessage&quot;,\n      &quot;sendBy&quot;: {\n        &quot;userName&quot;: &quot;CookingMaster86&quot;\n      },\n      &quot;createdAt&quot;: &quot;2020-01-01T11:43:00Z&quot;,\n      &quot;context&quot;: &quot;Hi there, can you show me how you did it?&quot;\n    }\n    {\n      &quot;__typename&quot;: &quot;VideoMessage&quot;,\n      &quot;sendBy&quot;: {\n        &quot;userName&quot;: &quot;SpicyChicken404&quot;\n      },\n      &quot;createdAt&quot;: &quot;2020-01-01T12:00:00Z&quot;,\n      &quot;videoUrl&quot;: &quot;http://chillicream.com/cooking/recipies&quot;,\n    }\n  ]\n}`, `24121453702674977000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"messages\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"__typename\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"TextMessage\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"sendBy\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"userName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CookingMaster86\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2020-01-01T11:43:00Z\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"context\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Hi there, can you show me how you did it?\"</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"__typename\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"VideoMessage\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"sendBy\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"userName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"SpicyChicken404\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"createdAt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2020-01-01T12:00:00Z\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"videoUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://chillicream.com/cooking/recipies\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"interface-definition\" style=\"position:relative;\"><a href=\"#interface-definition\" aria-label=\"interface definition permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Interface Definition</h2>\n<p>HotChocolate tries to infer interfaces from the .Net types.\nWhen a resolver returns an interface, you just have to register the implementation on the schema builder.\nHotChocolate will register the types as implementations of the interface.</p>\n<h3 id=\"annotation-based\" style=\"position:relative;\"><a href=\"#annotation-based\" aria-label=\"annotation based permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Annotation Based</h3>\n<p>In the annotation based approach, you most likely do not need to worry about interfaces at all.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"81582791290365360000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class Query \n{\n  public IMessage[] GetMessages([Service]IMessageRepo repo) => repo.GetMessages();\n}\n\n[GraphQLName(&quot;Message&quot;)]\npublic interface IMessage \n{\n  User SendBy { get; }\n\n  DateTime CreatedAt { get; }\n}\n\npublic class TextMessage : IMessage \n{\n  public User SendBy { get; set; }\n\n  public DateTime CreatedAt { get; set; }\n\n  public string Content { get; set; }\n}\n// .....`, `81582791290365360000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span> \n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IMessage<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token function\">GetMessages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">IMessageRepo</span> repo<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> repo<span class=\"token punctuation\">.</span><span class=\"token function\">GetMessages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">GraphQLName</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Message\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IMessage</span> \n<span class=\"token punctuation\">{</span>\n  <span class=\"token return-type class-name\">User</span> SendBy <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token return-type class-name\">DateTime</span> CreatedAt <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TextMessage</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IMessage</span></span> \n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">User</span> SendBy <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DateTime</span> CreatedAt <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Content <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// .....</span></code></pre></div>\n<p><em>Configure Services</em></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"63915673574517015000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`  public void ConfigureServices(IServiceCollection services)\n  {\n      services\n          .AddRouting()\n          .AddGraphQLServer()\n          .AddQueryType<Query>()\n          // HotChocolate knows that TextMessage implements IMessage and will add it to the list\n          // of implementations\n          .AddType<TextMessage>()\n          .AddType<VideoMessage>()\n  }`, `63915673574517015000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">  <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ConfigureServices</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IServiceCollection</span> services<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n      services\n          <span class=\"token punctuation\">.</span><span class=\"token function\">AddRouting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">AddGraphQLServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddQueryType</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Query<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token comment\">// HotChocolate knows that TextMessage implements IMessage and will add it to the list</span>\n          <span class=\"token comment\">// of implementations</span>\n          <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddType</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>TextMessage<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddType</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>VideoMessage<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can also use classes as definitions for interfaces.\nTo mark a base class as an interface definition you can use <code class=\"language-text\">[InterfaceType]</code>.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"20161703268384580000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`[InterfaceType]\npublic abstract class Message \n{\n  public User SendBy { get; set; }\n\n  public DateTime CreatedAt { get; set; }\n}`, `20161703268384580000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">InterfaceType</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Message</span> \n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">User</span> SendBy <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DateTime</span> CreatedAt <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Code First</strong>\nHotChocolate provides a fluent configuration API for interfaces that is very similar to the <code class=\"language-text\">ObjectType</code> interface.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"60036635850563870000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class MediaMessageType : InterfaceType<IMediaMessage>\n{\n    protected override void Configure(IInterfaceTypeDescriptor<IMediaMessage> descriptor)\n    {\n        // Configure Type Name\n        descriptor.Name(&quot;MediaMessage&quot;);\n\n        // By default all fields are bound implicitly. This means, all fields of \\`IMessage\\` are\n        // added to the type and do not have to be added with descriptor.Field(x => x.FieldName)\n        // This behaviour can be changed from opt out to opt in by calling BindFieldsExplicitly\n        descriptor.BindFieldsExplicitly();\n\n        // Declare  Fields\n        descriptor.Field(x => x.MediaType);\n        descriptor.Field(x => x.CreatedAt);\n        descriptor.Field(x => x.SendBy);\n\n        // This interface implements a interface\n        descriptor.Implements<MessageType>();\n    }\n}`, `60036635850563870000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MediaMessageType</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">InterfaceType<span class=\"token punctuation\">&lt;</span>IMediaMessage<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IInterfaceTypeDescriptor<span class=\"token punctuation\">&lt;</span>IMediaMessage<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Configure Type Name</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MediaMessage\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// By default all fields are bound implicitly. This means, all fields of `IMessage` are</span>\n        <span class=\"token comment\">// added to the type and do not have to be added with descriptor.Field(x => x.FieldName)</span>\n        <span class=\"token comment\">// This behaviour can be changed from opt out to opt in by calling BindFieldsExplicitly</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">BindFieldsExplicitly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Declare  Fields</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Field</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>MediaType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Field</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>CreatedAt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Field</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span>SendBy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// This interface implements a interface</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Implements</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MessageType<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In a <code class=\"language-text\">ObjectType</code> you can declare what interface this object type implements.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"65523207819512460000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public class VideoMessageType : ObjectType<VideoMessage>\n{\n    protected override void Configure(IObjectTypeDescriptor<VideoMessage> descriptor)\n    {\n        descriptor.Implements<MessageType>();\n    }\n}`, `65523207819512460000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VideoMessageType</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ObjectType<span class=\"token punctuation\">&lt;</span>VideoMessage<span class=\"token punctuation\">></span></span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IObjectTypeDescriptor<span class=\"token punctuation\">&lt;</span>VideoMessage<span class=\"token punctuation\">></span></span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Implements</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MessageType<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Schema First</strong>\nIn schema first interfaces can be declared directly in SDL:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"15731383407808885000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public void ConfigureServices(IServiceCollection services)\n{\n    services\n        .AddRouting()\n        .AddGraphQLServer()\n        .AddDocumentFromString(@&quot;\n        type Query {\n            messages: Message\n        }\n\n        interface Message {\n          sendBy: User!\n          createdAt: DateTime!\n        }\n\n        type TextMessage implements Message {\n          sendBy: User!\n          createdAt: DateTime!\n          content: String!\n        }\n\n        interface MediaMessage implements Message {\n          sendBy: User!\n          createdAt: DateTime!\n          mediaType: MediaType!\n        }\n\n        type VideoMessage implements MediaMessage {\n          sendBy: User!\n          createdAt: DateTime!\n          mediaType: MediaType!\n          videoUrl: String!\n        }\n\n        type VideoMessage implements Message & HasMediaType {\n          sendBy: User!\n          createdAt: DateTime!\n          mediaType: MediaType!\n          videoUrl: String!\n        }\n        &quot;)\n        .AddResolver(\n            &quot;Query&quot;, \n            &quot;messages&quot;, \n            (context, token) => context.Service<IMessageRepo>().GetMessages());\n}`, `15731383407808885000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ConfigureServices</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IServiceCollection</span> services<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    services\n        <span class=\"token punctuation\">.</span><span class=\"token function\">AddRouting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">AddGraphQLServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">AddDocumentFromString</span><span class=\"token punctuation\">(</span><span class=\"token string\">@\"\n        type Query {\n            messages: Message\n        }\n\n        interface Message {\n          sendBy: User!\n          createdAt: DateTime!\n        }\n\n        type TextMessage implements Message {\n          sendBy: User!\n          createdAt: DateTime!\n          content: String!\n        }\n\n        interface MediaMessage implements Message {\n          sendBy: User!\n          createdAt: DateTime!\n          mediaType: MediaType!\n        }\n\n        type VideoMessage implements MediaMessage {\n          sendBy: User!\n          createdAt: DateTime!\n          mediaType: MediaType!\n          videoUrl: String!\n        }\n\n        type VideoMessage implements Message &amp; HasMediaType {\n          sendBy: User!\n          createdAt: DateTime!\n          mediaType: MediaType!\n          videoUrl: String!\n        }\n        \"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">AddResolver</span><span class=\"token punctuation\">(</span>\n            <span class=\"token string\">\"Query\"</span><span class=\"token punctuation\">,</span> \n            <span class=\"token string\">\"messages\"</span><span class=\"token punctuation\">,</span> \n            <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> context<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Service</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>IMessageRepo<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetMessages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"unions\" style=\"position:relative;\"><a href=\"#unions\" aria-label=\"unions permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Unions</h1>\n<p>Unions are very similar to interfaces. The difference is that members of an unions do not have fields in common.\nUnions are useful if you have completely disjunct structured types.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"54617190554809115000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`type Group {\n  id: ID!\n  members: [GroupMember]\n}\n\ntype User {\n  userName: String!\n}\n\nunion GroupMember = User | Group`, `54617190554809115000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"sdl\"><pre class=\"language-sdl\"><code class=\"language-sdl\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Group</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">members</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>GroupMember<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">userName</span><span class=\"token punctuation\">:</span> String<span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">union</span> <span class=\"token class-name\">GroupMember</span> <span class=\"token operator\">=</span> User <span class=\"token operator\">|</span> Group</code></pre></div>\n<h2 id=\"querying-unions\" style=\"position:relative;\"><a href=\"#querying-unions\" aria-label=\"querying unions permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Querying Unions</h2>\n<p>Union types do not have fields in common.<br>\nYou have to use <a href=\"https://spec.graphql.org/June2018/#sec-Inline-Fragments\">Inline Fragments ðŸ“„</a> to query for fields of a specific implementation.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"38540098128878445000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`{\n    accessControl {\n        __typename\n        ... on Group {\n          id\n        }\n        ... on User {\n          userName \n        }\n    } \n}`, `38540098128878445000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n    accessControl <span class=\"token punctuation\">{</span>\n        __typename\n        <span class=\"token operator\">...</span> <span class=\"token keyword\">on</span> <span class=\"token class-name\">Group</span> <span class=\"token punctuation\">{</span>\n          id\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">...</span> <span class=\"token keyword\">on</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n          userName \n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> \n<span class=\"token punctuation\">}</span></code></pre></div>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"33645984500253913000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`{\n    &quot;accessControl&quot;: [\n        {\n          &quot;__typename&quot;: &quot;Group&quot;,\n          &quot;id&quot;: &quot;R3JvdXA6MQ==&quot;\n        },\n        {\n          &quot;__typename&quot;: &quot;User&quot;,\n          &quot;userName&quot;: &quot;SpicyChicken404&quot;\n        },\n        {\n          &quot;__typename&quot;: &quot;User&quot;,\n          &quot;userName&quot;: &quot;CookingMaster86&quot;\n        }\n    ]\n}`, `33645984500253913000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"accessControl\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"__typename\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Group\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"R3JvdXA6MQ==\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"__typename\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"User\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"userName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"SpicyChicken404\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"__typename\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"User\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token property\">\"userName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CookingMaster86\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"interface-definition-1\" style=\"position:relative;\"><a href=\"#interface-definition-1\" aria-label=\"interface definition 1 permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Interface Definition</h2>\n<h3 id=\"annotation-based-1\" style=\"position:relative;\"><a href=\"#annotation-based-1\" aria-label=\"annotation based 1 permalink\" class=\"anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"16\" height=\"16\"><path d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"/></svg></a>Annotation Based</h3>\n<p>In the annotation based approach, HotChocolate tries to infer union types from the .Net types.\nYou can manage the membership of union types with a marker interface.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"29203468481371652000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`[UnionType(&quot;GroupMember&quot;)]\npublic interface IGroupMember \n{\n}\n\npublic class Group : IGroupMember\n{\n  [Id]\n  public Guid Identifier { get; set; }\n\n  public IGroupMember[] Members { get; set; }\n}\n\npublic class User : IGroupMember \n{\n  public string UserName { get; set; }\n}\n\npublic class Query \n{\n  public IGroupMember[] GetAccessControl([Service]IAccessRepo repo) => repo.GetItems();\n}`, `29203468481371652000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">UnionType</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"GroupMember\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IGroupMember</span> \n<span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Group</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IGroupMember</span></span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Id</span></span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Guid</span> Identifier <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IGroupMember<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> Members <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IGroupMember</span></span> \n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> UserName <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Query</span> \n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IGroupMember<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token function\">GetAccessControl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Service</span></span><span class=\"token punctuation\">]</span><span class=\"token class-name\">IAccessRepo</span> repo<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> repo<span class=\"token punctuation\">.</span><span class=\"token function\">GetItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><em>Configure Services</em></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"49353544540766680000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`  public void ConfigureServices(IServiceCollection services)\n  {\n      services\n          .AddRouting()\n          .AddGraphQLServer()\n          // HotChocolate will pick up IGroupMember as a UnionType<IGroupMember>\n          .AddQueryType<Query>()\n          // HotChocolate knows that User and Group implement IGroupMember and will add it to the \n          // list of possible types of the UnionType\n          .AddType<Group>()\n          .AddType<User>()\n  }`, `49353544540766680000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">  <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ConfigureServices</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IServiceCollection</span> services<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n      services\n          <span class=\"token punctuation\">.</span><span class=\"token function\">AddRouting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">AddGraphQLServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token comment\">// HotChocolate will pick up IGroupMember as a UnionType&lt;IGroupMember></span>\n          <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddQueryType</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Query<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token comment\">// HotChocolate knows that User and Group implement IGroupMember and will add it to the </span>\n          <span class=\"token comment\">// list of possible types of the UnionType</span>\n          <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddType</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Group<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddType</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Code First</strong>\nHotChocolate provides a fluent configuration API for union types that is very similar to the <code class=\"language-text\">ObjectType</code> interface.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"69306880513330340000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// In case you have a marker interface and want to configure it, you can also just user UnionType<IMarkerInterface>\npublic class GroupMemberType : UnionType\n{\n    protected override void Configure(IUnionTypeDescriptor descriptor)\n    {\n        // Configure Type Name\n        descriptor.Name(&quot;GroupMember&quot;);\n\n        // Declare Possible Types\n        descriptor.Type<GroupType>();\n        descriptor.Type<UserType>();\n    }\n}`, `69306880513330340000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token comment\">// In case you have a marker interface and want to configure it, you can also just user UnionType&lt;IMarkerInterface></span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GroupMemberType</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">UnionType</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IUnionTypeDescriptor</span> descriptor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Configure Type Name</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GroupMember\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Declare Possible Types</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Type</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GroupType<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        descriptor<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Type</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>UserType<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Schema First</strong>\nIn schema first unions can be declared directly in SDL:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"58568756042833160000\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"Copied code example\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`public void ConfigureServices(IServiceCollection services)\n{\n    services\n        .AddRouting()\n        .AddGraphQLServer()\n        .AddDocumentFromString(@&quot;\n        type Query {\n            accessControl: [GroupMember]\n        }\n\n        type Group {\n            id: ID!\n            members: [GroupMember]\n        }\n\n        type User {\n            userName: String!\n        }\n\n        union GroupMember = User | Group\n        &quot;)\n        .AddResolver(\n            &quot;Query&quot;, \n            &quot;accessControl&quot;, \n            (context, token) => context.Service<IAccessRepo>().GetItems());\n}`, `58568756042833160000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"Copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ConfigureServices</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IServiceCollection</span> services<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    services\n        <span class=\"token punctuation\">.</span><span class=\"token function\">AddRouting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">AddGraphQLServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">AddDocumentFromString</span><span class=\"token punctuation\">(</span><span class=\"token string\">@\"\n        type Query {\n            accessControl: [GroupMember]\n        }\n\n        type Group {\n            id: ID!\n            members: [GroupMember]\n        }\n\n        type User {\n            userName: String!\n        }\n\n        union GroupMember = User | Group\n        \"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">AddResolver</span><span class=\"token punctuation\">(</span>\n            <span class=\"token string\">\"Query\"</span><span class=\"token punctuation\">,</span> \n            <span class=\"token string\">\"accessControl\"</span><span class=\"token punctuation\">,</span> \n            <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> context<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Service</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>IAccessRepo<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/hotchocolate/defining-a-schema/unions-and-interfaces/#interfaces\">Interfaces</a></p>\n<ul>\n<li><a href=\"/hotchocolate/defining-a-schema/unions-and-interfaces/#querying-interfaces\">Querying Interfaces</a></li>\n<li><a href=\"/hotchocolate/defining-a-schema/unions-and-interfaces/#interface-definition\">Interface Definition</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/hotchocolate/defining-a-schema/unions-and-interfaces/#unions\">Unions</a></p>\n<ul>\n<li><a href=\"/hotchocolate/defining-a-schema/unions-and-interfaces/#querying-unions\">Querying Unions</a></li>\n<li><a href=\"/hotchocolate/defining-a-schema/unions-and-interfaces/#interface-definition-1\">Interface Definition</a></li>\n</ul>\n</li>\n</ul>"}},"site":{"siteMetadata":{"siteUrl":"https://chillicream.com","repositoryUrl":"https://github.com/ChilliCream/hotchocolate","tools":{"slack":"https://join.slack.com/t/hotchocolategraphql/shared_invite/enQtNTA4NjA0ODYwOTQ0LTViMzA2MTM4OWYwYjIxYzViYmM0YmZhYjdiNzBjOTg2ZmU1YmMwNDZiYjUyZWZlMzNiMTk1OWUxNWZhMzQwY2Q"}}},"config":{"products":[{"path":"hotchocolate","title":"Hot Chocolate","description":"Build your own thin GraphQL API layer on top of any resource.","versions":[{"path":"","title":"v11 (latest)","items":[{"path":"index","title":"Introduction","items":null},{"path":"get-started","title":"Get Started","items":null},{"path":"defining-a-schema","title":"Defining a schema","items":[{"path":"index","title":"Schema basics"},{"path":"versioning","title":"Versioning"},{"path":"unions-and-interfaces","title":"Unions and Interfaces"},{"path":"scalars","title":"Scalars"},{"path":"directives","title":"Directives"}]},{"path":"fetching-data","title":"Fetching data","items":[{"path":"index","title":"Resolver"},{"path":"fetching-from-databases","title":"Fetching from Databases"},{"path":"fetching-from-rest","title":"Fetching from REST"},{"path":"dataloader","title":"DataLoader"},{"path":"pagination","title":"Pagination"},{"path":"filtering","title":"Filtering"},{"path":"sorting","title":"Sorting"},{"path":"projections","title":"Projections"}]},{"path":"integrations","title":"Integrations","items":[{"path":"index","title":"Overview"},{"path":"entity-framework","title":"Entity Framework"},{"path":"spatial-data","title":"Spatial Data"}]},{"path":"performance","title":"Performance","items":[{"path":"index","title":"Overview"},{"path":"persisted-queries","title":"Persisted queries"},{"path":"automatic-persisted-queries","title":"Automatic persisted queries"}]},{"path":"api-reference","title":"API Reference","items":[{"path":"index","title":"Overview"},{"path":"object-type","title":"Object Type"},{"path":"language","title":"Language"},{"path":"extending-filtering","title":"Extending Filtering"},{"path":"visitors","title":"Visitors"},{"path":"aspnetcore","title":"ASP.NET Core"},{"path":"executable","title":"Executable"},{"path":"migrate-from-10-to-11","title":"Migrate from 10.5 to 11.0"}]}]},{"path":"v10","title":"v10 (previous)","items":[{"path":"index","title":"Introduction","items":null},{"path":"code-first","title":"Code-First","items":null},{"path":"schema-first","title":"Schema-First","items":null},{"path":"schema","title":"Schema","items":[{"path":"index","title":"Schema"},{"path":"object-type","title":"Object Type"},{"path":"interface-type","title":"Interface Type"},{"path":"union-type","title":"Union Type"},{"path":"input-object-type","title":"Input Object Type"},{"path":"enum-type","title":"Enum Type"},{"path":"descriptions","title":"Schema Descriptions"},{"path":"custom-scalar-types","title":"Scalar Type Support"},{"path":"descriptor-attributes","title":"Descriptor Attributes"},{"path":"extending-types","title":"Custom Base Classes"},{"path":"directives","title":"Directives"},{"path":"resolvers","title":"Resolvers"},{"path":"relay","title":"Relay"},{"path":"conventions","title":"Conventions"},{"path":"options","title":"Schema Options"}]},{"path":"data-fetching","title":"Data Fetching","items":[{"path":"index","title":"Data Loaders"},{"path":"pagination","title":"Pagination"},{"path":"filters","title":"Filters"}]},{"path":"security","title":"Security","items":[{"path":"index","title":"Authorization"},{"path":"security","title":"Security"}]},{"path":"execution-engine","title":"Execution Engine","items":[{"path":"index","title":"Middleware"},{"path":"validation-rules","title":"Validation Rules"},{"path":"instrumentation","title":"Instrumentation"},{"path":"apollo-tracing","title":"Apollo Tracing"},{"path":"batching","title":"Batching"},{"path":"persisted-queries","title":"Persisted Queries"},{"path":"custom-context-data","title":"Custom Context Data"},{"path":"subscriptions","title":"Subscriptions"},{"path":"type-conversion","title":"Type Conversion"},{"path":"error-filter","title":"Error Filter"},{"path":"execution-options","title":"Execution Options"}]},{"path":"server","title":"Server","items":[{"path":"index","title":"ASP.Net"},{"path":"dependency-injection","title":"Dependency Injection"}]},{"path":"stitching","title":"Schema Stitching","items":null},{"path":"tooling","title":"Tooling","items":null},{"path":"advanced","title":"Advanced","items":[{"path":"index","title":"Parser"},{"path":"dotnet-cli","title":".Net CLI"}]},{"path":"tutorials","title":"Tutorials","items":[{"path":"index","title":"Entity Framework"}]},{"path":"examples","title":"Examples","items":[{"path":"index","title":"Star Wars"},{"path":"slack-clone","title":"Slack Clone"},{"path":"other-examples","title":"Other Examples"}]}]}]},{"path":"bananacakepop","title":"Banana Cake Pop","description":"Use this GUI to get deep insights from any GraphQL API.","versions":[{"path":"","title":"v1 (preview)","items":[{"path":"index","title":"Introduction","items":null}]}]},{"path":"greendonut","title":"Green Donut","description":"Configure data loaders and caching for GraphQL endpoints.","versions":[{"path":"","title":"v11 (latest)","items":[{"path":"index","title":"Introduction","items":null}]},{"path":"v10","title":"v10 (previous)","items":[{"path":"index","title":"Introduction","items":null},{"path":"installation","title":"Installation","items":null},{"path":"usage","title":"Usage","items":null},{"path":"api","title":"API","items":null},{"path":"advanced-concepts","title":"Advanced Concepts","items":[{"path":"index","title":"Custom DataLoader"},{"path":"diagnostics","title":"Diagnostic Events"}]}]}]}]}},"pageContext":{"originPath":"hotchocolate/defining-a-schema/unions-and-interfaces.md"}},"staticQueryHashes":["1014893094","2890364758","4218812017"]}