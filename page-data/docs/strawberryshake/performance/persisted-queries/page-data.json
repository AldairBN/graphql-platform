{"componentChunkName":"component---src-templates-doc-page-template-tsx","path":"/docs/strawberryshake/performance/persisted-queries","result":{"data":{"file":{"childMdx":{"fields":{"slug":"/strawberryshake/performance/persisted-queries/"},"frontmatter":{"title":"Persisted Queries"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Persisted Queries\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"We are still working on the documentation for Strawberry Shake so help us by finding typos, missing things or write some additional docs with us.\")), mdx(\"p\", null, \"This guide will walk you through how persisted queries work and how you can set them up with Strawberry Shake.\"), mdx(\"h1\", null, \"How it works\"), mdx(\"p\", null, \"Persisted queries is a feature that Facebook uses internally for a long time to improve the performance of Facebook with their relay client.\"), mdx(\"p\", null, \"During development you can write and edit the queries in your application. When you start and debug your application it will use these queries to interact with the GraphQL server.\"), mdx(\"div\", {\n    \"className\": \"mermaid\",\n    \"data-processed\": \"true\"\n  }, mdx(\"svg\", _extends({\n    parentName: \"div\"\n  }, {\n    \"id\": \"mermaid-1619624461760\",\n    \"width\": \"100%\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"height\": \"249\",\n    \"style\": {\n      \"maxWidth\": \"683px\"\n    },\n    \"viewBox\": \"-50 -10 683 249\"\n  }), mdx(\"style\", {\n    parentName: \"svg\"\n  }, \"#mermaid-1619624461760{font-family:sans-serif;font-size:16px;fill:#333;}#mermaid-1619624461760 .error-icon{fill:#552222;}#mermaid-1619624461760 .error-text{fill:#552222;stroke:#552222;}#mermaid-1619624461760 .edge-thickness-normal{stroke-width:2px;}#mermaid-1619624461760 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-1619624461760 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-1619624461760 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-1619624461760 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-1619624461760 .marker{fill:#333333;}#mermaid-1619624461760 .marker.cross{stroke:#333333;}#mermaid-1619624461760 svg{font-family:sans-serif;font-size:16px;}#mermaid-1619624461760 .actor{stroke:hsl(259.6261682243,59.7765363128%,87.9019607843%);fill:#ECECFF;}#mermaid-1619624461760 text.actor > tspan{fill:black;stroke:none;}#mermaid-1619624461760 .actor-line{stroke:grey;}#mermaid-1619624461760 .messageLine0{stroke-width:1.5;stroke-dasharray:none;stroke:#333;}#mermaid-1619624461760 .messageLine1{stroke-width:1.5;stroke-dasharray:2,2;stroke:#333;}#mermaid-1619624461760 #arrowhead path{fill:#333;stroke:#333;}#mermaid-1619624461760 .sequenceNumber{fill:white;}#mermaid-1619624461760 #sequencenumber{fill:#333;}#mermaid-1619624461760 #crosshead path{fill:#333;stroke:#333;}#mermaid-1619624461760 .messageText{fill:#333;stroke:#333;}#mermaid-1619624461760 .labelBox{stroke:hsl(259.6261682243,59.7765363128%,87.9019607843%);fill:#ECECFF;}#mermaid-1619624461760 .labelText,#mermaid-1619624461760 .labelText > tspan{fill:black;stroke:none;}#mermaid-1619624461760 .loopText,#mermaid-1619624461760 .loopText > tspan{fill:black;stroke:none;}#mermaid-1619624461760 .loopLine{stroke-width:2px;stroke-dasharray:2,2;stroke:hsl(259.6261682243,59.7765363128%,87.9019607843%);fill:hsl(259.6261682243,59.7765363128%,87.9019607843%);}#mermaid-1619624461760 .note{stroke:#aaaa33;fill:#fff5ad;}#mermaid-1619624461760 .noteText,#mermaid-1619624461760 .noteText > tspan{fill:black;stroke:none;}#mermaid-1619624461760 .activation0{fill:#f4f4f4;stroke:#666;}#mermaid-1619624461760 .activation1{fill:#f4f4f4;stroke:#666;}#mermaid-1619624461760 .activation2{fill:#f4f4f4;stroke:#666;}#mermaid-1619624461760:root{--mermaid-font-family:sans-serif;}#mermaid-1619624461760 sequence{fill:apa;}\"), mdx(\"g\", {\n    parentName: \"svg\"\n  }), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"line\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"actor0\",\n    \"x1\": \"75\",\n    \"y1\": \"5\",\n    \"x2\": \"75\",\n    \"y2\": \"238\",\n    \"className\": \"actor-line\",\n    \"strokeWidth\": \"0.5px\",\n    \"stroke\": \"#999\"\n  })), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"0\",\n    \"y\": \"0\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"32.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"75\",\n    \"dy\": \"0\"\n  }), \"Generated Client\"))), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"line\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"actor1\",\n    \"x1\": \"508\",\n    \"y1\": \"5\",\n    \"x2\": \"508\",\n    \"y2\": \"238\",\n    \"className\": \"actor-line\",\n    \"strokeWidth\": \"0.5px\",\n    \"stroke\": \"#999\"\n  })), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"433\",\n    \"y\": \"0\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"508\",\n    \"y\": \"32.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"508\",\n    \"dy\": \"0\"\n  }), \"GraphQL Server\"))), mdx(\"defs\", {\n    parentName: \"svg\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"arrowhead\",\n    \"refX\": \"5\",\n    \"refY\": \"2\",\n    \"markerWidth\": \"6\",\n    \"markerHeight\": \"4\",\n    \"orient\": \"auto\"\n  }), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"d\": \"M 0,0 V 4 L6,2 Z\"\n  })))), mdx(\"defs\", {\n    parentName: \"svg\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"crosshead\",\n    \"markerWidth\": \"15\",\n    \"markerHeight\": \"8\",\n    \"orient\": \"auto\",\n    \"refX\": \"16\",\n    \"refY\": \"4\"\n  }), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"fill\": \"black\",\n    \"stroke\": \"#000000\",\n    \"strokeWidth\": \"1px\",\n    \"d\": \"M 9,2 V 6 L16,4 Z\",\n    \"style\": {\n      \"strokeDasharray\": \"0, 0\"\n    }\n  })), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"strokeWidth\": \"1px\",\n    \"d\": \"M 0,1 L 6,7 M 6,1 L 0,7\",\n    \"style\": {\n      \"strokeDasharray\": \"0, 0\"\n    }\n  })))), mdx(\"defs\", {\n    parentName: \"svg\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"sequencenumber\",\n    \"refX\": \"15\",\n    \"refY\": \"15\",\n    \"markerWidth\": \"60\",\n    \"markerHeight\": \"40\",\n    \"orient\": \"auto\"\n  }), mdx(\"circle\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"cx\": \"15\",\n    \"cy\": \"15\",\n    \"r\": \"6\"\n  })))), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"292\",\n    \"y\": \"80\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"Request: { \\\"query\\\": \\\"{ foo { bar } }\\\" \\\"variables\\\": \\\"...\\\" }\"), mdx(\"line\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x1\": \"75\",\n    \"y1\": \"109\",\n    \"x2\": \"508\",\n    \"y2\": \"109\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"292\",\n    \"y\": \"124\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"Response: { \\\"data\\\": { \\\"foo\\\": { ... } } }\"), mdx(\"line\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x1\": \"508\",\n    \"y1\": \"153\",\n    \"x2\": \"75\",\n    \"y2\": \"153\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"0\",\n    \"y\": \"173\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"205.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"75\",\n    \"dy\": \"0\"\n  }), \"Generated Client\"))), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"433\",\n    \"y\": \"173\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"508\",\n    \"y\": \"205.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"508\",\n    \"dy\": \"0\"\n  }), \"GraphQL Server\"))))), mdx(\"p\", null, \"Once you package your client application however the GraphQL queries are compiled, removed from the client code and exported into a query directory.\"), mdx(\"p\", null, \"The query directory can then be uploaded to your GraphQL server. Whenever the client wants to send a GraphQL request to the server it will insert into that request the hash of the extracted GraphQL query instead of the GraphQL query itself.\"), mdx(\"div\", {\n    \"className\": \"mermaid\",\n    \"data-processed\": \"true\"\n  }, mdx(\"svg\", _extends({\n    parentName: \"div\"\n  }, {\n    \"id\": \"mermaid-1619624461761\",\n    \"width\": \"100%\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"height\": \"249\",\n    \"style\": {\n      \"maxWidth\": \"592px\"\n    },\n    \"viewBox\": \"-50 -10 592 249\"\n  }), mdx(\"style\", {\n    parentName: \"svg\"\n  }, \"#mermaid-1619624461761{font-family:sans-serif;font-size:16px;fill:#333;}#mermaid-1619624461761 .error-icon{fill:#552222;}#mermaid-1619624461761 .error-text{fill:#552222;stroke:#552222;}#mermaid-1619624461761 .edge-thickness-normal{stroke-width:2px;}#mermaid-1619624461761 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-1619624461761 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-1619624461761 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-1619624461761 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-1619624461761 .marker{fill:#333333;}#mermaid-1619624461761 .marker.cross{stroke:#333333;}#mermaid-1619624461761 svg{font-family:sans-serif;font-size:16px;}#mermaid-1619624461761 .actor{stroke:hsl(259.6261682243,59.7765363128%,87.9019607843%);fill:#ECECFF;}#mermaid-1619624461761 text.actor > tspan{fill:black;stroke:none;}#mermaid-1619624461761 .actor-line{stroke:grey;}#mermaid-1619624461761 .messageLine0{stroke-width:1.5;stroke-dasharray:none;stroke:#333;}#mermaid-1619624461761 .messageLine1{stroke-width:1.5;stroke-dasharray:2,2;stroke:#333;}#mermaid-1619624461761 #arrowhead path{fill:#333;stroke:#333;}#mermaid-1619624461761 .sequenceNumber{fill:white;}#mermaid-1619624461761 #sequencenumber{fill:#333;}#mermaid-1619624461761 #crosshead path{fill:#333;stroke:#333;}#mermaid-1619624461761 .messageText{fill:#333;stroke:#333;}#mermaid-1619624461761 .labelBox{stroke:hsl(259.6261682243,59.7765363128%,87.9019607843%);fill:#ECECFF;}#mermaid-1619624461761 .labelText,#mermaid-1619624461761 .labelText > tspan{fill:black;stroke:none;}#mermaid-1619624461761 .loopText,#mermaid-1619624461761 .loopText > tspan{fill:black;stroke:none;}#mermaid-1619624461761 .loopLine{stroke-width:2px;stroke-dasharray:2,2;stroke:hsl(259.6261682243,59.7765363128%,87.9019607843%);fill:hsl(259.6261682243,59.7765363128%,87.9019607843%);}#mermaid-1619624461761 .note{stroke:#aaaa33;fill:#fff5ad;}#mermaid-1619624461761 .noteText,#mermaid-1619624461761 .noteText > tspan{fill:black;stroke:none;}#mermaid-1619624461761 .activation0{fill:#f4f4f4;stroke:#666;}#mermaid-1619624461761 .activation1{fill:#f4f4f4;stroke:#666;}#mermaid-1619624461761 .activation2{fill:#f4f4f4;stroke:#666;}#mermaid-1619624461761:root{--mermaid-font-family:sans-serif;}#mermaid-1619624461761 sequence{fill:apa;}\"), mdx(\"g\", {\n    parentName: \"svg\"\n  }), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"line\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"actor0\",\n    \"x1\": \"75\",\n    \"y1\": \"5\",\n    \"x2\": \"75\",\n    \"y2\": \"238\",\n    \"className\": \"actor-line\",\n    \"strokeWidth\": \"0.5px\",\n    \"stroke\": \"#999\"\n  })), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"0\",\n    \"y\": \"0\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"32.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"75\",\n    \"dy\": \"0\"\n  }), \"Generated Client\"))), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"line\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"actor1\",\n    \"x1\": \"417\",\n    \"y1\": \"5\",\n    \"x2\": \"417\",\n    \"y2\": \"238\",\n    \"className\": \"actor-line\",\n    \"strokeWidth\": \"0.5px\",\n    \"stroke\": \"#999\"\n  })), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"342\",\n    \"y\": \"0\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"417\",\n    \"y\": \"32.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"417\",\n    \"dy\": \"0\"\n  }), \"GraphQL Server\"))), mdx(\"defs\", {\n    parentName: \"svg\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"arrowhead\",\n    \"refX\": \"5\",\n    \"refY\": \"2\",\n    \"markerWidth\": \"6\",\n    \"markerHeight\": \"4\",\n    \"orient\": \"auto\"\n  }), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"d\": \"M 0,0 V 4 L6,2 Z\"\n  })))), mdx(\"defs\", {\n    parentName: \"svg\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"crosshead\",\n    \"markerWidth\": \"15\",\n    \"markerHeight\": \"8\",\n    \"orient\": \"auto\",\n    \"refX\": \"16\",\n    \"refY\": \"4\"\n  }), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"fill\": \"black\",\n    \"stroke\": \"#000000\",\n    \"strokeWidth\": \"1px\",\n    \"d\": \"M 9,2 V 6 L16,4 Z\",\n    \"style\": {\n      \"strokeDasharray\": \"0, 0\"\n    }\n  })), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"strokeWidth\": \"1px\",\n    \"d\": \"M 0,1 L 6,7 M 6,1 L 0,7\",\n    \"style\": {\n      \"strokeDasharray\": \"0, 0\"\n    }\n  })))), mdx(\"defs\", {\n    parentName: \"svg\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"sequencenumber\",\n    \"refX\": \"15\",\n    \"refY\": \"15\",\n    \"markerWidth\": \"60\",\n    \"markerHeight\": \"40\",\n    \"orient\": \"auto\"\n  }), mdx(\"circle\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"cx\": \"15\",\n    \"cy\": \"15\",\n    \"r\": \"6\"\n  })))), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"246\",\n    \"y\": \"80\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"Request: { \\\"id\\\": \\\"abc\\\" \\\"variables\\\": \\\"...\\\" }\"), mdx(\"line\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x1\": \"75\",\n    \"y1\": \"109\",\n    \"x2\": \"417\",\n    \"y2\": \"109\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"246\",\n    \"y\": \"124\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"Response: { \\\"data\\\": { \\\"foo\\\": { ... } } }\"), mdx(\"line\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x1\": \"417\",\n    \"y1\": \"153\",\n    \"x2\": \"75\",\n    \"y2\": \"153\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"0\",\n    \"y\": \"173\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"205.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"75\",\n    \"dy\": \"0\"\n  }), \"Generated Client\"))), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"342\",\n    \"y\": \"173\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"417\",\n    \"y\": \"205.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"417\",\n    \"dy\": \"0\"\n  }), \"GraphQL Server\"))))), mdx(\"h1\", null, \"Setup\"), mdx(\"p\", null, \"In the following tutorial, we will walk you through creating a Strawberry Shake GraphQL client and configuring it to support persisted queries.\"), mdx(\"h2\", null, \"Step 1: Create a console project\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#how-it-works","title":"How it works"},{"url":"#setup","title":"Setup","items":[{"url":"#step-1-create-a-console-project","title":"Step 1: Create a console project"}]}]}}},"site":{"siteMetadata":{"siteUrl":"https://chillicream.com","repositoryUrl":"https://github.com/ChilliCream/hotchocolate","tools":{"slack":"http://bit.ly/joinchilli"}}},"config":{"products":[{"path":"hotchocolate","title":"Hot Chocolate","description":"Build your own thin GraphQL API layer on top of any resource.","versions":[{"path":"","title":"v11.1 (latest)","items":[{"path":"index","title":"Introduction","items":null},{"path":"get-started","title":"Get Started","items":null},{"path":"defining-a-schema","title":"Defining a schema","items":[{"path":"index","title":"Schema basics"},{"path":"descriptions","title":"Schema Documentation"},{"path":"operations","title":"Operations"},{"path":"versioning","title":"Versioning"},{"path":"unions-and-interfaces","title":"Unions and Interfaces"},{"path":"extending-types","title":"Extending types"},{"path":"scalars","title":"Scalars"},{"path":"directives","title":"Directives"}]},{"path":"fetching-data","title":"Fetching data","items":[{"path":"index","title":"Resolver"},{"path":"fetching-from-databases","title":"Fetching from Databases"},{"path":"fetching-from-rest","title":"Fetching from REST"},{"path":"dataloader","title":"DataLoader"},{"path":"pagination","title":"Pagination"},{"path":"filtering","title":"Filtering"},{"path":"sorting","title":"Sorting"},{"path":"projections","title":"Projections"}]},{"path":"distributed-schema","title":"Distributed Schemas","items":[{"path":"index","title":"Overview"},{"path":"schema-stitching","title":"Schema Stitching"},{"path":"schema-federations","title":"Schema Federations"},{"path":"schema-configuration","title":"Schema Configuration"}]},{"path":"integrations","title":"Integrations","items":[{"path":"index","title":"Overview"},{"path":"entity-framework","title":"Entity Framework"},{"path":"spatial-data","title":"Spatial Data"},{"path":"mongodb","title":"MongoDB"}]},{"path":"performance","title":"Performance","items":[{"path":"index","title":"Overview"},{"path":"persisted-queries","title":"Persisted queries"},{"path":"automatic-persisted-queries","title":"Automatic persisted queries"}]},{"path":"api-reference","title":"API Reference","items":[{"path":"index","title":"Overview"},{"path":"object-type","title":"Object Type"},{"path":"custom-attributes","title":"Custom Attributes"},{"path":"language","title":"Language"},{"path":"extending-filtering","title":"Extending Filtering"},{"path":"visitors","title":"Visitors"},{"path":"aspnetcore","title":"ASP.NET Core"},{"path":"dependency-injection","title":"Dependency Injection"},{"path":"executable","title":"Executable"},{"path":"apollo-tracing","title":"Apollo Tracing"},{"path":"migrate-from-10-to-11","title":"Migrate from 10.5 to 11.0"}]}]},{"path":"v10","title":"v10 (previous)","items":[{"path":"index","title":"Introduction","items":null},{"path":"code-first","title":"Code-First","items":null},{"path":"schema-first","title":"Schema-First","items":null},{"path":"schema","title":"Schema","items":[{"path":"index","title":"Schema"},{"path":"object-type","title":"Object Type"},{"path":"interface-type","title":"Interface Type"},{"path":"union-type","title":"Union Type"},{"path":"input-object-type","title":"Input Object Type"},{"path":"enum-type","title":"Enum Type"},{"path":"descriptions","title":"Schema Descriptions"},{"path":"custom-scalar-types","title":"Scalar Type Support"},{"path":"descriptor-attributes","title":"Descriptor Attributes"},{"path":"extending-types","title":"Custom Base Classes"},{"path":"directives","title":"Directives"},{"path":"resolvers","title":"Resolvers"},{"path":"relay","title":"Relay"},{"path":"conventions","title":"Conventions"},{"path":"options","title":"Schema Options"}]},{"path":"data-fetching","title":"Data Fetching","items":[{"path":"index","title":"Data Loaders"},{"path":"pagination","title":"Pagination"},{"path":"filters","title":"Filters"}]},{"path":"security","title":"Security","items":[{"path":"index","title":"Authorization"},{"path":"security","title":"Security"}]},{"path":"execution-engine","title":"Execution Engine","items":[{"path":"index","title":"Middleware"},{"path":"validation-rules","title":"Validation Rules"},{"path":"instrumentation","title":"Instrumentation"},{"path":"apollo-tracing","title":"Apollo Tracing"},{"path":"batching","title":"Batching"},{"path":"persisted-queries","title":"Persisted Queries"},{"path":"custom-context-data","title":"Custom Context Data"},{"path":"subscriptions","title":"Subscriptions"},{"path":"type-conversion","title":"Type Conversion"},{"path":"error-filter","title":"Error Filter"},{"path":"execution-options","title":"Execution Options"}]},{"path":"server","title":"Server","items":[{"path":"index","title":"ASP.Net"},{"path":"dependency-injection","title":"Dependency Injection"}]},{"path":"stitching","title":"Schema Stitching","items":null},{"path":"tooling","title":"Tooling","items":null},{"path":"advanced","title":"Advanced","items":[{"path":"index","title":"Parser"},{"path":"dotnet-cli","title":".Net CLI"}]},{"path":"tutorials","title":"Tutorials","items":[{"path":"index","title":"Entity Framework"}]},{"path":"examples","title":"Examples","items":[{"path":"index","title":"Star Wars"},{"path":"slack-clone","title":"Slack Clone"},{"path":"other-examples","title":"Other Examples"}]}]}]},{"path":"bananacakepop","title":"Banana Cake Pop","description":"Use this GUI to get deep insights from any GraphQL API.","versions":[{"path":"","title":"v1 (preview)","items":[{"path":"index","title":"Introduction","items":null}]}]},{"path":"strawberryshake","title":"Strawberry Shake","description":"The only GraphQL client you will every need in the .NET ecosystem.","versions":[{"path":"","title":"v11 (preview)","items":[{"path":"index","title":"Introduction","items":null},{"path":"get-started","title":"Get Started","items":[{"path":"index","title":"Blazor"},{"path":"xamarin","title":"Xamarin"},{"path":"console","title":"Console"}]},{"path":"subscriptions","title":"Subscriptions","items":null},{"path":"tooling","title":"Tooling / CLI","items":null},{"path":"caching","title":"Caching","items":[{"path":"index","title":"Overview"},{"path":"entities","title":"Entities"},{"path":"invalidation","title":"Invalidation"}]},{"path":"performance","title":"Performance","items":[{"path":"index","title":"Overview"},{"path":"persisted-queries","title":"Persisted Queries"},{"path":"persisted-state","title":"Persisted State"}]},{"path":"networking","title":"Networking","items":[{"path":"index","title":"Protocols"},{"path":"authentication","title":"Authentication"}]},{"path":"scalars","title":"Scalars","items":null}]}]},{"path":"greendonut","title":"Green Donut","description":"Configure data loaders and caching for GraphQL endpoints.","versions":[{"path":"","title":"v11 (latest)","items":[{"path":"index","title":"Introduction","items":null}]},{"path":"v10","title":"v10 (previous)","items":[{"path":"index","title":"Introduction","items":null},{"path":"installation","title":"Installation","items":null},{"path":"usage","title":"Usage","items":null},{"path":"api","title":"API","items":null},{"path":"advanced-concepts","title":"Advanced Concepts","items":[{"path":"index","title":"Custom DataLoader"},{"path":"diagnostics","title":"Diagnostic Events"}]}]}]}]}},"pageContext":{"originPath":"strawberryshake/performance/persisted-queries.md"}},"staticQueryHashes":["1014893094","2890364758","4218812017"]}