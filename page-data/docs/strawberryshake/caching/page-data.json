{"componentChunkName":"component---src-templates-doc-page-template-tsx","path":"/docs/strawberryshake/caching","result":{"data":{"file":{"childMdx":{"fields":{"slug":"/strawberryshake/caching/"},"frontmatter":{"title":"Caching"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Caching\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"We are still working on the documentation for Strawberry Shake, so help us by finding typos, missing things, or write some additional docs with us.\")), mdx(\"p\", null, \"StrawberryShake stores the result of GraphQL requests in a normalized entity store. The entity store allows your client to execute GraphQL requests with various strategies to reduce the need for network requests. Moreover, the normalized entities are updated by every request the client does, which means that you can build fully reactive components that change as the state in the store changes.\"), mdx(\"div\", {\n    \"className\": \"mermaid\",\n    \"data-processed\": \"true\"\n  }, mdx(\"svg\", _extends({\n    parentName: \"div\"\n  }, {\n    \"id\": \"mermaid-1620340372492\",\n    \"width\": \"100%\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"height\": \"473\",\n    \"style\": {\n      \"maxWidth\": \"1033px\"\n    },\n    \"viewBox\": \"-50 -10 1033 473\"\n  }), mdx(\"style\", {\n    parentName: \"svg\"\n  }, \"#mermaid-1620340372492{font-family:sans-serif;font-size:16px;fill:#333;}#mermaid-1620340372492 .error-icon{fill:#552222;}#mermaid-1620340372492 .error-text{fill:#552222;stroke:#552222;}#mermaid-1620340372492 .edge-thickness-normal{stroke-width:2px;}#mermaid-1620340372492 .edge-thickness-thick{stroke-width:3.5px;}#mermaid-1620340372492 .edge-pattern-solid{stroke-dasharray:0;}#mermaid-1620340372492 .edge-pattern-dashed{stroke-dasharray:3;}#mermaid-1620340372492 .edge-pattern-dotted{stroke-dasharray:2;}#mermaid-1620340372492 .marker{fill:#333333;}#mermaid-1620340372492 .marker.cross{stroke:#333333;}#mermaid-1620340372492 svg{font-family:sans-serif;font-size:16px;}#mermaid-1620340372492 .actor{stroke:hsl(259.6261682243,59.7765363128%,87.9019607843%);fill:#ECECFF;}#mermaid-1620340372492 text.actor > tspan{fill:black;stroke:none;}#mermaid-1620340372492 .actor-line{stroke:grey;}#mermaid-1620340372492 .messageLine0{stroke-width:1.5;stroke-dasharray:none;stroke:#333;}#mermaid-1620340372492 .messageLine1{stroke-width:1.5;stroke-dasharray:2,2;stroke:#333;}#mermaid-1620340372492 #arrowhead path{fill:#333;stroke:#333;}#mermaid-1620340372492 .sequenceNumber{fill:white;}#mermaid-1620340372492 #sequencenumber{fill:#333;}#mermaid-1620340372492 #crosshead path{fill:#333;stroke:#333;}#mermaid-1620340372492 .messageText{fill:#333;stroke:#333;}#mermaid-1620340372492 .labelBox{stroke:hsl(259.6261682243,59.7765363128%,87.9019607843%);fill:#ECECFF;}#mermaid-1620340372492 .labelText,#mermaid-1620340372492 .labelText > tspan{fill:black;stroke:none;}#mermaid-1620340372492 .loopText,#mermaid-1620340372492 .loopText > tspan{fill:black;stroke:none;}#mermaid-1620340372492 .loopLine{stroke-width:2px;stroke-dasharray:2,2;stroke:hsl(259.6261682243,59.7765363128%,87.9019607843%);fill:hsl(259.6261682243,59.7765363128%,87.9019607843%);}#mermaid-1620340372492 .note{stroke:#aaaa33;fill:#fff5ad;}#mermaid-1620340372492 .noteText,#mermaid-1620340372492 .noteText > tspan{fill:black;stroke:none;}#mermaid-1620340372492 .activation0{fill:#f4f4f4;stroke:#666;}#mermaid-1620340372492 .activation1{fill:#f4f4f4;stroke:#666;}#mermaid-1620340372492 .activation2{fill:#f4f4f4;stroke:#666;}#mermaid-1620340372492:root{--mermaid-font-family:sans-serif;}#mermaid-1620340372492 sequence{fill:apa;}\"), mdx(\"g\", {\n    parentName: \"svg\"\n  }), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"line\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"actor0\",\n    \"x1\": \"75\",\n    \"y1\": \"5\",\n    \"x2\": \"75\",\n    \"y2\": \"462\",\n    \"className\": \"actor-line\",\n    \"strokeWidth\": \"0.5px\",\n    \"stroke\": \"#999\"\n  })), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"0\",\n    \"y\": \"0\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"32.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"75\",\n    \"dy\": \"0\"\n  }), \"Generated Client\"))), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"line\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"actor1\",\n    \"x1\": \"316\",\n    \"y1\": \"5\",\n    \"x2\": \"316\",\n    \"y2\": \"462\",\n    \"className\": \"actor-line\",\n    \"strokeWidth\": \"0.5px\",\n    \"stroke\": \"#999\"\n  })), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"241\",\n    \"y\": \"0\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"316\",\n    \"y\": \"32.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"316\",\n    \"dy\": \"0\"\n  }), \"Operation Store\"))), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"line\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"actor2\",\n    \"x1\": \"591\",\n    \"y1\": \"5\",\n    \"x2\": \"591\",\n    \"y2\": \"462\",\n    \"className\": \"actor-line\",\n    \"strokeWidth\": \"0.5px\",\n    \"stroke\": \"#999\"\n  })), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"516\",\n    \"y\": \"0\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"591\",\n    \"y\": \"32.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"591\",\n    \"dy\": \"0\"\n  }), \"Entity Store\"))), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"line\", _extends({\n    parentName: \"g\"\n  }, {\n    \"id\": \"actor3\",\n    \"x1\": \"858\",\n    \"y1\": \"5\",\n    \"x2\": \"858\",\n    \"y2\": \"462\",\n    \"className\": \"actor-line\",\n    \"strokeWidth\": \"0.5px\",\n    \"stroke\": \"#999\"\n  })), mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"783\",\n    \"y\": \"0\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"858\",\n    \"y\": \"32.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"858\",\n    \"dy\": \"0\"\n  }), \"GraphQL Server\"))), mdx(\"defs\", {\n    parentName: \"svg\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"arrowhead\",\n    \"refX\": \"5\",\n    \"refY\": \"2\",\n    \"markerWidth\": \"6\",\n    \"markerHeight\": \"4\",\n    \"orient\": \"auto\"\n  }), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"d\": \"M 0,0 V 4 L6,2 Z\"\n  })))), mdx(\"defs\", {\n    parentName: \"svg\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"crosshead\",\n    \"markerWidth\": \"15\",\n    \"markerHeight\": \"8\",\n    \"orient\": \"auto\",\n    \"refX\": \"16\",\n    \"refY\": \"4\"\n  }), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"fill\": \"black\",\n    \"stroke\": \"#000000\",\n    \"strokeWidth\": \"1px\",\n    \"d\": \"M 9,2 V 6 L16,4 Z\",\n    \"style\": {\n      \"strokeDasharray\": \"0, 0\"\n    }\n  })), mdx(\"path\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"fill\": \"none\",\n    \"stroke\": \"#000000\",\n    \"strokeWidth\": \"1px\",\n    \"d\": \"M 0,1 L 6,7 M 6,1 L 0,7\",\n    \"style\": {\n      \"strokeDasharray\": \"0, 0\"\n    }\n  })))), mdx(\"defs\", {\n    parentName: \"svg\"\n  }, mdx(\"marker\", _extends({\n    parentName: \"defs\"\n  }, {\n    \"id\": \"sequencenumber\",\n    \"refX\": \"15\",\n    \"refY\": \"15\",\n    \"markerWidth\": \"60\",\n    \"markerHeight\": \"40\",\n    \"orient\": \"auto\"\n  }), mdx(\"circle\", _extends({\n    parentName: \"marker\"\n  }, {\n    \"cx\": \"15\",\n    \"cy\": \"15\",\n    \"r\": \"6\"\n  })))), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"196\",\n    \"y\": \"80\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"Queries local store\"), mdx(\"line\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x1\": \"75\",\n    \"y1\": \"109\",\n    \"x2\": \"316\",\n    \"y2\": \"109\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"587\",\n    \"y\": \"124\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"Queries GraphQL server\"), mdx(\"line\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x1\": \"316\",\n    \"y1\": \"153\",\n    \"x2\": \"858\",\n    \"y2\": \"153\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"481.5\",\n    \"y\": \"163\",\n    \"fill\": \"#EDF2AE\",\n    \"stroke\": \"#666\",\n    \"width\": \"219\",\n    \"height\": \"36\",\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"className\": \"note\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"591\",\n    \"y\": \"168\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"noteText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"591\"\n  }), \"Normalize response into entities\"))), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"725\",\n    \"y\": \"214\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"Returns GraphQL response\"), mdx(\"line\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x1\": \"858\",\n    \"y1\": \"243\",\n    \"x2\": \"591\",\n    \"y2\": \"243\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"196.5\",\n    \"y\": \"253\",\n    \"fill\": \"#EDF2AE\",\n    \"stroke\": \"#666\",\n    \"width\": \"239\",\n    \"height\": \"36\",\n    \"rx\": \"0\",\n    \"ry\": \"0\",\n    \"className\": \"note\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"316\",\n    \"y\": \"258\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"noteText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"316\"\n  }), \"Builds operation result from entities\"))), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"454\",\n    \"y\": \"304\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"Returns entities for operation\"), mdx(\"line\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x1\": \"591\",\n    \"y1\": \"333\",\n    \"x2\": \"316\",\n    \"y2\": \"333\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"text\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x\": \"196\",\n    \"y\": \"348\",\n    \"textAnchor\": \"middle\",\n    \"dominantBaseline\": \"middle\",\n    \"alignmentBaseline\": \"middle\",\n    \"className\": \"messageText\",\n    \"dy\": \"1em\",\n    \"style\": {\n      \"fontFamily\": \"\\\"trebuchet ms\\\", verdana, arial\",\n      \"fontSize\": \"16px\",\n      \"fontWeight\": \"400\"\n    }\n  }), \"Returns operation result\"), mdx(\"line\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"x1\": \"316\",\n    \"y1\": \"377\",\n    \"x2\": \"75\",\n    \"y2\": \"377\",\n    \"className\": \"messageLine0\",\n    \"strokeWidth\": \"2\",\n    \"stroke\": \"none\",\n    \"markerEnd\": \"url(#arrowhead)\",\n    \"style\": {\n      \"fill\": \"none\"\n    }\n  })), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"0\",\n    \"y\": \"397\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"75\",\n    \"y\": \"429.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"75\",\n    \"dy\": \"0\"\n  }), \"Generated Client\"))), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"241\",\n    \"y\": \"397\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"316\",\n    \"y\": \"429.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"316\",\n    \"dy\": \"0\"\n  }), \"Operation Store\"))), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"516\",\n    \"y\": \"397\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"591\",\n    \"y\": \"429.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"591\",\n    \"dy\": \"0\"\n  }), \"Entity Store\"))), mdx(\"g\", {\n    parentName: \"svg\"\n  }, mdx(\"rect\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"783\",\n    \"y\": \"397\",\n    \"fill\": \"#eaeaea\",\n    \"stroke\": \"#666\",\n    \"width\": \"150\",\n    \"height\": \"65\",\n    \"rx\": \"3\",\n    \"ry\": \"3\",\n    \"className\": \"actor\"\n  })), mdx(\"text\", _extends({\n    parentName: \"g\"\n  }, {\n    \"x\": \"858\",\n    \"y\": \"429.5\",\n    \"dominantBaseline\": \"central\",\n    \"alignmentBaseline\": \"central\",\n    \"className\": \"actor\",\n    \"style\": {\n      \"textAnchor\": \"middle\",\n      \"fontSize\": \"14px\",\n      \"fontWeight\": \"400\",\n      \"fontFamily\": \"Open-Sans, sans-serif\"\n    }\n  }), mdx(\"tspan\", _extends({\n    parentName: \"text\"\n  }, {\n    \"x\": \"858\",\n    \"dy\": \"0\"\n  }), \"GraphQL Server\"))))), mdx(\"h1\", null, \"Strategies\"), mdx(\"p\", null, \"We support three basic strategies to interact with the store and fetch data.\"), mdx(\"h2\", null, \"Network Only\"), mdx(\"p\", null, \"Network only is the simplest strategy and will fetch from the network and only then update the store. This means that our initial call will always get fresh data and at the same time update other request results watching the same entities.\"), mdx(\"p\", null, \"If we use the reactive APIs in combination with network only we will still get updates whenever other requests fetch data for the entities we are watching.\"), mdx(\"h2\", null, \"Cache First\"), mdx(\"p\", null, \"Cache first is essentially the opposite of network only since it will first fetch from the store, and if the store has the data needed, it will not make any network requests. If the store does not have the data needed, it will go to the network and try to get the data and update the store.\"), mdx(\"h2\", null, \"Cache and Network\"), mdx(\"p\", null, \"The last strategy is a combination of the first two. The client will first try to get the data from the store. This gives us fast data response time if the store already has the data. After that the store will update that data for this request with data from the network which in consequence will trigger our subscription and serve us new data.\"), mdx(\"h2\", null, \"Configuration\"), mdx(\"p\", null, \"The global strategy default can be set on our dependency injection setup method.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-csharp\"\n  }), \"builder.Services\\n    .AddConferenceClient(ExecutionStrategy.CacheFirst) // <----\\n    .ConfigureHttpClient(client => client.BaseAddress = new Uri(\\\"http://localhost:5050/graphql\\\"))\\n    .ConfigureWebSocketClient(client => client.Uri = new Uri(\\\"ws://localhost:5050/graphql\\\"));\\n\")), mdx(\"p\", null, \"The global strategy default can then be overwritten by any \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Watch\"), \" method for a particular request.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-csharp\"\n  }), \"storeSession =\\n    ConferenceClient\\n        .GetSessions\\n        .Watch(ExecutionStrategy.CacheFirst) // <----\\n        .Where(t => !t.Errors.Any())\\n        .Select(t => t.Data!.Sessions!.Nodes)\\n        .Subscribe(result =>\\n        {\\n            sessions = result;\\n            StateHasChanged();\\n        });\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#strategies","title":"Strategies","items":[{"url":"#network-only","title":"Network Only"},{"url":"#cache-first","title":"Cache First"},{"url":"#cache-and-network","title":"Cache and Network"},{"url":"#configuration","title":"Configuration"}]}]}}},"site":{"siteMetadata":{"siteUrl":"https://chillicream.com","repositoryUrl":"https://github.com/ChilliCream/hotchocolate","tools":{"slack":"https://bit.ly/join-chillicream-slack"}}},"config":{"products":[{"path":"hotchocolate","title":"Hot Chocolate","description":"Build your own thin GraphQL API layer on top of any resource.","versions":[{"path":"","title":"v11.1 (latest)","items":[{"path":"index","title":"Introduction","items":null},{"path":"get-started","title":"Get Started","items":null},{"path":"defining-a-schema","title":"Defining a schema","items":[{"path":"index","title":"Schema basics"},{"path":"descriptions","title":"Schema Documentation"},{"path":"operations","title":"Operations"},{"path":"versioning","title":"Versioning"},{"path":"unions-and-interfaces","title":"Unions and Interfaces"},{"path":"extending-types","title":"Extending types"},{"path":"scalars","title":"Scalars"},{"path":"directives","title":"Directives"}]},{"path":"fetching-data","title":"Fetching data","items":[{"path":"index","title":"Resolver"},{"path":"fetching-from-databases","title":"Fetching from Databases"},{"path":"fetching-from-rest","title":"Fetching from REST"},{"path":"dataloader","title":"DataLoader"},{"path":"pagination","title":"Pagination"},{"path":"filtering","title":"Filtering"},{"path":"sorting","title":"Sorting"},{"path":"projections","title":"Projections"}]},{"path":"distributed-schema","title":"Distributed Schemas","items":[{"path":"index","title":"Overview"},{"path":"schema-stitching","title":"Schema Stitching"},{"path":"schema-federations","title":"Schema Federations"},{"path":"schema-configuration","title":"Schema Configuration"}]},{"path":"integrations","title":"Integrations","items":[{"path":"index","title":"Overview"},{"path":"entity-framework","title":"Entity Framework"},{"path":"spatial-data","title":"Spatial Data"},{"path":"mongodb","title":"MongoDB"}]},{"path":"performance","title":"Performance","items":[{"path":"index","title":"Overview"},{"path":"persisted-queries","title":"Persisted queries"},{"path":"automatic-persisted-queries","title":"Automatic persisted queries"}]},{"path":"api-reference","title":"API Reference","items":[{"path":"index","title":"Overview"},{"path":"object-type","title":"Object Type"},{"path":"custom-attributes","title":"Custom Attributes"},{"path":"language","title":"Language"},{"path":"extending-filtering","title":"Extending Filtering"},{"path":"visitors","title":"Visitors"},{"path":"aspnetcore","title":"ASP.NET Core"},{"path":"dependency-injection","title":"Dependency Injection"},{"path":"executable","title":"Executable"},{"path":"apollo-tracing","title":"Apollo Tracing"},{"path":"migrate-from-10-to-11","title":"Migrate from 10.5 to 11.0"}]}]},{"path":"v10","title":"v10 (previous)","items":[{"path":"index","title":"Introduction","items":null},{"path":"code-first","title":"Code-First","items":null},{"path":"schema-first","title":"Schema-First","items":null},{"path":"schema","title":"Schema","items":[{"path":"index","title":"Schema"},{"path":"object-type","title":"Object Type"},{"path":"interface-type","title":"Interface Type"},{"path":"union-type","title":"Union Type"},{"path":"input-object-type","title":"Input Object Type"},{"path":"enum-type","title":"Enum Type"},{"path":"descriptions","title":"Schema Descriptions"},{"path":"custom-scalar-types","title":"Scalar Type Support"},{"path":"descriptor-attributes","title":"Descriptor Attributes"},{"path":"extending-types","title":"Custom Base Classes"},{"path":"directives","title":"Directives"},{"path":"resolvers","title":"Resolvers"},{"path":"relay","title":"Relay"},{"path":"conventions","title":"Conventions"},{"path":"options","title":"Schema Options"}]},{"path":"data-fetching","title":"Data Fetching","items":[{"path":"index","title":"Data Loaders"},{"path":"pagination","title":"Pagination"},{"path":"filters","title":"Filters"}]},{"path":"security","title":"Security","items":[{"path":"index","title":"Authorization"},{"path":"security","title":"Security"}]},{"path":"execution-engine","title":"Execution Engine","items":[{"path":"index","title":"Middleware"},{"path":"validation-rules","title":"Validation Rules"},{"path":"instrumentation","title":"Instrumentation"},{"path":"apollo-tracing","title":"Apollo Tracing"},{"path":"batching","title":"Batching"},{"path":"persisted-queries","title":"Persisted Queries"},{"path":"custom-context-data","title":"Custom Context Data"},{"path":"subscriptions","title":"Subscriptions"},{"path":"type-conversion","title":"Type Conversion"},{"path":"error-filter","title":"Error Filter"},{"path":"execution-options","title":"Execution Options"}]},{"path":"server","title":"Server","items":[{"path":"index","title":"ASP.Net"},{"path":"dependency-injection","title":"Dependency Injection"}]},{"path":"stitching","title":"Schema Stitching","items":null},{"path":"tooling","title":"Tooling","items":null},{"path":"advanced","title":"Advanced","items":[{"path":"index","title":"Parser"},{"path":"dotnet-cli","title":".Net CLI"}]},{"path":"tutorials","title":"Tutorials","items":[{"path":"index","title":"Entity Framework"}]},{"path":"examples","title":"Examples","items":[{"path":"index","title":"Star Wars"},{"path":"slack-clone","title":"Slack Clone"},{"path":"other-examples","title":"Other Examples"}]}]}]},{"path":"bananacakepop","title":"Banana Cake Pop","description":"Use this GUI to get deep insights from any GraphQL API.","versions":[{"path":"","title":"v1 (preview)","items":[{"path":"index","title":"Introduction","items":null}]}]},{"path":"strawberryshake","title":"Strawberry Shake","description":"The only GraphQL client you will every need in the .NET ecosystem.","versions":[{"path":"","title":"v11 (preview)","items":[{"path":"index","title":"Introduction","items":null},{"path":"get-started","title":"Get Started","items":[{"path":"index","title":"Blazor"},{"path":"xamarin","title":"Xamarin"},{"path":"console","title":"Console"}]},{"path":"subscriptions","title":"Subscriptions","items":null},{"path":"tooling","title":"Tooling / CLI","items":null},{"path":"caching","title":"Caching","items":[{"path":"index","title":"Overview"},{"path":"entities","title":"Entities"},{"path":"invalidation","title":"Invalidation"}]},{"path":"performance","title":"Performance","items":[{"path":"index","title":"Overview"},{"path":"persisted-queries","title":"Persisted Queries"},{"path":"persisted-state","title":"Persisted State"}]},{"path":"networking","title":"Networking","items":[{"path":"index","title":"Protocols"},{"path":"authentication","title":"Authentication"}]},{"path":"scalars","title":"Scalars","items":null}]}]},{"path":"greendonut","title":"Green Donut","description":"Configure data loaders and caching for GraphQL endpoints.","versions":[{"path":"","title":"v11 (latest)","items":[{"path":"index","title":"Introduction","items":null}]},{"path":"v10","title":"v10 (previous)","items":[{"path":"index","title":"Introduction","items":null},{"path":"installation","title":"Installation","items":null},{"path":"usage","title":"Usage","items":null},{"path":"api","title":"API","items":null},{"path":"advanced-concepts","title":"Advanced Concepts","items":[{"path":"index","title":"Custom DataLoader"},{"path":"diagnostics","title":"Diagnostic Events"}]}]}]}]}},"pageContext":{"originPath":"strawberryshake/caching/index.md"}},"staticQueryHashes":["1014893094","2890364758","4218812017"]}