namespace StarWarsClient
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetHeroResultFactory
        : IOperationResultDataFactory<GetHeroResult>
    {
        private readonly IEntityStore _entityStore;
        private readonly IEntityMapper<HumanEntity, HumanHero> _humanHeroFromHumanEntityMapper;
        private readonly IEntityMapper<DroidEntity, DroidHero> _droidHeroFromDroidEntityMapper;

        public GetHeroResultFactory(
            IEntityStore entityStore,
            IEntityMapper<HumanEntity, HumanHero> humanHeroFromHumanEntityMapper,
            IEntityMapper<DroidEntity, DroidHero> droidHeroFromDroidEntityMapper)
        {
            _entityStore = entityStore
                 ?? throw new ArgumentNullException(nameof(entityStore));
            _humanHeroFromHumanEntityMapper = humanHeroFromHumanEntityMapper
                 ?? throw new ArgumentNullException(nameof(humanHeroFromHumanEntityMapper));
            _droidHeroFromDroidEntityMapper = droidHeroFromDroidEntityMapper
                 ?? throw new ArgumentNullException(nameof(droidHeroFromDroidEntityMapper));
        }

        public GetHeroResult Create(IOperationResultDataInfo dataInfo)
        {
            if (dataInfo is GetHeroResultInfo info)
            {
                IHero hero = default!;

                if (info.HeroId.Name.Equals(
                    "Human",
                    StringComparison.Ordinal
                ))
                {
                    hero = HumanHeroFromHumanEntityMapper(_entityStore.GetEntity<HumanEntity>(info.HeroId));
                }

                if (info.HeroId.Name.Equals(
                    "Droid",
                    StringComparison.Ordinal
                ))
                {
                    hero = DroidHeroFromDroidEntityMapper(_entityStore.GetEntity<DroidEntity>(info.HeroId));
                }

                return new GetHeroResult(
                    hero,
                    info.Version
                );
            }

            throw new ArgumentException("GetHeroResultInfo expected.");
        }
    }
}
