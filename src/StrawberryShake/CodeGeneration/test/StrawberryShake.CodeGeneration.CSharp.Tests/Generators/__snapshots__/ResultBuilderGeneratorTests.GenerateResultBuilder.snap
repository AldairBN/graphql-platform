namespace StarWarsClient
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public partial class GetHeroResultBuilder
        : IOperationResultBuilder<global::System.Text.Json.JsonElement, GetHeroResult>
    {
        private readonly IEntityStore _entityStore;
        private readonly Func<global::System.Text.Json.JsonElement, global::StrawberryShake.EntityId> _extractId;
        private readonly IOperationResultDataFactory<GetHeroResult> _resultDataFactory;
        private ILeafValueParser<string, string> _stringParser;
        private ILeafValueParser<int, int> _intParser;

        public GetHeroResultBuilder(
            IEntityStore entityStore,
            Func<global::System.Text.Json.JsonElement, global::StrawberryShake.EntityId> extractId,
            IOperationResultDataFactory<GetHeroResult> resultDataFactory,
            ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore
                 ?? throw new ArgumentNullException(nameof(entityStore));
            _extractId = extractId
                 ?? throw new ArgumentNullException(nameof(extractId));
            _resultDataFactory = resultDataFactory
                 ?? throw new ArgumentNullException(nameof(resultDataFactory));
            _stringParser = serializerResolver.GetLeafValueParser<string, string>("String")
                 ?? throw new ArgumentNullException(nameof(_stringParser));
            _intParser = serializerResolver.GetLeafValueParser<int, int>("Int")
                 ?? throw new ArgumentNullException(nameof(_intParser));
        }

        public IOperationResult<GetHeroResult> Build(Response<JsonDocument> response)
        {
            (GetHeroResult Result, GetHeroResultInfo Info)? data = null;

            if (response.Body is not null
                && response.Body.RootElement.TryGetProperty("data", out JsonElement obj))
            {
                data = BuildData(obj);
            }

            return new OperationResult<GetHeroResult>(
                data?.Result,
                data?.Info,
                _resultDataFactory,
                null
            );
        }

        private (GetHeroResult, GetHeroResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            using IEntityUpdateSession session = _entityStore.BeginUpdate();
            var entityIds = new HashSet<global::StrawberryShake.EntityId>();

            global::StrawberryShake.EntityId HeroId = UpdateNonNullableIHeroEntity(
                obj.GetPropertyOrNull("hero"),
                entityIds
            );

            var resultInfo = new GetHeroResultInfo(
                HeroId,
                DeserializeNonNullableString(obj.GetPropertyOrNull("version")),
                entityIds,
                session.Version
            );

            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIHeroEntity(
            JsonElement? obj,
            ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (obj == null)
            {
                throw new InvalidOperationException();
            }

            global::StrawberryShake.EntityId entityId = _extractId(obj);
            entityIds.Add(entityId);

            if (entityId.Name.Equals("HumanHero", StringComparison.Ordinal))
            {
                HumanHeroEntity HumanHeroEntity = _entityStore.GetOrCreate<HumanHeroEntity>(entityId);
                entity.Name = DeserializeNonNullableString(obj.GetPropertyOrNull("name"));
                entity.Friends = DeserializeNonNullableFriendsConnectionData(
                    obj.GetPropertyOrNull("friends"),
                    entityIds
                );

                return entityId;
            }

            if (entityId.Name.Equals("DroidHero", StringComparison.Ordinal))
            {
                DroidHeroEntity DroidHeroEntity = _entityStore.GetOrCreate<DroidHeroEntity>(entityId);
                entity.Name = DeserializeNonNullableString(obj.GetPropertyOrNull("name"));
                entity.Friends = DeserializeNonNullableFriendsConnectionData(
                    obj.GetPropertyOrNull("friends"),
                    entityIds
                );

                return entityId;
            }

            throw new NotSupportedException();
        }

        private FriendsConnection DeserializeNonNullableFriendsConnectionData(
            JsonElement? obj,
            ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (obj == null)
            {
                throw new InvalidOperationException();
            }

            return new FriendsConnectionData(
                UpdateNonNullableICharacterEntityNonNullableArray(
                    obj.GetPropertyOrNull("nodes"),
                    entityIds
                ),
                DeserializeNonNullableInt(obj.GetPropertyOrNull("totalCount"))
            );
        }

        private IList<global::StrawberryShake.EntityId> UpdateNonNullableICharacterEntityNonNullableArray(
            JsonElement? obj,
            ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (obj == null)
            {
                throw new InvalidOperationException();
            }

            var iCharacters = new List<global::StrawberryShake.EntityId>();
            foreach (JsonElement child in obj.EnumerateArray())
            {
                iCharacters.Add(UpdateNonNullableICharacterEntity(
                    child,
                    entityIds
                ));
            }

            return iCharacters;
        }

        private global::StrawberryShake.EntityId UpdateNonNullableICharacterEntity(
            JsonElement? obj,
            ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (obj == null)
            {
                throw new InvalidOperationException();
            }

            global::StrawberryShake.EntityId entityId = _extractId(obj);
            entityIds.Add(entityId);

            if (entityId.Name.Equals("Droid", StringComparison.Ordinal))
            {
                DroidEntity DroidEntity = _entityStore.GetOrCreate<DroidEntity>(entityId);
                entity.Name = DeserializeNonNullableString(obj.GetPropertyOrNull("name"));

                return entityId;
            }

            if (entityId.Name.Equals("Human", StringComparison.Ordinal))
            {
                HumanEntity HumanEntity = _entityStore.GetOrCreate<HumanEntity>(entityId);
                entity.Name = DeserializeNonNullableString(obj.GetPropertyOrNull("name"));

                return entityId;
            }

            throw new NotSupportedException();
        }

        private int DeserializeNonNullableInt(global::System.Text.Json.JsonElement obj)
        {
            if (obj == null)
            {
                throw new InvalidOperationException();
            }

            return _intParser.Parse(obj.GetInt()!);
        }

        private string DeserializeNonNullableString(global::System.Text.Json.JsonElement obj)
        {
            if (obj == null)
            {
                throw new InvalidOperationException();
            }

            return _stringParser.Parse(obj.GetString()!);
        }
    }
}
